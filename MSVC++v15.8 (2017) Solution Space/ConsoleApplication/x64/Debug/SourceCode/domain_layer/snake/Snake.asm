; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__0A074437_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__86D65F0C_cstdlib DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__231D85A1_cstddef DB 01H
__843B0F21_limits DB 01H
__FFC6471F_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__69245D52_vcruntime_exception@h DB 01H
__536DB091_exception DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__A29A7DFB_string@h DB 01H
__86E03ACD_xutility DB 01H
__DB4EB944_xmemory DB 01H
__CC282F90_tuple DB 01H
__C9317CBB_xpolymorphic_allocator@h DB 01H
__3FA3F145_SDL_stdinc@h DB 01H
__1662896C_SDL_endian@h DB 01H
__E3097871_SDL_rect@h DB 01H
__BB5134BF_Snake@hpp DB 01H
__6A0B36D1_cmath DB 01H
__AF9D3FD8_xstring DB 01H
__DA238ACC_stdexcept DB 01H
__65AE1ACD_xcall_once@h DB 01H
__DAF308ED_system_error DB 01H
__36900320_vcruntime_typeinfo@h DB 01H
__F63FC9D4_typeinfo DB 01H
__389503AF_memory DB 01H
__14D054A0_xfacet DB 01H
__7242C389_ctype@h DB 01H
__E9B62A1C_xlocinfo DB 01H
__70A34BE9_xlocale DB 01H
__D0535D0F_xiosbase DB 01H
__EE242DFE_xlocnum DB 01H
__D17CECDD_ios DB 01H
__B704DB5E_Snake@cpp DB 01H
__0063A417_istream DB 01H
__63B3912D_ostream DB 01H
__D8833270_streambuf DB 01H
__C9967FC1_vector DB 01H
__48D2DAA7_iosfwd DB 01H
__B1DBDA87_utility DB 01H
__46C44D95_xstddef DB 01H
__59613C47_xatomic@h DB 01H
__1D12A9F2_xtgmath@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	?max@?$numeric_limits@_J@std@@SA_JXZ		; std::numeric_limits<__int64>::max
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??0_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??0_Iterator_base12@std@@QEAA@AEBU01@@Z		; std::_Iterator_base12::_Iterator_base12
PUBLIC	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z	; std::_Iterator_base12::operator=
PUBLIC	??1_Iterator_base12@std@@QEAA@XZ		; std::_Iterator_base12::~_Iterator_base12
PUBLIC	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
PUBLIC	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
PUBLIC	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ	; std::_Iterator_base12::_Orphan_me
PUBLIC	?Update@Snake@@QEAAXXZ				; Snake::Update
PUBLIC	?GrowBody@Snake@@QEAAXXZ			; Snake::GrowBody
PUBLIC	?SnakeCell@Snake@@QEAA_NHH@Z			; Snake::SnakeCell
PUBLIC	?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::deallocate
PUBLIC	?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::allocate
PUBLIC	?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::max_size
PUBLIC	?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::push_back
PUBLIC	?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::erase
PUBLIC	?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::begin
PUBLIC	?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_begin
PUBLIC	?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_end
PUBLIC	?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::max_size
PUBLIC	?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::capacity
PUBLIC	?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove
PUBLIC	?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept1
PUBLIC	?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept
PUBLIC	?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy
PUBLIC	?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Calculate_growth
PUBLIC	?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Change_array
PUBLIC	?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Xlength
PUBLIC	?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range
PUBLIC	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
PUBLIC	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
PUBLIC	?UpdateHead@Snake@@AEAAXXZ			; Snake::UpdateHead
PUBLIC	?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z	; Snake::UpdateBody
PUBLIC	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z		; std::_Min_value<unsigned __int64>
PUBLIC	??$fmod@MHX@@YANMH@Z				; fmod<float,int,void>
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
PUBLIC	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
PUBLIC	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
PUBLIC	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
PUBLIC	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
PUBLIC	??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<SDL_Point> > >
PUBLIC	??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Move_unchecked<SDL_Point *,SDL_Point *>
PUBLIC	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
PUBLIC	??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::destroy<SDL_Point>
PUBLIC	??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::emplace_back<SDL_Point const &>
PUBLIC	??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ; std::forward<SDL_Point const &>
PUBLIC	??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_back_with_unused_capacity<SDL_Point const &>
PUBLIC	??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::construct<SDL_Point,SDL_Point const &>
PUBLIC	??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Destroy_range<std::allocator<SDL_Point> >
PUBLIC	??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Copy_memmove<SDL_Point *,SDL_Point *>
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Uninitialized_move<SDL_Point *,std::allocator<SDL_Point> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ; std::_Get_unwrapped<SDL_Point>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ ; `string'
PUBLIC	??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ ; `string'
PUBLIC	??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ ; `string'
PUBLIC	??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ ; `string'
PUBLIC	??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1JK@KACNJKIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ ; `string'
PUBLIC	??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ ; `string'
PUBLIC	??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@	; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	fmod:PROC
EXTRN	memmove:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Xlength_error@std@@YAXPEBD@Z:PROC		; std::_Xlength_error
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$numeric_limits@_J@std@@SA_JXZ DD imagerel $LN3
	DD	imagerel $LN3+63
	DD	imagerel $unwind$?max@?$numeric_limits@_J@std@@SA_JXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+476
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+101
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD imagerel $LN3
	DD	imagerel $LN3+126
	DD	imagerel $unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD imagerel $LN6
	DD	imagerel $LN6+236
	DD	imagerel $unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1_Iterator_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+155
	DD	imagerel $unwind$??1_Iterator_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD imagerel $LN6
	DD	imagerel $LN6+290
	DD	imagerel $unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD imagerel $LN5
	DD	imagerel $LN5+118
	DD	imagerel $unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+302
	DD	imagerel $unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@Snake@@QEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+220
	DD	imagerel $unwind$?Update@Snake@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GrowBody@Snake@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?GrowBody@Snake@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?SnakeCell@Snake@@QEAA_NHH@Z DD imagerel $LN8
	DD	imagerel $LN8+227
	DD	imagerel $unwind$?SnakeCell@Snake@@QEAA_NHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z DD imagerel $LN3
	DD	imagerel $LN3+88
	DD	imagerel $unwind$?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z DD imagerel $LN15
	DD	imagerel $LN15+502
	DD	imagerel $unwind$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA DD imagerel ?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA
	DD	imagerel ?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+130
	DD	imagerel $unwind$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DD imagerel $LN3
	DD	imagerel $LN3+99
	DD	imagerel $unwind$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z DD imagerel $LN3
	DD	imagerel $LN3+142
	DD	imagerel $unwind$?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z DD imagerel $LN5
	DD	imagerel $LN5+200
	DD	imagerel $unwind$?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z DD imagerel $LN4
	DD	imagerel $LN4+322
	DD	imagerel $unwind$?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z DD imagerel $LN9
	DD	imagerel $LN9+267
	DD	imagerel $unwind$?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateHead@Snake@@AEAAXXZ DD imagerel $LN9
	DD	imagerel $LN9+393
	DD	imagerel $unwind$?UpdateHead@Snake@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z DD imagerel $LN12
	DD	imagerel $LN12+454
	DD	imagerel $unwind$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA DD imagerel ?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA
	DD	imagerel ?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD imagerel $LN5
	DD	imagerel $LN5+143
	DD	imagerel $unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$fmod@MHX@@YANMH@Z DD imagerel $LN3
	DD	imagerel $LN3+103
	DD	imagerel $unwind$??$fmod@MHX@@YANMH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+130
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z DD imagerel $LN4
	DD	imagerel $LN4+107
	DD	imagerel $unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z DD imagerel $LN4
	DD	imagerel $LN4+205
	DD	imagerel $unwind$??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z DD imagerel $LN3
	DD	imagerel $LN3+234
	DD	imagerel $unwind$??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z DD imagerel $LN3
	DD	imagerel $LN3+123
	DD	imagerel $unwind$??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DD imagerel $LN13
	DD	imagerel $LN13+630
	DD	imagerel $unwind$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA DD imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA+94
	DD	imagerel $unwind$?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+300
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+168
	DD	imagerel $unwind$??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z
pdata	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
CONST	SEGMENT
??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@ DB 'vector<T> too long', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
CONST	SEGMENT
??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@ DB '"'
	DB	00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o', 00H, 'r', 00H
	DB	' ', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' '
	DB	00H, 'i', 00H, 't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H
	DB	'o', 00H, 'r', 00H, ' ', 00H, 'o', 00H, 'u', 00H, 't', 00H, 's'
	DB	00H, 'i', 00H, 'd', 00H, 'e', 00H, ' ', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'g', 00H, 'e', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1JK@KACNJKIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
CONST	SEGMENT
??_C@_1JK@KACNJKIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't'
	DB	00H, 'r', 00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'S', 00H
	DB	'D', 00H, 'L', 00H, '_', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n'
	DB	00H, 't', 00H, ',', 00H, 'c', 00H, 'l', 00H, 'a', 00H, 's', 00H
	DB	's', 00H, ' ', 00H, 's', 00H, 't', 00H, 'd', 00H, ':', 00H, ':'
	DB	00H, 'a', 00H, 'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H
	DB	't', 00H, 'o', 00H, 'r', 00H, '<', 00H, 's', 00H, 't', 00H, 'r'
	DB	00H, 'u', 00H, 'c', 00H, 't', 00H, ' ', 00H, 'S', 00H, 'D', 00H
	DB	'L', 00H, '_', 00H, 'P', 00H, 'o', 00H, 'i', 00H, 'n', 00H, 't'
	DB	00H, '>', 00H, ' ', 00H, '>', 00H, ':', 00H, ':', 00H, 'e', 00H
	DB	'r', 00H, 'a', 00H, 's', 00H, 'e', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'v', 00H, 'e', 00H
	DB	'c', 00H, 't', 00H, 'o', 00H, 'r', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\vector', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
CONST	SEGMENT
??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@ DB 'vector erase '
	DB	'iterator outside range', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
CONST	SEGMENT
??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@ DB '"'
	DB	00H, 'I', 00H, 'T', 00H, 'E', 00H, 'R', 00H, 'A', 00H, 'T', 00H
	DB	'O', 00H, 'R', 00H, ' ', 00H, 'L', 00H, 'I', 00H, 'S', 00H, 'T'
	DB	00H, ' ', 00H, 'C', 00H, 'O', 00H, 'R', 00H, 'R', 00H, 'U', 00H
	DB	'P', 00H, 'T', 00H, 'E', 00H, 'D', 00H, '!', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
CONST	SEGMENT
??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'I', 00H
	DB	't', 00H, 'e', 00H, 'r', 00H, 'a', 00H, 't', 00H, 'o', 00H, 'r'
	DB	00H, '_', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, '1', 00H
	DB	'2', 00H, ':', 00H, ':', 00H, '_', 00H, 'O', 00H, 'r', 00H, 'p'
	DB	00H, 'h', 00H, 'a', 00H, 'n', 00H, '_', 00H, 'm', 00H, 'e', 00H
	DB	00H, 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
CONST	SEGMENT
??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@ DB 'ITERATOR LIST CORRU'
	DB	'PTED!', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 066H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035052a01H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z DD 025053401H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DB 06H
	DB	00H
	DB	00H
	DB	0c9H, 04H
	DB	02H
	DB	015H, 04H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$handlerMap$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DB 02H
	DB	01H
	DB	080H
	DD	imagerel ?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$tryMap$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DB 02H
	DB	00H
	DB	00H
	DB	02H
	DD	imagerel $handlerMap$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DB 04H
	DB	08H
	DB	010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DB 038H
	DD	imagerel $stateUnwindMap$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
	DD	imagerel $tryMap$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
	DD	imagerel $ip2state$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z DD 025053419H
	DD	0118231dH
	DD	07011004bH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z DB 060H
	DD	imagerel $ip2state$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c002bH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$fmod@MHX@@YANMH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$fmod@MHX@@YANMH@Z DB 060H
	DD	imagerel $ip2state$??$fmod@MHX@@YANMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$fmod@MHX@@YANMH@Z DD 035052719H
	DD	01133318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$fmod@MHX@@YANMH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DB 060H
	DD	imagerel $ip2state$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z DB 06H
	DB	00H
	DB	00H
	DB	'I', 03H
	DB	02H
	DB	082H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z DB 028H
	DD	imagerel $stateUnwindMap$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z
	DD	imagerel $ip2state$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z DD 025053411H
	DD	0118231dH
	DD	070110047H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?UpdateHead@Snake@@AEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z DD 025054519H
	DD	0118231dH
	DD	070110029H
	DD	05010H
	DD	imagerel __GSHandlerCheck
	DD	0138H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z$rtcName$0 DB 05fH ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z$rtcVarDesc DD 024H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range
	DD	04H
	DQ	FLAT:?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z$rtcName$0
	ORG $+48
?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z$rtcFrameData DD 01H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range
	DD	00H
	DQ	FLAT:?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z DD 025053901H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z DD 035053901H
	DD	011d3322H
	DD	070160023H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DB 060H
	DD	imagerel $ip2state$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DB 060H
	DD	imagerel $ip2state$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DB 060H
	DD	imagerel $ip2state$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ DB 060H
	DD	imagerel $ip2state$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ DD 025052f19H
	DD	01132318H
	DD	0700c0023H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z DB 06H
	DB	00H
	DB	00H
	DB	'|'
	DB	02H
	DB	'm', 06H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z DB 028H
	DD	imagerel $stateUnwindMap$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z
	DD	imagerel $ip2state$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z DD 035053411H
	DD	0118331dH
	DD	070110031H
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z DB 060H
	DD	imagerel $ip2state$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?SnakeCell@Snake@@QEAA_NHH@Z DD 025053301H
	DD	0117231cH
	DD	07010002dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GrowBody@Snake@@QEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@Snake@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck
	DD	0118H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Update@Snake@@QEAAXXZ$rtcName$0 DB 070H		; Snake::Update
	DB	072H
	DB	065H
	DB	076H
	DB	05fH
	DB	063H
	DB	065H
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+6
?Update@Snake@@QEAAXXZ$rtcName$1 DB 063H		; Snake::Update
	DB	075H
	DB	072H
	DB	072H
	DB	065H
	DB	06eH
	DB	074H
	DB	05fH
	DB	063H
	DB	065H
	DB	06cH
	DB	06cH
	DB	00H
	ORG $+3
?Update@Snake@@QEAAXXZ$rtcVarDesc DD 048H		; Snake::Update
	DD	08H
	DQ	FLAT:?Update@Snake@@QEAAXXZ$rtcName$1
	DD	028H
	DD	08H
	DQ	FLAT:?Update@Snake@@QEAAXXZ$rtcName$0
	ORG $+96
?Update@Snake@@QEAAXXZ$rtcFrameData DD 02H		; Snake::Update
	DD	00H
	DQ	FLAT:?Update@Snake@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ DD 035052a19H
	DD	010e3313H
	DD	070070023H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DB 060H
	DD	imagerel $ip2state$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z DD 025054019H
	DD	01132318H
	DD	0700c0029H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1 DB 05fH ; std::_Iterator_base12::_Adopt
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+2
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc DD 064H ; std::_Iterator_base12::_Adopt
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$1
	DD	044H
	DD	04H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcName$0
	ORG $+96
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData DD 02H ; std::_Iterator_base12::_Adopt
	DD	00H
	DQ	FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1_Iterator_base12@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1_Iterator_base12@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070021H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1_Iterator_base12@std@@QEAA@XZ
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1_Iterator_base12@std@@QEAA@XZ$rtcName$0 DB 05fH	; std::_Iterator_base12::~_Iterator_base12
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc DD 024H	; std::_Iterator_base12::~_Iterator_base12
	DD	04H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData DD 01H	; std::_Iterator_base12::~_Iterator_base12
	DD	00H
	DQ	FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DB 060H
	DD	imagerel $ip2state$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z DD 025054019H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
	DD	0fbH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0 DB 05fH ; std::_Iterator_base12::operator=
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc DD 024H ; std::_Iterator_base12::operator=
	DD	04H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcName$0
	ORG $+48
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData DD 01H ; std::_Iterator_base12::operator=
	DD	00H
	DQ	FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DB 060H
	DD	imagerel $ip2state$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@AEBU01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Iterator_base12@std@@QEAA@AEBU01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Iterator_base12@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Iterator_base12@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Iterator_base12@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Iterator_base12@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035052f01H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 060H
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBDH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@QEBDH@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ DB 060H
	DD	imagerel $ip2state$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$numeric_limits@_J@std@@SA_JXZ DD 025051e19H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?max@?$numeric_limits@_J@std@@SA_JXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??2@YAPEAX_KPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??2@YAPEAX_KPEAX@Z DB 060H
	DD	imagerel $ip2state$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z PROC ; std::_Get_unwrapped<SDL_Point>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode

; 276  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 277  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ENDP ; std::_Get_unwrapped<SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
$LN3@Get_size_o:

; 36   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Dest$ = 304
_Al$ = 312
??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z PROC ; std::_Uninitialized_move<SDL_Point *,std::allocator<SDL_Point> >, COMDAT

; 1729 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 1730 :     // move [_First, _Last) to raw _Dest, using _Al
; 1731 :     // note: only called internally from elsewhere in the STL
; 1732 :     using _Ptrval     = typename _Alloc::value_type*;
; 1733 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ; std::_Get_unwrapped<SDL_Point>
	mov	QWORD PTR _UFirst$[rbp], rax

; 1734 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ; std::_Get_unwrapped<SDL_Point>
	mov	QWORD PTR _ULast$[rbp], rax

; 1735 :     if constexpr (conjunction_v<bool_constant<_Ptr_move_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1736 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(_STD move(*_UFirst))>>) {
; 1737 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Copy_memmove<SDL_Point *,SDL_Point *>

; 1738 :         return _Dest + (_ULast - _UFirst);

	mov	rax, QWORD PTR _UFirst$[rbp]
	mov	rcx, QWORD PTR _ULast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	rcx, QWORD PTR _Dest$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8]

; 1739 :         (void) _Al;
; 1740 :     } else {
; 1741 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1742 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1743 :             _Backout._Emplace_back(_STD move(*_UFirst));
; 1744 :         }
; 1745 : 
; 1746 :         return _Backout._Release();
; 1747 :     }
; 1748 : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ENDP ; std::_Uninitialized_move<SDL_Point *,std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rbp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rbp], rax

; 86   :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rbp]
	cmp	QWORD PTR _Block_size$[rbp], rax
	ja	SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rbp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 91					; 0000005bH
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 91					; 0000005bH
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rbp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rbp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 99   : }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z
_TEXT	SEGMENT
_First_ch$ = 8
_Last_ch$ = 40
_Dest_ch$ = 72
_Count$ = 104
_First$ = 352
_Last$ = 360
_Dest$ = 368
??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z PROC ; std::_Copy_memmove<SDL_Point *,SDL_Point *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

	mov	rax, QWORD PTR _First$[rbp]
	mov	QWORD PTR _First_ch$[rbp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

	mov	rax, QWORD PTR _Last$[rbp]
	mov	QWORD PTR _Last_ch$[rbp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

	mov	rax, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR _Dest_ch$[rbp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	call	memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	add	rcx, rax
	mov	rax, rcx

; 1746 : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ENDP ; std::_Copy_memmove<SDL_Point *,SDL_Point *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z PROC ; std::_Destroy_range<std::allocator<SDL_Point> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rbp]
	lea	rcx, QWORD PTR _Ptr$[rbp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
	npad	1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 192  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rbp], 0
	je	SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 180  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z
_TEXT	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv169 = 544
tv132 = 552
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>, COMDAT

; 676  :     pointer _Emplace_reallocate(const pointer _Whereptr, _Valty&&... _Val) {

$LN13:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 600				; 00000258H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 150				; 00000096H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+632]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 677  :         // reallocate and insert by perfectly forwarding _Val at _Whereptr
; 678  :         _Alty& _Al        = _Getal();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	QWORD PTR _Al$[rbp], rax

; 679  :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 680  :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 681  :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 682  : 
; 683  :         _STL_INTERNAL_CHECK(_Mylast == _My_data._Myend); // check that we have no unused capacity
; 684  : 
; 685  :         const auto _Whereoff = static_cast<size_type>(_Whereptr - _Myfirst);

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Whereoff$[rbp], rax

; 686  :         const auto _Oldsize  = static_cast<size_type>(_Mylast - _Myfirst);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR _Oldsize$[rbp], rax

; 687  : 
; 688  :         if (_Oldsize == max_size()) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::max_size
	cmp	QWORD PTR _Oldsize$[rbp], rax
	jne	SHORT $LN2@Emplace_re

; 689  :             _Xlength();

	call	?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Xlength
$LN2@Emplace_re:

; 690  :         }
; 691  : 
; 692  :         const size_type _Newsize     = _Oldsize + 1;

	mov	rax, QWORD PTR _Oldsize$[rbp]
	inc	rax
	mov	QWORD PTR _Newsize$[rbp], rax

; 693  :         const size_type _Newcapacity = _Calculate_growth(_Newsize);

	mov	rdx, QWORD PTR _Newsize$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Calculate_growth
	mov	QWORD PTR _Newcapacity$[rbp], rax

; 694  : 
; 695  :         const pointer _Newvec           = _Al.allocate(_Newcapacity);

	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax

; 696  :         const pointer _Constructed_last = _Newvec + _Whereoff + 1;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	QWORD PTR _Constructed_last$[rbp], rax

; 697  :         pointer _Constructed_first      = _Constructed_last;

	mov	rax, QWORD PTR _Constructed_last$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 698  : 
; 699  :         _TRY_BEGIN
; 700  :         _Alty_traits::construct(_Al, _Unfancy(_Newvec + _Whereoff), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ; std::forward<SDL_Point const &>
	mov	QWORD PTR tv134[rbp], rax
	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, rax
	call	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
	mov	QWORD PTR tv169[rbp], rax
	mov	rax, QWORD PTR tv169[rbp]
	mov	QWORD PTR tv132[rbp], rax
	mov	r8, QWORD PTR tv134[rbp]
	mov	rdx, QWORD PTR tv132[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::construct<SDL_Point,SDL_Point const &>

; 701  :         _Constructed_first = _Newvec + _Whereoff;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 702  : 
; 703  :         if (_Whereptr == _Mylast) { // at back, provide strong guarantee

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	cmp	QWORD PTR _Whereptr$[rbp], rax
	jne	SHORT $LN4@Emplace_re

; 704  :             _Umove_if_noexcept(_Myfirst, _Mylast, _Newvec);

	mov	r9, QWORD PTR _Newvec$[rbp]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept

; 705  :         } else { // provide basic guarantee

	jmp	SHORT $LN5@Emplace_re
$LN4@Emplace_re:

; 706  :             _Umove(_Myfirst, _Whereptr, _Newvec);

	mov	r9, QWORD PTR _Newvec$[rbp]
	mov	r8, QWORD PTR _Whereptr$[rbp]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove

; 707  :             _Constructed_first = _Newvec;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR _Constructed_first$[rbp], rax

; 708  :             _Umove(_Whereptr, _Mylast, _Newvec + _Whereoff + 1);

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8+8]
	mov	r9, rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove
	npad	1
$LN5@Emplace_re:
	jmp	SHORT $LN9@Emplace_re
$LN10@Emplace_re:
$LN9@Emplace_re:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END
; 715  : 
; 716  :         _Change_array(_Newvec, _Newsize, _Newcapacity);

	mov	r9, QWORD PTR _Newcapacity$[rbp]
	mov	r8, QWORD PTR _Newsize$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Change_array

; 717  :         return _Newvec + _Whereoff;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Whereoff$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]

; 718  :     }

	lea	rsp, QWORD PTR [rbp+568]
	pop	rdi
	pop	rbp
	ret	0
$LN11@Emplace_re:
??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv169 = 544
tv132 = 552
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>'::`1'::catch$0

; 709  :         }
; 710  :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z$0:

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);

	mov	r8, QWORD PTR _Constructed_last$[rbp]
	mov	rdx, QWORD PTR _Constructed_first$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::deallocate

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 709  :         }
; 710  :         _CATCH_ALL
; 711  :         _Destroy(_Constructed_first, _Constructed_last);
; 712  :         _Al.deallocate(_Newvec, _Newcapacity);
; 713  :         _RERAISE;
; 714  :         _CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Al$ = 8
_My_data$ = 40
_Myfirst$ = 72
_Mylast$ = 104
_Whereoff$ = 136
_Oldsize$ = 168
_Newsize$ = 200
_Newcapacity$ = 232
_Newvec$ = 264
_Constructed_last$ = 296
_Constructed_first$ = 328
tv134 = 536
tv169 = 544
tv132 = 552
this$ = 592
_Whereptr$ = 600
<_Val_0>$ = 608
?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>'::`1'::catch$0

; 710  :         _CATCH_ALL

	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
__catch$??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z$0:

; 711  :         _Destroy(_Constructed_first, _Constructed_last);

	mov	r8, QWORD PTR _Constructed_last$[rbp]
	mov	rdx, QWORD PTR _Constructed_first$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy

; 712  :         _Al.deallocate(_Newvec, _Newcapacity);

	mov	r8, QWORD PTR _Newcapacity$[rbp]
	mov	rdx, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::deallocate

; 713  :         _RERAISE;

	xor	edx, edx
	xor	ecx, ecx
	call	_CxxThrowException
	npad	1

; 714  :         _CATCH_END

	lea	rax, $LN10@catch$0
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
	int	3
?catch$0@?0???$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>'::`1'::catch$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z
_TEXT	SEGMENT
$T1 = 200
__formal$ = 256
_Ptr$ = 264
<_Args_0>$ = 272
??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z PROC ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::construct<SDL_Point,SDL_Point const &>, COMDAT

; 757  :     static void construct(_Alloc&, _Objty* const _Ptr, _Types&&... _Args) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	ecx, 8
	call	??2@YAPEAX_KPEAX@Z			; operator new
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ; std::forward<SDL_Point const &>
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR $T1[rbp]
	mov	QWORD PTR [rcx], rax

; 758  :         ::new (const_cast<void*>(static_cast<const volatile void*>(_Ptr))) _Objty(_STD forward<_Types>(_Args)...);
; 759  :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z ENDP ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::construct<SDL_Point,SDL_Point const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
_Result$ = 72
tv81 = 280
tv79 = 288
tv77 = 296
this$ = 336
<_Val_0>$ = 344
??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_back_with_unused_capacity<SDL_Point const &>, COMDAT

; 633  :     decltype(auto) _Emplace_back_with_unused_capacity(_Valty&&... _Val) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 634  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 635  :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 636  :         pointer& _Mylast = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 637  :         _STL_INTERNAL_CHECK(_Mylast != _My_data._Myend); // check that we have unused capacity
; 638  :         _Alty_traits::construct(_Getal(), _Unfancy(_Mylast), _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ; std::forward<SDL_Point const &>
	mov	QWORD PTR tv81[rbp], rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
	mov	QWORD PTR tv79[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	QWORD PTR tv77[rbp], rax
	mov	r8, QWORD PTR tv81[rbp]
	mov	rdx, QWORD PTR tv79[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	??$construct@USDL_Point@@AEBU1@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@AEBU3@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::construct<SDL_Point,SDL_Point const &>

; 639  :         _Orphan_range(_Mylast, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range

; 640  :         _Ty& _Result = *_Mylast;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Result$[rbp], rax

; 641  :         ++_Mylast;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax

; 642  : #if _HAS_CXX17
; 643  :         return _Result;

	mov	rax, QWORD PTR _Result$[rbp]

; 644  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 645  :         (void) _Result;
; 646  : #endif // _HAS_CXX17
; 647  :     }

	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_back_with_unused_capacity<SDL_Point const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z PROC ; std::forward<SDL_Point const &>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FFC6471F_type_traits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1422 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ENDP ; std::forward<SDL_Point const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z
_TEXT	SEGMENT
_My_data$ = 8
_Mylast$ = 40
_Result$ = 72
tv83 = 280
tv81 = 288
this$ = 336
<_Val_0>$ = 344
??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::emplace_back<SDL_Point const &>, COMDAT

; 651  :     decltype(auto) emplace_back(_Valty&&... _Val) {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 652  :         // insert by perfectly forwarding into element at end, provide strong guarantee
; 653  :         auto& _My_data   = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 654  :         pointer& _Mylast = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 655  :         if (_Mylast != _My_data._Myend) {

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+24]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN2@emplace_ba

; 656  :             return _Emplace_back_with_unused_capacity(_STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ; std::forward<SDL_Point const &>
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_back_with_unused_capacity@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAA@AEBUSDL_Point@@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_back_with_unused_capacity<SDL_Point const &>
	jmp	SHORT $LN1@emplace_ba
$LN2@emplace_ba:

; 657  :         }
; 658  : 
; 659  :         _Ty& _Result = *_Emplace_reallocate(_Mylast, _STD forward<_Valty>(_Val)...);

	mov	rcx, QWORD PTR <_Val_0>$[rbp]
	call	??$forward@AEBUSDL_Point@@@std@@YAAEBUSDL_Point@@AEBU1@@Z ; std::forward<SDL_Point const &>
	mov	QWORD PTR tv83[rbp], rax
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv81[rbp], rax
	mov	r8, QWORD PTR tv83[rbp]
	mov	rdx, QWORD PTR tv81[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Emplace_reallocate@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@QEAU2@AEBU2@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Emplace_reallocate<SDL_Point const &>
	mov	QWORD PTR _Result$[rbp], rax

; 660  : #if _HAS_CXX17
; 661  :         return _Result;

	mov	rax, QWORD PTR _Result$[rbp]
$LN1@emplace_ba:

; 662  : #else // ^^^ _HAS_CXX17 ^^^ // vvv !_HAS_CXX17 vvv
; 663  :         (void) _Result;
; 664  : #endif // _HAS_CXX17
; 665  :     }

	lea	rsp, QWORD PTR [rbp+312]
	pop	rdi
	pop	rbp
	ret	0
??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::emplace_back<SDL_Point const &>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z PROC ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::destroy<SDL_Point>, COMDAT

; 762  :     static void destroy(_Alloc&, _Uty* const _Ptr) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 763  :         _Ptr->~_Uty();
; 764  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z ENDP ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::destroy<SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z PROC ; std::_Unfancy<SDL_Point>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__46C44D95_xstddef
	call	__CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 295  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ENDP ; std::_Unfancy<SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Dest$ = 240
??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z PROC ; std::_Move_unchecked<SDL_Point *,SDL_Point *>, COMDAT

; 2056 : _OutIt _Move_unchecked(_InIt _First, _InIt _Last, _OutIt _Dest) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode

; 2057 :     // move [_First, _Last) to [_Dest, ...)
; 2058 :     // note: _Move_unchecked is called directly from elsewhere in the STL
; 2059 :     if constexpr (_Ptr_move_cat<_InIt, _OutIt>::_Trivially_copyable) {
; 2060 :         return _Copy_memmove(_First, _Last, _Dest);

	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Copy_memmove<SDL_Point *,SDL_Point *>

; 2061 :     } else {
; 2062 :         for (; _First != _Last; ++_Dest, (void) ++_First) {
; 2063 :             *_Dest = _STD move(*_First);
; 2064 :         }
; 2065 : 
; 2066 :         return _Dest;
; 2067 :     }
; 2068 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ENDP ; std::_Move_unchecked<SDL_Point *,SDL_Point *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z PROC ; std::addressof<std::_Vector_val<std::_Simple_types<SDL_Point> > >, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__46C44D95_xstddef
	call	__CheckForDebuggerJustMyCode
	npad	1

; 280  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 281  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z ENDP ; std::addressof<std::_Vector_val<std::_Simple_types<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::~_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Parg$ = 232
_Pvector$ = 240
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >, COMDAT

; 216  :     _Vector_iterator(pointer _Parg, const _Container_base* _Pvector) : _Mybase(_Parg, _Pvector) {}

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	mov	r8, QWORD PTR _Pvector$[rbp]
	mov	rdx, QWORD PTR _Parg$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Iterator_base12@std@@QEAA@AEBU01@@Z	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR [rcx+16]
	mov	QWORD PTR [rax+16], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::~_Iterator_base12
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::~_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Parg$ = 232
_Pvector$ = 240
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z PROC ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >, COMDAT

; 36   :     _Vector_const_iterator(_Tptr _Parg, const _Container_base* _Pvector) : _Ptr(_Parg) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Iterator_base12@std@@QEAA@XZ	; std::_Iterator_base12::_Iterator_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Parg$[rbp]
	mov	QWORD PTR [rax+16], rcx

; 37   :         this->_Adopt(_Pvector);

	mov	rdx, QWORD PTR _Pvector$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt

; 38   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ENDP ; std::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_const_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xtgmath.h
;	COMDAT ??$fmod@MHX@@YANMH@Z
_TEXT	SEGMENT
tv67 = 192
_Left$ = 240
_Right$ = 248
??$fmod@MHX@@YANMH@Z PROC				; fmod<float,int,void>, COMDAT

; 67   : _GENERIC_MATH2(fmod)

$LN3:
	mov	DWORD PTR [rsp+16], edx
	movss	DWORD PTR [rsp+8], xmm0
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__1D12A9F2_xtgmath@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	cvtsi2sd xmm0, DWORD PTR _Right$[rbp]
	cvtss2sd xmm1, DWORD PTR _Left$[rbp]
	movsd	QWORD PTR tv67[rbp], xmm1
	movaps	xmm1, xmm0
	movsd	xmm0, QWORD PTR tv67[rbp]
	call	fmod
	npad	1
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??$fmod@MHX@@YANMH@Z ENDP				; fmod<float,int,void>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z
_TEXT	SEGMENT
$T1 = 200
tv65 = 216
_Left$ = 256
_Right$ = 264
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z PROC		; std::_Min_value<unsigned __int64>, COMDAT

; 25   :     _NOEXCEPT_COND(noexcept(_Right < _Left)) { // return smaller of _Left and _Right

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__B1DBDA87_utility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 26   :     return _Right < _Left ? _Right : _Left;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR _Left$[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	jae	SHORT $LN3@Min_value
	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR tv65[rbp], rax
	jmp	SHORT $LN4@Min_value
$LN3@Min_value:
	mov	rax, QWORD PTR _Left$[rbp]
	mov	QWORD PTR tv65[rbp], rax
$LN4@Min_value:
	mov	rax, QWORD PTR tv65[rbp]
	mov	QWORD PTR $T1[rbp], rax
	mov	rax, QWORD PTR $T1[rbp]

; 27   : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z ENDP		; std::_Min_value<unsigned __int64>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z
_TEXT	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
item$4 = 104
$T5 = 328
$T6 = 376
$T7 = 408
$T8 = 456
tv75 = 488
tv68 = 488
tv91 = 496
tv74 = 504
tv154 = 512
tv156 = 520
this$ = 560
current_head_cell$ = 568
prev_head_cell$ = 576
?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z PROC		; Snake::UpdateBody, COMDAT

; 49   : void Snake::UpdateBody(SDL_Point &current_head_cell, SDL_Point &prev_head_cell) {

$LN12:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 142				; 0000008eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode

; 50   :   // Add previous head location to vector
; 51   :   body.push_back(prev_head_cell);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv68[rbp], rax
	mov	rdx, QWORD PTR prev_head_cell$[rbp]
	mov	rcx, QWORD PTR tv68[rbp]
	call	?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::push_back

; 52   : 
; 53   :   if (!growing) {

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+64]
	test	eax, eax
	jne	$LN5@UpdateBody

; 54   :     // Remove the tail from the vector.
; 55   :     body.erase(body.begin());

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv75[rbp], rax
	lea	rax, QWORD PTR $T5[rbp]
	mov	QWORD PTR $T6[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv91[rbp], rax
	lea	rdx, QWORD PTR $T7[rbp]
	mov	rcx, QWORD PTR tv91[rbp]
	call	?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::begin
	mov	QWORD PTR tv74[rbp], rax
	mov	rax, QWORD PTR tv74[rbp]
	mov	QWORD PTR tv154[rbp], rax
	mov	rdx, QWORD PTR tv154[rbp]
	mov	rcx, QWORD PTR $T6[rbp]
	call	??0?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@$$QEAV01@@Z
	mov	QWORD PTR tv156[rbp], rax
	mov	r8, QWORD PTR tv156[rbp]
	lea	rdx, QWORD PTR $T8[rbp]
	mov	rcx, QWORD PTR tv75[rbp]
	call	?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::erase
	lea	rcx, QWORD PTR $T8[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ

; 56   :   } else {

	jmp	SHORT $LN6@UpdateBody
$LN5@UpdateBody:

; 57   :     growing = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+64], 0

; 58   :     size++;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+16], eax
$LN6@UpdateBody:

; 59   :   }
; 60   : 
; 61   :   // Check if the snake has died.
; 62   :   for (auto const &item : body) {

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR <range>$L0$1[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L0$2[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_end
	mov	QWORD PTR <end>$L0$3[rbp], rax
	jmp	SHORT $LN4@UpdateBody
$LN2@UpdateBody:
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L0$2[rbp], rax
$LN4@UpdateBody:
	mov	rax, QWORD PTR <end>$L0$3[rbp]
	cmp	QWORD PTR <begin>$L0$2[rbp], rax
	je	SHORT $LN3@UpdateBody
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	mov	QWORD PTR item$4[rbp], rax

; 63   :     if (current_head_cell.x == item.x && current_head_cell.y == item.y) {

	mov	rax, QWORD PTR current_head_cell$[rbp]
	mov	rcx, QWORD PTR item$4[rbp]
	mov	ecx, DWORD PTR [rcx]
	cmp	DWORD PTR [rax], ecx
	jne	SHORT $LN7@UpdateBody
	mov	rax, QWORD PTR current_head_cell$[rbp]
	mov	rcx, QWORD PTR item$4[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	cmp	DWORD PTR [rax+4], ecx
	jne	SHORT $LN7@UpdateBody

; 64   :       alive = false;

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+20], 0
$LN7@UpdateBody:

; 65   :     }
; 66   :   }

	jmp	SHORT $LN2@UpdateBody
$LN3@UpdateBody:

; 67   : }

	lea	rsp, QWORD PTR [rbp+536]
	pop	rdi
	pop	rbp
	ret	0
?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z ENDP		; Snake::UpdateBody
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
item$4 = 104
$T5 = 328
$T6 = 376
$T7 = 408
$T8 = 456
tv75 = 488
tv68 = 488
tv91 = 496
tv74 = 504
tv154 = 512
tv156 = 520
this$ = 560
current_head_cell$ = 568
prev_head_cell$ = 576
?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA PROC ; `Snake::UpdateBody'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA ENDP ; `Snake::UpdateBody'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
item$4 = 104
$T5 = 328
$T6 = 376
$T7 = 408
$T8 = 456
tv75 = 488
tv68 = 488
tv91 = 496
tv74 = 504
tv154 = 512
tv156 = 520
this$ = 560
current_head_cell$ = 568
prev_head_cell$ = 576
?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA PROC ; `Snake::UpdateBody'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR $T7[rbp]
	call	??1?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z@4HA ENDP ; `Snake::UpdateBody'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?UpdateHead@Snake@@AEAAXXZ
_TEXT	SEGMENT
tv65 = 192
this$ = 240
?UpdateHead@Snake@@AEAAXXZ PROC				; Snake::UpdateHead, COMDAT

; 25   : void Snake::UpdateHead() {

$LN9:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode

; 26   :   switch (direction) {

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+8]
	mov	DWORD PTR tv65[rbp], eax
	cmp	DWORD PTR tv65[rbp], 0
	je	SHORT $LN4@UpdateHead
	cmp	DWORD PTR tv65[rbp], 1
	je	SHORT $LN5@UpdateHead
	cmp	DWORD PTR tv65[rbp], 2
	je	SHORT $LN6@UpdateHead
	cmp	DWORD PTR tv65[rbp], 3
	je	SHORT $LN7@UpdateHead
	jmp	$LN2@UpdateHead
$LN4@UpdateHead:

; 27   :     case Direction::kUp:
; 28   :       head_y -= speed;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+28]
	subss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+28], xmm0

; 29   :       break;

	jmp	SHORT $LN2@UpdateHead
$LN5@UpdateHead:

; 30   : 
; 31   :     case Direction::kDown:
; 32   :       head_y += speed;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+28]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+28], xmm0

; 33   :       break;

	jmp	SHORT $LN2@UpdateHead
$LN6@UpdateHead:

; 34   : 
; 35   :     case Direction::kLeft:
; 36   :       head_x -= speed;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	subss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+24], xmm0

; 37   :       break;

	jmp	SHORT $LN2@UpdateHead
$LN7@UpdateHead:

; 38   : 
; 39   :     case Direction::kRight:
; 40   :       head_x += speed;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR [rax+24]
	addss	xmm0, DWORD PTR [rcx+12]
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+24], xmm0
$LN2@UpdateHead:

; 41   :       break;
; 42   :   }
; 43   : 
; 44   :   // Wrap the Snake around to the beginning if going off of the screen.
; 45   :   head_x = fmod(head_x + grid_width, grid_width);

	mov	rax, QWORD PTR this$[rbp]
	cvtsi2ss xmm0, DWORD PTR [rax]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+24]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR [rax]
	call	??$fmod@MHX@@YANMH@Z			; fmod<float,int,void>
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+24], xmm0

; 46   :   head_y = fmod(head_y + grid_height, grid_height);

	mov	rax, QWORD PTR this$[rbp]
	cvtsi2ss xmm0, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rbp]
	movss	xmm1, DWORD PTR [rax+28]
	addss	xmm1, xmm0
	movaps	xmm0, xmm1
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR [rax+4]
	call	??$fmod@MHX@@YANMH@Z			; fmod<float,int,void>
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+28], xmm0

; 47   : }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?UpdateHead@Snake@@AEAAXXZ ENDP				; Snake::UpdateHead
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1425 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1426 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1421 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1422 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1693 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
	npad	1

; 1694 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1689 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
	npad	1

; 1690 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z
_TEXT	SEGMENT
_Lock$ = 4
_Pnext$ = 40
_Pnextptr$4 = 72
__$ArrayPad$ = 280
this$ = 320
_First$ = 328
_Last$ = 336
?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range, COMDAT

; 1668 :     void _Orphan_range(pointer _First, pointer _Last) const { // orphan iterators within specified (inclusive) range

$LN9:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1669 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1670 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z

; 1671 : 
; 1672 :         _Iterator_base12** _Pnext = &_Mypair._Myval2._Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax
$LN2@Orphan_ran:

; 1673 :         while (*_Pnext) {

	mov	rax, QWORD PTR _Pnext$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_ran

; 1674 :             const auto _Pnextptr = static_cast<const_iterator&>(**_Pnext)._Ptr;

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Pnextptr$4[rbp], rax

; 1675 :             if (_Pnextptr < _First || _Last < _Pnextptr) { // skip the iterator

	mov	rax, QWORD PTR _First$[rbp]
	cmp	QWORD PTR _Pnextptr$4[rbp], rax
	jb	SHORT $LN6@Orphan_ran
	mov	rax, QWORD PTR _Pnextptr$4[rbp]
	cmp	QWORD PTR _Last$[rbp], rax
	jae	SHORT $LN4@Orphan_ran
$LN6@Orphan_ran:

; 1676 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$[rbp], rax

; 1677 :             } else { // orphan the iterator

	jmp	SHORT $LN5@Orphan_ran
$LN4@Orphan_ran:

; 1678 :                 (*_Pnext)->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1679 :                 *_Pnext             = (*_Pnext)->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN5@Orphan_ran:

; 1680 :             }
; 1681 :         }

	jmp	SHORT $LN2@Orphan_ran
$LN3@Orphan_ran:

; 1682 : #else // ^^^ _ITERATOR_DEBUG_LEVEL == 2 ^^^ // vvv _ITERATOR_DEBUG_LEVEL != 2 vvv
; 1683 :         (void) _First;
; 1684 :         (void) _Last;
; 1685 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1686 :     }

	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ
_TEXT	SEGMENT
?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Xlength, COMDAT

; 1660 :     [[noreturn]] static void _Xlength() { // report a length_error

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1661 :         _Xlength_error("vector<T> too long");

	lea	rcx, OFFSET FLAT:??_C@_0BD@OLBABOEK@vector?$DMT?$DO?5too?5long@
	call	?_Xlength_error@std@@YAXPEBD@Z		; std::_Xlength_error
$LN2@Xlength:

; 1662 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Xlength@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@CAXXZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Xlength
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv90 = 312
tv88 = 320
tv86 = 328
this$ = 368
_Newvec$ = 376
_Newsize$ = 384
_Newcapacity$ = 392
?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Change_array, COMDAT

; 1623 :     void _Change_array(const pointer _Newvec, const size_type _Newsize, const size_type _Newcapacity) {

$LN4:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1624 :         // orphan all iterators, discard old array, acquire new array
; 1625 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1626 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1627 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1628 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1629 : 
; 1630 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all

; 1631 : 
; 1632 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Change_arr

; 1633 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy

; 1634 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	QWORD PTR tv90[rbp], rax
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR tv88[rbp], rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv86[rbp], rax
	mov	r8, QWORD PTR tv88[rbp]
	mov	rdx, QWORD PTR tv86[rbp]
	mov	rcx, QWORD PTR tv90[rbp]
	call	?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::deallocate
$LN2@Change_arr:

; 1635 :         }
; 1636 : 
; 1637 :         _Myfirst = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1638 :         _Mylast  = _Newvec + _Newsize;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newsize$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax

; 1639 :         _Myend   = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newcapacity$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax

; 1640 :     }

	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?_Change_array@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXQEAUSDL_Point@@_K1@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Change_array
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z
_TEXT	SEGMENT
_Oldcapacity$ = 8
_Geometric$ = 40
tv67 = 248
this$ = 288
_Newsize$ = 296
?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Calculate_growth, COMDAT

; 1571 :     size_type _Calculate_growth(const size_type _Newsize) const {

$LN5:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1572 :         // given _Oldcapacity and _Newsize, calculate geometric growth
; 1573 :         const size_type _Oldcapacity = capacity();

	mov	rcx, QWORD PTR this$[rbp]
	call	?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::capacity
	mov	QWORD PTR _Oldcapacity$[rbp], rax

; 1574 : 
; 1575 :         if (_Oldcapacity > max_size() - _Oldcapacity / 2) {

	mov	rcx, QWORD PTR this$[rbp]
	call	?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::max_size
	mov	QWORD PTR tv67[rbp], rax
	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR tv67[rbp]
	sub	rcx, rax
	mov	rax, rcx
	cmp	QWORD PTR _Oldcapacity$[rbp], rax
	jbe	SHORT $LN2@Calculate_

; 1576 :             return _Newsize; // geometric growth would overflow

	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN2@Calculate_:

; 1577 :         }
; 1578 : 
; 1579 :         const size_type _Geometric = _Oldcapacity + _Oldcapacity / 2;

	xor	edx, edx
	mov	rax, QWORD PTR _Oldcapacity$[rbp]
	mov	ecx, 2
	div	rcx
	mov	rcx, QWORD PTR _Oldcapacity$[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Geometric$[rbp], rax

; 1580 : 
; 1581 :         if (_Geometric < _Newsize) {

	mov	rax, QWORD PTR _Newsize$[rbp]
	cmp	QWORD PTR _Geometric$[rbp], rax
	jae	SHORT $LN3@Calculate_

; 1582 :             return _Newsize; // geometric growth would be insufficient

	mov	rax, QWORD PTR _Newsize$[rbp]
	jmp	SHORT $LN1@Calculate_
$LN3@Calculate_:

; 1583 :         }
; 1584 : 
; 1585 :         return _Geometric; // geometric growth is sufficient

	mov	rax, QWORD PTR _Geometric$[rbp]
$LN1@Calculate_:

; 1586 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Calculate_growth@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBA_K_K@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Calculate_growth
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1568 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Destroy_range<std::allocator<SDL_Point> >

; 1569 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z
_TEXT	SEGMENT
$T1 = 196
this$ = 256
_First$ = 264
_Last$ = 272
_Dest$ = 280
?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept, COMDAT

; 1561 :     void _Umove_if_noexcept(pointer _First, pointer _Last, pointer _Dest) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1562 :         // move_if_noexcept [_First, _Last) to raw _Dest, using allocator
; 1563 :         _Umove_if_noexcept1(_First, _Last, _Dest,

	lea	rax, QWORD PTR $T1[rbp]
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 1
	rep stosb
	movzx	eax, BYTE PTR $T1[rbp]
	mov	BYTE PTR [rsp+32], al
	mov	r9, QWORD PTR _Dest$[rbp]
	mov	r8, QWORD PTR _Last$[rbp]
	mov	rdx, QWORD PTR _First$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept1

; 1564 :             bool_constant<disjunction_v<is_nothrow_move_constructible<_Ty>, negation<is_copy_constructible<_Ty>>>>{});
; 1565 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Umove_if_noexcept@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
__formal$ = 256
?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept1, COMDAT

; 1551 :     void _Umove_if_noexcept1(pointer _First, pointer _Last, pointer _Dest, true_type) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1552 :         // move [_First, _Last) to raw _Dest, using allocator
; 1553 :         _Uninitialized_move(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Uninitialized_move<SDL_Point *,std::allocator<SDL_Point> >

; 1554 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Umove_if_noexcept1@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@00U?$integral_constant@_N$00@2@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove_if_noexcept1
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove, COMDAT

; 1547 :     pointer _Umove(pointer _First, pointer _Last, pointer _Dest) { // move [_First, _Last) to raw _Dest, using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1548 :         return _Uninitialized_move(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_move@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Uninitialized_move<SDL_Point *,std::allocator<SDL_Point> >

; 1549 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Umove@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU3@00@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Umove
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
_My_data$ = 8
this$ = 256
?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::capacity, COMDAT

; 1446 :     _NODISCARD size_type capacity() const noexcept { // return current length of allocated storage

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1447 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1448 :         return static_cast<size_type>(_My_data._Myend - _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	rax, QWORD PTR [rax+24]
	sub	rax, rcx
	sar	rax, 3

; 1449 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?capacity@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::capacity
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ
_TEXT	SEGMENT
$T1 = 200
$T2 = 232
this$ = 288
?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::max_size, COMDAT

; 1441 :     _NODISCARD size_type max_size() const noexcept { // return maximum possible length of sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1442 :         return _Min_value(

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	npad	1
	mov	rcx, rax
	call	?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::max_size
	npad	1
	mov	QWORD PTR $T1[rbp], rax
	call	?max@?$numeric_limits@_J@std@@SA_JXZ	; std::numeric_limits<__int64>::max
	npad	1
	mov	QWORD PTR $T2[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$_Min_value@_K@std@@YAAEB_KAEB_K0@Z	; std::_Min_value<unsigned __int64>
	npad	1
	mov	rax, QWORD PTR [rax]

; 1443 :             static_cast<size_type>((numeric_limits<difference_type>::max)()), _Alty_traits::max_size(_Getal()));
; 1444 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEBA_KXZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_end, COMDAT

; 1423 :     pointer _Unchecked_end() noexcept { // return pointer for end of mutable sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1424 :         return _Mypair._Myval2._Mylast;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+16]

; 1425 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_end
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ
_TEXT	SEGMENT
this$ = 224
?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_begin, COMDAT

; 1415 :     pointer _Unchecked_begin() noexcept { // return pointer for beginning of mutable sequence

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1416 :         return _Mypair._Myval2._Myfirst;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]

; 1417 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ
_TEXT	SEGMENT
_My_data$ = 8
tv80 = 216
tv78 = 224
this$ = 272
__$ReturnUdt$ = 280
?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::begin, COMDAT

; 1360 :     _NODISCARD iterator begin() noexcept { // return iterator for beginning of mutable sequence

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1361 :         auto& _My_data = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1362 :         return iterator(_My_data._Myfirst, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<SDL_Point> > >
	npad	1
	mov	QWORD PTR tv80[rbp], rax
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv78[rbp], rax
	mov	r8, QWORD PTR tv80[rbp]
	mov	rdx, QWORD PTR tv78[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
	npad	1
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 1363 :     }

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::begin
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z
_TEXT	SEGMENT
_Whereptr$ = 8
_My_data$ = 40
_Mylast$ = 72
$T1 = 292
tv150 = 312
tv74 = 312
tv148 = 320
this$ = 368
__$ReturnUdt$ = 376
_Where$ = 384
?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::erase, COMDAT

; 1292 :     iterator erase(const_iterator _Where) { // erase element at _Where

$LN15:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 98					; 00000062H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+424]
	mov	DWORD PTR $T1[rbp], 0
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1293 :         const pointer _Whereptr = _Where._Ptr;

	mov	rax, QWORD PTR _Where$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Whereptr$[rbp], rax

; 1294 :         auto& _My_data          = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1295 :         pointer& _Mylast        = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax
$LN4@erase:

; 1296 : 
; 1297 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1298 :         _STL_VERIFY(

	mov	rcx, QWORD PTR _Where$[rbp]
	call	?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ; std::_Iterator_base12::_Getcont
	mov	QWORD PTR tv74[rbp], rax
	mov	rcx, QWORD PTR _My_data$[rbp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<SDL_Point> > >
	mov	rcx, QWORD PTR tv74[rbp]
	cmp	rcx, rax
	jne	SHORT $LN7@erase
	mov	rax, QWORD PTR _My_data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	cmp	QWORD PTR _Whereptr$[rbp], rax
	jb	SHORT $LN7@erase
	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Whereptr$[rbp]
	cmp	QWORD PTR [rax], rcx
	jbe	SHORT $LN7@erase
	jmp	SHORT $LN9@erase
$LN7@erase:
	lea	rax, OFFSET FLAT:??_C@_0CE@EAMOGAIE@vector?5erase?5iterator?5outside?5r@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1300				; 00000514H
	lea	rdx, OFFSET FLAT:??_C@_0GH@OOPCKGB@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@erase
	int	3
	xor	eax, eax
$LN11@erase:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1300				; 00000514H
	lea	r8, OFFSET FLAT:??_C@_1MO@NOOOHLI@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1JK@KACNJKIE@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?$DM?$AAs?$AAt?$AAr@
	lea	rcx, OFFSET FLAT:??_C@_1EM@BEMPOGMM@?$AA?$CC?$AAv?$AAe?$AAc?$AAt?$AAo?$AAr?$AA?5?$AAe?$AAr?$AAa?$AAs?$AAe?$AA?5?$AAi@
	call	QWORD PTR __imp__invalid_parameter

; 1299 :             _Where._Getcont() == _STD addressof(_My_data) && _Whereptr >= _My_data._Myfirst && _Mylast > _Whereptr,
; 1300 :             "vector erase iterator outside range");

	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@erase
$LN9@erase:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@erase

; 1301 :         _Orphan_range(_Whereptr, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_range@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Orphan_range

; 1302 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1303 : 
; 1304 :         _Move_unchecked(_Whereptr + 1, _Mylast, _Whereptr);

	mov	rax, QWORD PTR _Whereptr$[rbp]
	add	rax, 8
	mov	r8, QWORD PTR _Whereptr$[rbp]
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	rdx, QWORD PTR [rcx]
	mov	rcx, rax
	call	??$_Move_unchecked@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Move_unchecked<SDL_Point *,SDL_Point *>

; 1305 :         _Alty_traits::destroy(_Getal(), _Unfancy(_Mylast - 1));

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 8
	mov	rcx, rax
	call	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
	mov	QWORD PTR tv150[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	QWORD PTR tv148[rbp], rax
	mov	rdx, QWORD PTR tv150[rbp]
	mov	rcx, QWORD PTR tv148[rbp]
	call	??$destroy@USDL_Point@@@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SAXAEAV?$allocator@USDL_Point@@@1@QEAUSDL_Point@@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::destroy<SDL_Point>

; 1306 :         --_Mylast;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, 8
	mov	rcx, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rcx], rax

; 1307 :         return iterator(_Whereptr, _STD addressof(_My_data));

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	??$addressof@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@YAPEAV?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@0@AEAV10@@Z ; std::addressof<std::_Vector_val<std::_Simple_types<SDL_Point> > >
	mov	r8, rax
	mov	rdx, QWORD PTR _Whereptr$[rbp]
	mov	rcx, QWORD PTR __$ReturnUdt$[rbp]
	call	??0?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@PEAUSDL_Point@@PEBU_Container_base12@1@@Z ; std::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >::_Vector_iterator<std::_Vector_val<std::_Simple_types<SDL_Point> > >
	mov	eax, DWORD PTR $T1[rbp]
	or	eax, 1
	mov	DWORD PTR $T1[rbp], eax
	mov	rcx, QWORD PTR _Where$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 1308 :     }

	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::erase
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 8
_My_data$ = 40
_Mylast$ = 72
$T1 = 292
tv150 = 312
tv74 = 312
tv148 = 320
this$ = 368
__$ReturnUdt$ = 376
_Where$ = 384
?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::erase'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR _Where$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::erase'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Whereptr$ = 8
_My_data$ = 40
_Mylast$ = 72
$T1 = 292
tv150 = 312
tv74 = 312
tv148 = 320
this$ = 368
__$ReturnUdt$ = 376
_Where$ = 384
?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::erase'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+48]
	mov	rcx, QWORD PTR _Where$[rbp]
	call	??1?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0??erase@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA?AV?$_Vector_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@V?$_Vector_const_iterator@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@@2@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::erase'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z
_TEXT	SEGMENT
this$ = 224
_Val$ = 232
?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::push_back, COMDAT

; 667  :     void push_back(const _Ty& _Val) { // insert element at end, provide strong guarantee

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 668  :         emplace_back(_Val);

	mov	rdx, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$emplace_back@AEBUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBUSDL_Point@@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::emplace_back<SDL_Point const &>

; 669  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?push_back@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAXAEBUSDL_Point@@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::push_back
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z
_TEXT	SEGMENT
__formal$ = 224
?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z PROC ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::max_size, COMDAT

; 766  :     _NODISCARD static size_type max_size(const _Alloc&) noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 767  :         return static_cast<size_t>(-1) / sizeof(value_type);

	mov	rax, 2305843009213693951		; 1fffffffffffffffH

; 768  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max_size@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA_KAEBV?$allocator@USDL_Point@@@2@@Z ENDP ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::max_size
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z PROC ; std::allocator<SDL_Point>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z ENDP ; std::allocator<SDL_Point>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z PROC ; std::allocator<SDL_Point>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ENDP ; std::allocator<SDL_Point>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?SnakeCell@Snake@@QEAA_NHH@Z
_TEXT	SEGMENT
<range>$L0$1 = 8
<begin>$L0$2 = 40
<end>$L0$3 = 72
item$4 = 104
this$ = 352
x$ = 360
y$ = 368
?SnakeCell@Snake@@QEAA_NHH@Z PROC			; Snake::SnakeCell, COMDAT

; 72   : bool Snake::SnakeCell(int x, int y) {

$LN8:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode

; 73   :   if (x == static_cast<int>(head_x) && y == static_cast<int>(head_y)) {

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+24]
	cmp	DWORD PTR x$[rbp], eax
	jne	SHORT $LN5@SnakeCell
	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+28]
	cmp	DWORD PTR y$[rbp], eax
	jne	SHORT $LN5@SnakeCell

; 74   :     return true;

	mov	al, 1
	jmp	SHORT $LN1@SnakeCell
$LN5@SnakeCell:

; 75   :   }
; 76   :   for (auto const &item : body) {

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR <range>$L0$1[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_begin@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_begin
	mov	QWORD PTR <begin>$L0$2[rbp], rax
	mov	rcx, QWORD PTR <range>$L0$1[rbp]
	call	?_Unchecked_end@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAAPEAUSDL_Point@@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Unchecked_end
	mov	QWORD PTR <end>$L0$3[rbp], rax
	jmp	SHORT $LN4@SnakeCell
$LN2@SnakeCell:
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	add	rax, 8
	mov	QWORD PTR <begin>$L0$2[rbp], rax
$LN4@SnakeCell:
	mov	rax, QWORD PTR <end>$L0$3[rbp]
	cmp	QWORD PTR <begin>$L0$2[rbp], rax
	je	SHORT $LN3@SnakeCell
	mov	rax, QWORD PTR <begin>$L0$2[rbp]
	mov	QWORD PTR item$4[rbp], rax

; 77   :     if (x == item.x && y == item.y) {

	mov	rax, QWORD PTR item$4[rbp]
	mov	eax, DWORD PTR [rax]
	cmp	DWORD PTR x$[rbp], eax
	jne	SHORT $LN6@SnakeCell
	mov	rax, QWORD PTR item$4[rbp]
	mov	eax, DWORD PTR [rax+4]
	cmp	DWORD PTR y$[rbp], eax
	jne	SHORT $LN6@SnakeCell

; 78   :       return true;

	mov	al, 1
	jmp	SHORT $LN1@SnakeCell
$LN6@SnakeCell:

; 79   :     }
; 80   :   }

	jmp	SHORT $LN2@SnakeCell
$LN3@SnakeCell:

; 81   :   return false;

	xor	al, al
$LN1@SnakeCell:

; 82   : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?SnakeCell@Snake@@QEAA_NHH@Z ENDP			; Snake::SnakeCell
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?GrowBody@Snake@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?GrowBody@Snake@@QEAAXXZ PROC				; Snake::GrowBody, COMDAT

; 69   : void Snake::GrowBody() { growing = true; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+64], 1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GrowBody@Snake@@QEAAXXZ ENDP				; Snake::GrowBody
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?Update@Snake@@QEAAXXZ
_TEXT	SEGMENT
prev_cell$ = 8
current_cell$ = 40
__$ArrayPad$ = 248
this$ = 288
?Update@Snake@@QEAAXXZ PROC				; Snake::Update, COMDAT

; 8    : void Snake::Update() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode

; 9    :   SDL_Point prev_cell{
; 10   :       static_cast<int>(head_x),

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+24]
	mov	DWORD PTR prev_cell$[rbp], eax

; 11   :       static_cast<int>(
; 12   :           head_y)};  // We first capture the head's cell before updating.

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+28]
	mov	DWORD PTR prev_cell$[rbp+4], eax

; 13   :   UpdateHead();

	mov	rcx, QWORD PTR this$[rbp]
	call	?UpdateHead@Snake@@AEAAXXZ		; Snake::UpdateHead

; 14   :   SDL_Point current_cell{
; 15   :       static_cast<int>(head_x),

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+24]
	mov	DWORD PTR current_cell$[rbp], eax

; 16   :       static_cast<int>(head_y)};  // Capture the head's cell after updating.

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+28]
	mov	DWORD PTR current_cell$[rbp+4], eax

; 17   : 
; 18   :   // Update all of the body vector items if the snake head has moved to a new
; 19   :   // cell.
; 20   :   if (current_cell.x != prev_cell.x || current_cell.y != prev_cell.y) {

	mov	eax, DWORD PTR prev_cell$[rbp]
	cmp	DWORD PTR current_cell$[rbp], eax
	jne	SHORT $LN3@Update
	mov	eax, DWORD PTR prev_cell$[rbp+4]
	cmp	DWORD PTR current_cell$[rbp+4], eax
	je	SHORT $LN2@Update
$LN3@Update:

; 21   :     UpdateBody(current_cell, prev_cell);

	lea	r8, QWORD PTR prev_cell$[rbp]
	lea	rdx, QWORD PTR current_cell$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?UpdateBody@Snake@@AEAAXAEAUSDL_Point@@0@Z ; Snake::UpdateBody
$LN2@Update:

; 22   :   }
; 23   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?Update@Snake@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?Update@Snake@@QEAAXXZ ENDP				; Snake::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_me@_Iterator_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Pnext$1 = 8
this$ = 256
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ PROC		; std::_Iterator_base12::_Orphan_me, COMDAT

; 1267 :     void _Orphan_me() noexcept {

$LN15:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+312]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1268 :         if (_Myproxy) { // adopted, remove self from list

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	$LN10@Orphan_me

; 1269 :             _Iterator_base12** _Pnext = &_Myproxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rbp], rax
$LN2@Orphan_me:

; 1270 :             while (*_Pnext && *_Pnext != this) {

	mov	rax, QWORD PTR _Pnext$1[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN6@Orphan_me
	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN6@Orphan_me

; 1271 :                 _Pnext = &(*_Pnext)->_Mynextiter;

	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$1[rbp], rax

; 1272 :             }

	jmp	SHORT $LN2@Orphan_me
$LN6@Orphan_me:

; 1273 : 
; 1274 :             _STL_VERIFY(*_Pnext, "ITERATOR LIST CORRUPTED!");

	mov	rax, QWORD PTR _Pnext$1[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN9@Orphan_me
	jmp	SHORT $LN12@Orphan_me
$LN9@Orphan_me:
	lea	rax, OFFSET FLAT:??_C@_0BJ@LFDBABJJ@ITERATOR?5LIST?5CORRUPTED?$CB@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1274				; 000004faH
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	npad	1
	cmp	eax, 1
	jne	SHORT $LN14@Orphan_me
	int	3
	xor	eax, eax
$LN14@Orphan_me:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1274				; 000004faH
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EE@KLDMFDFL@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAI?$AAt?$AAe?$AAr?$AAa?$AAt?$AAo?$AAr?$AA_@
	lea	rcx, OFFSET FLAT:??_C@_1DG@PLBPCAEM@?$AA?$CC?$AAI?$AAT?$AAE?$AAR?$AAA?$AAT?$AAO?$AAR?$AA?5?$AAL?$AAI?$AAS?$AAT?$AA?5@
	call	QWORD PTR __imp__invalid_parameter
	npad	1
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN9@Orphan_me
$LN12@Orphan_me:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN6@Orphan_me

; 1275 :             *_Pnext  = _Mynextiter;

	mov	rax, QWORD PTR _Pnext$1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax], rcx

; 1276 :             _Myproxy = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
$LN10@Orphan_me:

; 1277 :         }
; 1278 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ENDP		; std::_Iterator_base12::_Orphan_me
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ
_TEXT	SEGMENT
tv68 = 192
this$ = 240
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ PROC ; std::_Iterator_base12::_Getcont, COMDAT

; 1262 :     const _Container_base12* _Getcont() const noexcept {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1263 :         return _Myproxy ? _Myproxy->_Mycont : nullptr;

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Getcont
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv68[rbp], rax
	jmp	SHORT $LN4@Getcont
$LN3@Getcont:
	mov	QWORD PTR tv68[rbp], 0
$LN4@Getcont:
	mov	rax, QWORD PTR tv68[rbp]

; 1264 :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?_Getcont@_Iterator_base12@std@@QEBAPEBU_Container_base12@2@XZ ENDP ; std::_Iterator_base12::_Getcont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z
_TEXT	SEGMENT
_Parent_proxy$5 = 8
_Lock$6 = 36
_Lock$7 = 68
__$ArrayPad$ = 280
this$ = 320
_Parent$ = 328
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z PROC ; std::_Iterator_base12::_Adopt, COMDAT

; 1234 :     void _Adopt(const _Container_base12* _Parent) noexcept {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1235 :         if (_Parent) {

	cmp	QWORD PTR _Parent$[rbp], 0
	je	SHORT $LN2@Adopt

; 1236 :             // have a parent, do adoption
; 1237 :             _Container_proxy* _Parent_proxy = _Parent->_Myproxy;

	mov	rax, QWORD PTR _Parent$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Parent_proxy$5[rbp], rax

; 1238 : 
; 1239 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1240 :             if (_Myproxy != _Parent_proxy) { // change parentage

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Parent_proxy$5[rbp]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN4@Adopt

; 1241 :                 _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1242 :                 _Orphan_me();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 1243 :                 _Mynextiter                 = _Parent_proxy->_Myfirstiter;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Parent_proxy$5[rbp]
	mov	rcx, QWORD PTR [rcx+8]
	mov	QWORD PTR [rax+8], rcx

; 1244 :                 _Parent_proxy->_Myfirstiter = this;

	mov	rax, QWORD PTR _Parent_proxy$5[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 1245 :                 _Myproxy                    = _Parent_proxy;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Parent_proxy$5[rbp]
	mov	QWORD PTR [rax], rcx

; 1246 :             }

	lea	rcx, QWORD PTR _Lock$6[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
$LN4@Adopt:

; 1247 : 
; 1248 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1249 :             _Myproxy = _Parent_proxy;
; 1250 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1251 :         } else {

	jmp	SHORT $LN3@Adopt
$LN2@Adopt:

; 1252 :             // no future parent, just disown current parent
; 1253 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1254 :             _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$7[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1255 :             _Orphan_me();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 1256 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1257 :             _Myproxy = nullptr;
; 1258 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1259 :         }

	lea	rcx, QWORD PTR _Lock$7[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
$LN3@Adopt:

; 1260 :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ENDP ; std::_Iterator_base12::_Adopt
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
_Lock$ = 4
__$ArrayPad$ = 216
this$ = 256
??1_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::~_Iterator_base12, COMDAT

; 1227 :     ~_Iterator_base12() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1228 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1229 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1230 :         _Orphan_me();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 1231 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1232 :     }

	lea	rcx, QWORD PTR _Lock$[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1_Iterator_base12@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??1_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::~_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z
_TEXT	SEGMENT
_Lock$4 = 4
__$ArrayPad$ = 216
this$ = 256
_Right$ = 264
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z PROC	; std::_Iterator_base12::operator=, COMDAT

; 1210 :     _Iterator_base12& operator=(const _Iterator_base12& _Right) noexcept {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1211 :         if (_Myproxy != _Right._Myproxy) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR [rcx]
	cmp	QWORD PTR [rax], rcx
	je	SHORT $LN2@operator

; 1212 :             if (_Right._Myproxy) {

	mov	rax, QWORD PTR _Right$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@operator

; 1213 :                 _Adopt(_Right._Myproxy->_Mycont);

	mov	rax, QWORD PTR _Right$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Adopt@_Iterator_base12@std@@QEAAXPEBU_Container_base12@2@@Z ; std::_Iterator_base12::_Adopt
	npad	1

; 1214 :             } else { // becoming invalid, disown current parent

	jmp	SHORT $LN2@operator
$LN3@operator:

; 1215 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1216 :                 _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1217 :                 _Orphan_me();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Orphan_me@_Iterator_base12@std@@QEAAXXZ ; std::_Iterator_base12::_Orphan_me
	npad	1

; 1218 : #else // _ITERATOR_DEBUG_LEVEL == 2
; 1219 :                 _Myproxy = nullptr;
; 1220 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1221 :             }

	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
$LN2@operator:

; 1222 :         }
; 1223 : 
; 1224 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1225 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ENDP	; std::_Iterator_base12::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@AEBU01@@Z
_TEXT	SEGMENT
this$ = 224
_Right$ = 232
??0_Iterator_base12@std@@QEAA@AEBU01@@Z PROC		; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1206 :     _Iterator_base12(const _Iterator_base12& _Right) noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0

; 1207 :         *this = _Right;

	mov	rdx, QWORD PTR _Right$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??4_Iterator_base12@std@@QEAAAEAU01@AEBU01@@Z ; std::_Iterator_base12::operator=
	npad	1

; 1208 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Iterator_base12@std@@QEAA@AEBU01@@Z ENDP		; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Iterator_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Iterator_base12@std@@QEAA@XZ PROC			; std::_Iterator_base12::_Iterator_base12, COMDAT

; 1204 :     _Iterator_base12() noexcept : _Myproxy(nullptr), _Mynextiter(nullptr) {} // construct orphaned iterator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Iterator_base12@std@@QEAA@XZ ENDP			; std::_Iterator_base12::_Iterator_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 4
_Pnext$5 = 40
__$ArrayPad$ = 248
this$ = 288
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$5[rbp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$5[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1295 :         }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 1298 :     }

	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rbp]
	mov	QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rbp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rbp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rbp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rbp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rax], rcx

; 123  : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 47   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??2@YAPEAX_K@Z				; operator new

; 48   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__536DB091_exception
	call	__CheckForDebuggerJustMyCode

; 324  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rbp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 325  : }

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 137  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc
	npad	1

; 138  :     {

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 139  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 126  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception
	npad	1

; 127  :     {

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 128  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rbp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rbp]

; 93   :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy
	npad	1

; 88   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 68   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy
	npad	1

; 71   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 62   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 64   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Message$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 65   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\limits
;	COMDAT ?max@?$numeric_limits@_J@std@@SA_JXZ
_TEXT	SEGMENT
?max@?$numeric_limits@_J@std@@SA_JXZ PROC		; std::numeric_limits<__int64>::max, COMDAT

; 644  :     _NODISCARD static constexpr long long(max)() noexcept { // return maximum value

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__843B0F21_limits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 645  :         return LLONG_MAX;

	mov	rax, 9223372036854775807		; 7fffffffffffffffH

; 646  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max@?$numeric_limits@_J@std@@SA_JXZ ENDP		; std::numeric_limits<__int64>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__0A074437_vcruntime_new@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	rax, QWORD PTR _Where$[rbp]

; 171  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__B704DB5E_Snake@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
