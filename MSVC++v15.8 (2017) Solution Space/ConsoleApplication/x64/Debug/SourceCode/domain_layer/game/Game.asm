; Listing generated by Microsoft (R) Optimizing Compiler Version 19.23.28106.4 

include listing.inc

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__0A074437_vcruntime_new@h DB 01H
__09340588_corecrt_math@h DB 01H
__24E9E95F_stdlib@h DB 01H
__86D65F0C_cstdlib DB 01H
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__5467428D_corecrt_wconio@h DB 01H
__4442441F_corecrt_wio@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__45F4AF76_corecrt_wtime@h DB 01H
__186FF47F_stat@h DB 01H
__534C724A_wchar@h DB 01H
__231D85A1_cstddef DB 01H
__843B0F21_limits DB 01H
__FFC6471F_type_traits DB 01H
__B0C4CEA9_malloc@h DB 01H
__69245D52_vcruntime_exception@h DB 01H
__536DB091_exception DB 01H
__35D7DDB3_corecrt_memory@h DB 01H
__A29A7DFB_string@h DB 01H
__86E03ACD_xutility DB 01H
__DB4EB944_xmemory DB 01H
__B9A1F245_algorithm DB 01H
__6A0B36D1_cmath DB 01H
__CC282F90_tuple DB 01H
__C9317CBB_xpolymorphic_allocator@h DB 01H
__AF9D3FD8_xstring DB 01H
__C4C3ED4F_random DB 01H
__3FA3F145_SDL_stdinc@h DB 01H
__1662896C_SDL_endian@h DB 01H
__E3097871_SDL_rect@h DB 01H
__BB5134BF_Snake@hpp DB 01H
__7242C389_ctype@h DB 01H
__4C468533_string DB 01H
__20CC7B81_PersistenceHandler@hpp DB 01H
__AF8FE13E_PlayerHandler@hpp DB 01H
__DA238ACC_stdexcept DB 01H
__65AE1ACD_xcall_once@h DB 01H
__DAF308ED_system_error DB 01H
__36900320_vcruntime_typeinfo@h DB 01H
__F63FC9D4_typeinfo DB 01H
__389503AF_memory DB 01H
__14D054A0_xfacet DB 01H
__E9B62A1C_xlocinfo DB 01H
__70A34BE9_xlocale DB 01H
__D0535D0F_xiosbase DB 01H
__EE242DFE_xlocnum DB 01H
__D17CECDD_ios DB 01H
__1877C7F6_Game@hpp DB 01H
__14222817_Game@cpp DB 01H
__0063A417_istream DB 01H
__63B3912D_ostream DB 01H
__D8833270_streambuf DB 01H
__C9967FC1_vector DB 01H
__48D2DAA7_iosfwd DB 01H
__B1DBDA87_utility DB 01H
__46C44D95_xstddef DB 01H
__59613C47_xatomic@h DB 01H
msvcjmc	ENDS
PUBLIC	?__empty_global_delete@@YAXPEAX@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_K@Z		; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ; __empty_global_delete
PUBLIC	??2@YAPEAX_KPEAX@Z				; operator new
PUBLIC	??0exception@std@@QEAA@QEBDH@Z			; std::exception::exception
PUBLIC	??0exception@std@@QEAA@AEBV01@@Z		; std::exception::exception
PUBLIC	??1exception@std@@UEAA@XZ			; std::exception::~exception
PUBLIC	?what@exception@std@@UEBAPEBDXZ			; std::exception::what
PUBLIC	??_Gexception@std@@UEAAPEAXI@Z			; std::exception::`scalar deleting destructor'
PUBLIC	??0bad_alloc@std@@AEAA@QEBD@Z			; std::bad_alloc::bad_alloc
PUBLIC	??1bad_alloc@std@@UEAA@XZ			; std::bad_alloc::~bad_alloc
PUBLIC	??0bad_alloc@std@@QEAA@AEBV01@@Z		; std::bad_alloc::bad_alloc
PUBLIC	??_Gbad_alloc@std@@UEAAPEAXI@Z			; std::bad_alloc::`scalar deleting destructor'
PUBLIC	??0bad_array_new_length@std@@QEAA@XZ		; std::bad_array_new_length::bad_array_new_length
PUBLIC	??1bad_array_new_length@std@@UEAA@XZ		; std::bad_array_new_length::~bad_array_new_length
PUBLIC	??0bad_array_new_length@std@@QEAA@AEBV01@@Z	; std::bad_array_new_length::bad_array_new_length
PUBLIC	??_Gbad_array_new_length@std@@UEAAPEAXI@Z	; std::bad_array_new_length::`scalar deleting destructor'
PUBLIC	?_Throw_bad_array_new_length@std@@YAXXZ		; std::_Throw_bad_array_new_length
PUBLIC	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
PUBLIC	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
PUBLIC	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
PUBLIC	??0_Container_base12@std@@QEAA@XZ		; std::_Container_base12::_Container_base12
PUBLIC	?_Orphan_all@_Container_base12@std@@QEAAXXZ	; std::_Container_base12::_Orphan_all
PUBLIC	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
PUBLIC	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
PUBLIC	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
PUBLIC	??0random_device@std@@QEAA@XZ			; std::random_device::random_device
PUBLIC	??Rrandom_device@std@@QEAAIXZ			; std::random_device::operator()
PUBLIC	??0Snake@@QEAA@HH@Z				; Snake::Snake
PUBLIC	??0?$allocator@USDL_Point@@@std@@QEAA@XZ	; std::allocator<SDL_Point>::allocator<SDL_Point>
PUBLIC	?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::deallocate
PUBLIC	?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::allocate
PUBLIC	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::select_on_container_copy_construction
PUBLIC	??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
PUBLIC	??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
PUBLIC	??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >
PUBLIC	?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy
PUBLIC	?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Buy_raw
PUBLIC	?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Tidy
PUBLIC	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
PUBLIC	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
PUBLIC	??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<SDL_Point> >::_Vector_val<std::_Simple_types<SDL_Point> >
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
PUBLIC	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
PUBLIC	??1Snake@@QEAA@XZ				; Snake::~Snake
PUBLIC	??0Snake@@QEAA@AEBV0@@Z				; Snake::Snake
PUBLIC	??0Game@@QEAA@_K0@Z				; Game::Game
PUBLIC	?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z ; Game::Run
PUBLIC	?GetScore@Game@@QEBAHXZ				; Game::GetScore
PUBLIC	?GetSize@Game@@QEBAHXZ				; Game::GetSize
PUBLIC	??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>
PUBLIC	?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::seed
PUBLIC	??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::operator()
PUBLIC	?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_lower
PUBLIC	?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_upper
PUBLIC	??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>
PUBLIC	?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::min
PUBLIC	?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::max
PUBLIC	??0?$uniform_int@H@std@@QEAA@HH@Z		; std::uniform_int<int>::uniform_int<int>
PUBLIC	?_Adjust@?$uniform_int@H@std@@CAII@Z		; std::uniform_int<int>::_Adjust
PUBLIC	?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z ; std::uniform_int<int>::_Adjust
PUBLIC	??0param_type@?$uniform_int@H@std@@QEAA@HH@Z	; std::uniform_int<int>::param_type::param_type
PUBLIC	?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z ; std::uniform_int<int>::param_type::_Init
PUBLIC	??0?$uniform_int_distribution@H@std@@QEAA@HH@Z	; std::uniform_int_distribution<int>::uniform_int_distribution<int>
PUBLIC	?PlaceFood@Game@@AEAAXXZ			; Game::PlaceFood
PUBLIC	?Update@Game@@AEAAXXZ				; Game::Update
PUBLIC	??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::uniform_int<int>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
PUBLIC	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
PUBLIC	??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><SDL_Point>
PUBLIC	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
PUBLIC	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
PUBLIC	??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><std::allocator<SDL_Point> >
PUBLIC	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
PUBLIC	??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >::~_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >
PUBLIC	??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Ucopy<SDL_Point *>
PUBLIC	??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><>
PUBLIC	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
PUBLIC	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
PUBLIC	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>
PUBLIC	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z	; std::_Deallocate<16,0>
PUBLIC	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z		; std::_Get_size_of_n<16>
PUBLIC	??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Destroy_range<std::allocator<SDL_Point> >
PUBLIC	??$_Get_size_of_n@$07@std@@YA_K_K@Z		; std::_Get_size_of_n<8>
PUBLIC	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
PUBLIC	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
PUBLIC	??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
PUBLIC	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
PUBLIC	??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z ; std::forward<std::allocator<SDL_Point> >
PUBLIC	??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Uninitialized_copy<SDL_Point *,std::allocator<SDL_Point> >
PUBLIC	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
PUBLIC	??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
PUBLIC	??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::operator()
PUBLIC	?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_all_bits
PUBLIC	?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_bits
PUBLIC	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
PUBLIC	??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ; std::_Get_unwrapped<SDL_Point>
PUBLIC	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
PUBLIC	??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Copy_memmove<SDL_Point *,SDL_Point *>
PUBLIC	__JustMyCode_Default
PUBLIC	??_7exception@std@@6B@				; std::exception::`vftable'
PUBLIC	??_C@_0BC@EOODALEL@Unknown?5exception@		; `string'
PUBLIC	??_7bad_alloc@std@@6B@				; std::bad_alloc::`vftable'
PUBLIC	??_7bad_array_new_length@std@@6B@		; std::bad_array_new_length::`vftable'
PUBLIC	??_C@_0BF@KINCDENJ@bad?5array?5new?5length@	; `string'
PUBLIC	_TI3?AVbad_array_new_length@std@@
PUBLIC	_CTA3?AVbad_array_new_length@std@@
PUBLIC	??_R0?AVbad_array_new_length@std@@@8		; std::bad_array_new_length `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVbad_alloc@std@@@8			; std::bad_alloc `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
PUBLIC	??_R0?AVexception@std@@@8			; std::exception `RTTI Type Descriptor'
PUBLIC	_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
PUBLIC	?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
PUBLIC	??_C@_0BB@FCMFBGOM@invalid?5argument@		; `string'
PUBLIC	??_C@_02DKCKIIND@?$CFs@				; `string'
PUBLIC	??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ ; `string'
PUBLIC	??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ ; `string'
PUBLIC	??_C@_0GH@EOCNBNE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ ; `string'
PUBLIC	??_C@_1MO@JGHLKOIO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ ; `string'
PUBLIC	??_C@_0CO@CCCJIBKO@invalid?5min?5and?5max?5arguments?5f@ ; `string'
PUBLIC	??_C@_1FC@FNLBOEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAu?$AAn?$AAi?$AAf?$AAo?$AAr?$AAm?$AA_?$AAi?$AAn@ ; `string'
PUBLIC	??_C@_1GA@FJHEAOJP@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAi?$AAn?$AA?5?$AAa?$AAn@ ; `string'
PUBLIC	??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ ; `string'
PUBLIC	??_R4exception@std@@6B@				; std::exception::`RTTI Complete Object Locator'
PUBLIC	??_R3exception@std@@8				; std::exception::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2exception@std@@8				; std::exception::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@exception@std@@8			; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_alloc@std@@6B@				; std::bad_alloc::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_alloc@std@@8				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_alloc@std@@8				; std::bad_alloc::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_alloc@std@@8			; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4bad_array_new_length@std@@6B@		; std::bad_array_new_length::`RTTI Complete Object Locator'
PUBLIC	??_R3bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2bad_array_new_length@std@@8		; std::bad_array_new_length::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@bad_array_new_length@std@@8	; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	__real@3dcccccd
PUBLIC	__real@3f80624dd2f1a9fc
EXTRN	??2@YAPEAX_K@Z:PROC				; operator new
EXTRN	??3@YAXPEAX_K@Z:PROC				; operator delete
EXTRN	__imp__invalid_parameter:PROC
EXTRN	__imp__CrtDbgReport:PROC
EXTRN	__imp_??0_Lockit@std@@QEAA@H@Z:PROC
EXTRN	__imp_??1_Lockit@std@@QEAA@XZ:PROC
EXTRN	memmove:PROC
EXTRN	__std_exception_copy:PROC
EXTRN	__std_exception_destroy:PROC
EXTRN	??_Eexception@std@@UEAAPEAXI@Z:PROC		; std::exception::`vector deleting destructor'
EXTRN	??_Ebad_alloc@std@@UEAAPEAXI@Z:PROC		; std::bad_alloc::`vector deleting destructor'
EXTRN	??_Ebad_array_new_length@std@@UEAAPEAXI@Z:PROC	; std::bad_array_new_length::`vector deleting destructor'
EXTRN	?_Random_device@std@@YAIXZ:PROC			; std::_Random_device
EXTRN	SDL_GetTicks:PROC
EXTRN	SDL_Delay:PROC
EXTRN	?Update@Snake@@QEAAXXZ:PROC			; Snake::Update
EXTRN	?GrowBody@Snake@@QEAAXXZ:PROC			; Snake::GrowBody
EXTRN	?SnakeCell@Snake@@QEAA_NHH@Z:PROC		; Snake::SnakeCell
EXTRN	?HandleInput@Controller@controller@ui_layer@@QEBAXAEA_NAEAVSnake@@@Z:PROC ; ui_layer::controller::Controller::HandleInput
EXTRN	?Render@PlayZone@@QEAAXVSnake@@AEBUSDL_Point@@@Z:PROC ; PlayZone::Render
EXTRN	?UpdateWindowTitle@PlayZone@@QEAAXHH@Z:PROC	; PlayZone::UpdateWindowTitle
EXTRN	_CxxThrowException:PROC
EXTRN	_RTC_CheckStackVars:PROC
EXTRN	_RTC_InitBase:PROC
EXTRN	_RTC_Shutdown:PROC
EXTRN	__CheckForDebuggerJustMyCode:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__GSHandlerCheck:PROC
EXTRN	__GSHandlerCheck_EH4:PROC
EXTRN	__security_check_cookie:PROC
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__security_cookie:QWORD
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+65
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+70
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??2@YAPEAX_KPEAX@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??2@YAPEAX_KPEAX@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@QEBDH@Z DD imagerel $LN3
	DD	imagerel $LN3+140
	DD	imagerel $unwind$??0exception@std@@QEAA@QEBDH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0exception@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+148
	DD	imagerel $unwind$??0exception@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1exception@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??1exception@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?what@exception@std@@UEBAPEBDXZ DD imagerel $LN5
	DD	imagerel $LN5+119
	DD	imagerel $unwind$?what@exception@std@@UEBAPEBDXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gexception@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gexception@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@AEAA@QEBD@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??0bad_alloc@std@@AEAA@QEBD@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_alloc@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_alloc@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_alloc@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_alloc@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1bad_array_new_length@std@@UEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+64
	DD	imagerel $unwind$??1bad_array_new_length@std@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Throw_bad_array_new_length@std@@YAXXZ DD imagerel $LN3
	DD	imagerel $LN3+83
	DD	imagerel $unwind$?_Throw_bad_array_new_length@std@@YAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD imagerel $LN21
	DD	imagerel $LN21+476
	DD	imagerel $unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0_Container_base12@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+85
	DD	imagerel $unwind$??0_Container_base12@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD imagerel $LN7
	DD	imagerel $LN7+237
	DD	imagerel $unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+147
	DD	imagerel $unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD imagerel $LN3
	DD	imagerel $LN3+79
	DD	imagerel $unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0random_device@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??0random_device@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??Rrandom_device@std@@QEAAIXZ DD imagerel $LN3
	DD	imagerel $LN3+69
	DD	imagerel $unwind$??Rrandom_device@std@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Snake@@QEAA@HH@Z DD imagerel $LN4
	DD	imagerel $LN4+254
	DD	imagerel $unwind$??0Snake@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$allocator@USDL_Point@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??0?$allocator@USDL_Point@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+100
	DD	imagerel $unwind$?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z DD imagerel $LN3
	DD	imagerel $LN3+76
	DD	imagerel $unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+165
	DD	imagerel $unwind$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z DD imagerel $LN6
	DD	imagerel $LN6+481
	DD	imagerel $unwind$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD imagerel ?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DD	imagerel ?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA+39
	DD	imagerel $unwind$?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+209
	DD	imagerel $unwind$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z DD imagerel $LN3
	DD	imagerel $LN3+108
	DD	imagerel $unwind$?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z DD imagerel $LN3
	DD	imagerel $LN3+214
	DD	imagerel $unwind$?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ DD imagerel $LN4
	DD	imagerel $LN4+285
	DD	imagerel $unwind$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+81
	DD	imagerel $unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+128
	DD	imagerel $unwind$??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1Snake@@QEAA@XZ DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??1Snake@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Snake@@QEAA@AEBV0@@Z DD imagerel $LN4
	DD	imagerel $LN4+300
	DD	imagerel $unwind$??0Snake@@QEAA@AEBV0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0Game@@QEAA@_K0@Z DD imagerel $LN4
	DD	imagerel $LN4+303
	DD	imagerel $unwind$??0Game@@QEAA@_K0@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA DD imagerel ?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA
	DD	imagerel ?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA+39
	DD	imagerel $unwind$?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z DD imagerel $LN8
	DD	imagerel $LN8+463
	DD	imagerel $unwind$?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetScore@Game@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$?GetScore@Game@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?GetSize@Game@@QEBAHXZ DD imagerel $LN3
	DD	imagerel $LN3+74
	DD	imagerel $unwind$?GetSize@Game@@QEBAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z DD imagerel $LN3
	DD	imagerel $LN3+129
	DD	imagerel $unwind$??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z DD imagerel $LN6
	DD	imagerel $LN6+214
	DD	imagerel $unwind$?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ DD imagerel $LN6
	DD	imagerel $LN6+265
	DD	imagerel $unwind$??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ DD imagerel $LN15
	DD	imagerel $LN15+554
	DD	imagerel $unwind$?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ DD imagerel $LN8
	DD	imagerel $LN8+238
	DD	imagerel $unwind$?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ DD imagerel $LN3
	DD	imagerel $LN3+54
	DD	imagerel $unwind$?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ DD imagerel $LN3
	DD	imagerel $LN3+57
	DD	imagerel $unwind$?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$uniform_int@H@std@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+119
	DD	imagerel $unwind$??0?$uniform_int@H@std@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust@?$uniform_int@H@std@@CAII@Z DD imagerel $LN3
	DD	imagerel $LN3+80
	DD	imagerel $unwind$?_Adjust@?$uniform_int@H@std@@CAII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z DD imagerel $LN5
	DD	imagerel $LN5+111
	DD	imagerel $unwind$?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0param_type@?$uniform_int@H@std@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0param_type@?$uniform_int@H@std@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z DD imagerel $LN12
	DD	imagerel $LN12+237
	DD	imagerel $unwind$?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$uniform_int_distribution@H@std@@QEAA@HH@Z DD imagerel $LN3
	DD	imagerel $LN3+105
	DD	imagerel $unwind$??0?$uniform_int_distribution@H@std@@QEAA@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?PlaceFood@Game@@AEAAXXZ DD imagerel $LN6
	DD	imagerel $LN6+246
	DD	imagerel $unwind$?PlaceFood@Game@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Update@Game@@AEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+250
	DD	imagerel $unwind$?Update@Game@@AEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+109
	DD	imagerel $unwind$??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+89
	DD	imagerel $unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+77
	DD	imagerel $unwind$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+90
	DD	imagerel $unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+107
	DD	imagerel $unwind$??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+195
	DD	imagerel $unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+105
	DD	imagerel $unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DD imagerel $LN4
	DD	imagerel $LN4+94
	DD	imagerel $unwind$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z DD imagerel $LN3
	DD	imagerel $LN3+120
	DD	imagerel $unwind$??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+102
	DD	imagerel $unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD imagerel $LN5
	DD	imagerel $LN5+117
	DD	imagerel $unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD imagerel $LN4
	DD	imagerel $LN4+123
	DD	imagerel $unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+114
	DD	imagerel $unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+75
	DD	imagerel $unwind$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD imagerel $LN4
	DD	imagerel $LN4+117
	DD	imagerel $unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z DD imagerel $LN5
	DD	imagerel $LN5+249
	DD	imagerel $unwind$??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+96
	DD	imagerel $unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z DD imagerel $LN3
	DD	imagerel $LN3+72
	DD	imagerel $unwind$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD imagerel $LN3
	DD	imagerel $LN3+182
	DD	imagerel $unwind$??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD imagerel $LN13
	DD	imagerel $LN13+300
	DD	imagerel $unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z DD imagerel $LN6
	DD	imagerel $LN6+211
	DD	imagerel $unwind$??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z DD imagerel $LN10
	DD	imagerel $LN10+288
	DD	imagerel $unwind$??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ DD imagerel $LN6
	DD	imagerel $LN6+173
	DD	imagerel $unwind$?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ DD imagerel $LN7
	DD	imagerel $LN7+125
	DD	imagerel $unwind$?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD imagerel $LN3
	DD	imagerel $LN3+97
	DD	imagerel $unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z DD imagerel $LN3
	DD	imagerel $LN3+71
	DD	imagerel $unwind$??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z DD imagerel $LN3
	DD	imagerel $LN3+156
	DD	imagerel $unwind$??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z
pdata	ENDS
;	COMDAT __real@3f80624dd2f1a9fc
CONST	SEGMENT
__real@3f80624dd2f1a9fc DQ 03f80624dd2f1a9fcr	; 0.008
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
_RTC_Shutdown.rtc$TMZ DQ FLAT:_RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
_RTC_InitBase.rtc$IMZ DQ FLAT:_RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_array_new_length@std@@8 DD imagerel ??_R0?AVbad_array_new_length@std@@@8 ; std::bad_array_new_length::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R2bad_array_new_length@std@@8 DD imagerel ??_R1A@?0A@EA@bad_array_new_length@std@@8 ; std::bad_array_new_length::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@bad_alloc@std@@8
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_array_new_length@std@@8
rdata$r	SEGMENT
??_R3bad_array_new_length@std@@8 DD 00H			; std::bad_array_new_length::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	imagerel ??_R2bad_array_new_length@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_array_new_length@std@@6B@
rdata$r	SEGMENT
??_R4bad_array_new_length@std@@6B@ DD 01H		; std::bad_array_new_length::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	imagerel ??_R3bad_array_new_length@std@@8
	DD	imagerel ??_R4bad_array_new_length@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@bad_alloc@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@bad_alloc@std@@8 DD imagerel ??_R0?AVbad_alloc@std@@@8 ; std::bad_alloc::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R2bad_alloc@std@@8
rdata$r	SEGMENT
??_R2bad_alloc@std@@8 DD imagerel ??_R1A@?0A@EA@bad_alloc@std@@8 ; std::bad_alloc::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@exception@std@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3bad_alloc@std@@8
rdata$r	SEGMENT
??_R3bad_alloc@std@@8 DD 00H				; std::bad_alloc::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2bad_alloc@std@@8
rdata$r	ENDS
;	COMDAT ??_R4bad_alloc@std@@6B@
rdata$r	SEGMENT
??_R4bad_alloc@std@@6B@ DD 01H				; std::bad_alloc::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	imagerel ??_R3bad_alloc@std@@8
	DD	imagerel ??_R4bad_alloc@std@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@exception@std@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@exception@std@@8 DD imagerel ??_R0?AVexception@std@@@8 ; std::exception::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R2exception@std@@8
rdata$r	SEGMENT
??_R2exception@std@@8 DD imagerel ??_R1A@?0A@EA@exception@std@@8 ; std::exception::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R3exception@std@@8
rdata$r	SEGMENT
??_R3exception@std@@8 DD 00H				; std::exception::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2exception@std@@8
rdata$r	ENDS
;	COMDAT ??_R4exception@std@@6B@
rdata$r	SEGMENT
??_R4exception@std@@6B@ DD 01H				; std::exception::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	imagerel ??_R3exception@std@@8
	DD	imagerel ??_R4exception@std@@6B@
rdata$r	ENDS
;	COMDAT ??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
CONST	SEGMENT
??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'l', 00H, 'l', 00H, 'o', 00H, 'c', 00H, 'a', 00H, 't', 00H, 'e'
	DB	00H, '_', 00H, 'm', 00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H
	DB	'l', 00H, 'l', 00H, 'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c'
	DB	00H, 't', 00H, 'o', 00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'g', 00H, 'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1GA@FJHEAOJP@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAi?$AAn?$AA?5?$AAa?$AAn@
CONST	SEGMENT
??_C@_1GA@FJHEAOJP@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAi?$AAn?$AA?5?$AAa?$AAn@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'm', 00H, 'i', 00H, 'n', 00H, ' ', 00H, 'a'
	DB	00H, 'n', 00H, 'd', 00H, ' ', 00H, 'm', 00H, 'a', 00H, 'x', 00H
	DB	' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm', 00H, 'e'
	DB	00H, 'n', 00H, 't', 00H, 's', 00H, ' ', 00H, 'f', 00H, 'o', 00H
	DB	'r', 00H, ' ', 00H, 'u', 00H, 'n', 00H, 'i', 00H, 'f', 00H, 'o'
	DB	00H, 'r', 00H, 'm', 00H, '_', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'"', 00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_1FC@FNLBOEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAu?$AAn?$AAi?$AAf?$AAo?$AAr?$AAm?$AA_?$AAi?$AAn@
CONST	SEGMENT
??_C@_1FC@FNLBOEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAu?$AAn?$AAi?$AAf?$AAo?$AAr?$AAm?$AA_?$AAi?$AAn@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, 'u', 00H, 'n', 00H
	DB	'i', 00H, 'f', 00H, 'o', 00H, 'r', 00H, 'm', 00H, '_', 00H, 'i'
	DB	00H, 'n', 00H, 't', 00H, '<', 00H, 'i', 00H, 'n', 00H, 't', 00H
	DB	'>', 00H, ':', 00H, ':', 00H, 'p', 00H, 'a', 00H, 'r', 00H, 'a'
	DB	00H, 'm', 00H, '_', 00H, 't', 00H, 'y', 00H, 'p', 00H, 'e', 00H
	DB	':', 00H, ':', 00H, '_', 00H, 'I', 00H, 'n', 00H, 'i', 00H, 't'
	DB	00H, 00H, 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0CO@CCCJIBKO@invalid?5min?5and?5max?5arguments?5f@
CONST	SEGMENT
??_C@_0CO@CCCJIBKO@invalid?5min?5and?5max?5arguments?5f@ DB 'invalid min '
	DB	'and max arguments for uniform_int', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1MO@JGHLKOIO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1MO@JGHLKOIO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'r', 00H, 'a', 00H
	DB	'n', 00H, 'd', 00H, 'o', 00H, 'm', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GH@EOCNBNE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GH@EOCNBNE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Prog'
	DB	'ram Files (x86)\Microsoft Visual Studio\2019\Community\VC\Too'
	DB	'ls\MSVC\14.23.28105\include\random', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
CONST	SEGMENT
??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@ DB '"'
	DB	00H, 'i', 00H, 'n', 00H, 'v', 00H, 'a', 00H, 'l', 00H, 'i', 00H
	DB	'd', 00H, ' ', 00H, 'a', 00H, 'r', 00H, 'g', 00H, 'u', 00H, 'm'
	DB	00H, 'e', 00H, 'n', 00H, 't', 00H, '"', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
CONST	SEGMENT
??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@ DB 's'
	DB	00H, 't', 00H, 'd', 00H, ':', 00H, ':', 00H, '_', 00H, 'A', 00H
	DB	'd', 00H, 'j', 00H, 'u', 00H, 's', 00H, 't', 00H, '_', 00H, 'm'
	DB	00H, 'a', 00H, 'n', 00H, 'u', 00H, 'a', 00H, 'l', 00H, 'l', 00H
	DB	'y', 00H, '_', 00H, 'v', 00H, 'e', 00H, 'c', 00H, 't', 00H, 'o'
	DB	00H, 'r', 00H, '_', 00H, 'a', 00H, 'l', 00H, 'i', 00H, 'g', 00H
	DB	'n', 00H, 'e', 00H, 'd', 00H, 00H, 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
CONST	SEGMENT
??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@ DB 'C'
	DB	00H, ':', 00H, '\', 00H, 'P', 00H, 'r', 00H, 'o', 00H, 'g', 00H
	DB	'r', 00H, 'a', 00H, 'm', 00H, ' ', 00H, 'F', 00H, 'i', 00H, 'l'
	DB	00H, 'e', 00H, 's', 00H, ' ', 00H, '(', 00H, 'x', 00H, '8', 00H
	DB	'6', 00H, ')', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'c', 00H, 'r'
	DB	00H, 'o', 00H, 's', 00H, 'o', 00H, 'f', 00H, 't', 00H, ' ', 00H
	DB	'V', 00H, 'i', 00H, 's', 00H, 'u', 00H, 'a', 00H, 'l', 00H, ' '
	DB	00H, 'S', 00H, 't', 00H, 'u', 00H, 'd', 00H, 'i', 00H, 'o', 00H
	DB	'\', 00H, '2', 00H, '0', 00H, '1', 00H, '9', 00H, '\', 00H, 'C'
	DB	00H, 'o', 00H, 'm', 00H, 'm', 00H, 'u', 00H, 'n', 00H, 'i', 00H
	DB	't', 00H, 'y', 00H, '\', 00H, 'V', 00H, 'C', 00H, '\', 00H, 'T'
	DB	00H, 'o', 00H, 'o', 00H, 'l', 00H, 's', 00H, '\', 00H, 'M', 00H
	DB	'S', 00H, 'V', 00H, 'C', 00H, '\', 00H, '1', 00H, '4', 00H, '.'
	DB	00H, '2', 00H, '3', 00H, '.', 00H, '2', 00H, '8', 00H, '1', 00H
	DB	'0', 00H, '5', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c', 00H, 'l'
	DB	00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 'x', 00H, 'm', 00H
	DB	'e', 00H, 'm', 00H, 'o', 00H, 'r', 00H, 'y', 00H, 00H, 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
CONST	SEGMENT
??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@ DB 'C:\Pro'
	DB	'gram Files (x86)\Microsoft Visual Studio\2019\Community\VC\To'
	DB	'ols\MSVC\14.23.28105\include\xmemory', 00H	; `string'
CONST	ENDS
;	COMDAT ??_C@_02DKCKIIND@?$CFs@
CONST	SEGMENT
??_C@_02DKCKIIND@?$CFs@ DB '%s', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BB@FCMFBGOM@invalid?5argument@
CONST	SEGMENT
??_C@_0BB@FCMFBGOM@invalid?5argument@ DB 'invalid argument', 00H ; `string'
CONST	ENDS
;	COMDAT ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
_DATA	SEGMENT
?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA DD 066H ; `std::_Adjust_manually_vector_aligned'::`1'::__LINE__Var
_DATA	ENDS
;	COMDAT _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVexception@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0exception@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVexception@std@@@8
data$r	SEGMENT
??_R0?AVexception@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::exception `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVexception@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24 DD 010H
	DD	imagerel ??_R0?AVbad_alloc@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_alloc@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_alloc@std@@@8
data$r	SEGMENT
??_R0?AVbad_alloc@std@@@8 DQ FLAT:??_7type_info@@6B@	; std::bad_alloc `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_alloc@std@@', 00H
data$r	ENDS
;	COMDAT _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
xdata$x	SEGMENT
_CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24 DD 00H
	DD	imagerel ??_R0?AVbad_array_new_length@std@@@8
	DD	00H
	DD	0ffffffffH
	ORG $+4
	DD	018H
	DD	imagerel ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
xdata$x	ENDS
;	COMDAT ??_R0?AVbad_array_new_length@std@@@8
data$r	SEGMENT
??_R0?AVbad_array_new_length@std@@@8 DQ FLAT:??_7type_info@@6B@ ; std::bad_array_new_length `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVbad_array_new_length@std@@', 00H
data$r	ENDS
;	COMDAT _CTA3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_CTA3?AVbad_array_new_length@std@@ DD 03H
	DD	imagerel _CT??_R0?AVbad_array_new_length@std@@@8??0bad_array_new_length@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVbad_alloc@std@@@8??0bad_alloc@std@@QEAA@AEBV01@@Z24
	DD	imagerel _CT??_R0?AVexception@std@@@8??0exception@std@@QEAA@AEBV01@@Z24
xdata$x	ENDS
;	COMDAT _TI3?AVbad_array_new_length@std@@
xdata$x	SEGMENT
_TI3?AVbad_array_new_length@std@@ DD 00H
	DD	imagerel ??1bad_array_new_length@std@@UEAA@XZ
	DD	00H
	DD	imagerel _CTA3?AVbad_array_new_length@std@@
xdata$x	ENDS
;	COMDAT ??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
CONST	SEGMENT
??_C@_0BF@KINCDENJ@bad?5array?5new?5length@ DB 'bad array new length', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7bad_array_new_length@std@@6B@
CONST	SEGMENT
??_7bad_array_new_length@std@@6B@ DQ FLAT:??_R4bad_array_new_length@std@@6B@ ; std::bad_array_new_length::`vftable'
	DQ	FLAT:??_Ebad_array_new_length@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_7bad_alloc@std@@6B@
CONST	SEGMENT
??_7bad_alloc@std@@6B@ DQ FLAT:??_R4bad_alloc@std@@6B@	; std::bad_alloc::`vftable'
	DQ	FLAT:??_Ebad_alloc@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT ??_C@_0BC@EOODALEL@Unknown?5exception@
CONST	SEGMENT
??_C@_0BC@EOODALEL@Unknown?5exception@ DB 'Unknown exception', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7exception@std@@6B@
CONST	SEGMENT
??_7exception@std@@6B@ DQ FLAT:??_R4exception@std@@6B@	; std::exception::`vftable'
	DQ	FLAT:??_Eexception@std@@UEAAPEAXI@Z
	DQ	FLAT:?what@exception@std@@UEBAPEBDXZ
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z DD 025053401H
	DD	0118231dH
	DD	07011002dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z DD 025052e01H
	DD	01122317H
	DD	0700b0025H
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z DD 035052a01H
	DD	010e3313H
	DD	07007002bH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD 025053901H
	DD	011d2322H
	DD	070160025H
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z DD 025054a19H
	DD	011d2322H
	DD	07016002fH
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0168H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z$rtcName$0 DB 05fH ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	DB	052H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+11
??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z$rtcVarDesc DD 028H ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	DD	018H
	DQ	FLAT:??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z$rtcName$0
	ORG $+48
??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z$rtcFrameData DD 01H ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	DD	00H
	DQ	FLAT:??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$07@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c0025H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z DD 025053901H
	DD	011d2322H
	DD	07016001dH
	DD	05015H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z DD 025053401H
	DD	0118231dH
	DD	070110021H
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z DD 025052f01H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z DB 060H
	DD	imagerel $ip2state$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Update@Game@@AEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?PlaceFood@Game@@AEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$uniform_int_distribution@H@std@@QEAA@HH@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z DD 035053301H
	DD	0117331cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0param_type@?$uniform_int@H@std@@QEAA@HH@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z DD 025052c01H
	DD	01112316H
	DD	0700a0021H
	DD	05009H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust@?$uniform_int@H@std@@CAII@Z DD 025052801H
	DD	010d2312H
	DD	070060025H
	DD	05005H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$uniform_int@H@std@@QEAA@HH@Z DD 025053301H
	DD	0117231cH
	DD	07010001fH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ DD 025051e01H
	DD	010a230fH
	DD	07003001dH
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	070070025H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ DD 025052a01H
	DD	010e2313H
	DD	07007002dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ DD 025052a01H
	DD	010e2313H
	DD	070070021H
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z DD 025053301H
	DD	0117231cH
	DD	070100025H
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z DD 025053801H
	DD	011c2321H
	DD	07015001dH
	DD	05014H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetSize@Game@@QEBAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?GetScore@Game@@QEBAHXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z DD 025054a19H
	DD	011d2322H
	DD	070160047H
	DD	05015H
	DD	imagerel __GSHandlerCheck
	DD	0228H
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z$rtcName$0 DB 072H ; Game::Run
	DB	075H
	DB	06eH
	DB	06eH
	DB	069H
	DB	06eH
	DB	067H
	DB	00H
	ORG $+8
?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z$rtcVarDesc DD 0c4H ; Game::Run
	DD	01H
	DQ	FLAT:?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z$rtcName$0
	ORG $+48
?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z$rtcFrameData DD 01H ; Game::Run
	DD	00H
	DQ	FLAT:?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0Game@@QEAA@_K0@Z DB 06H
	DB	00H
	DB	00H
	DB	0d0H
	DB	02H
	DB	0d9H, 02H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0Game@@QEAA@_K0@Z DB 02H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0Game@@QEAA@_K0@Z DB 028H
	DD	imagerel $stateUnwindMap$??0Game@@QEAA@_K0@Z
	DD	imagerel $ip2state$??0Game@@QEAA@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Game@@QEAA@_K0@Z DD 025053411H
	DD	0118231dH
	DD	07011001fH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0Game@@QEAA@_K0@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Snake@@QEAA@AEBV0@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1Snake@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DB 060H
	DD	imagerel $ip2state$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007002fH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c0031H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DD 025053b19H
	DD	010e2313H
	DD	070070029H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
	DD	013bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ$rtcName$0 DB 024H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >
	DB	053H
	DB	031H
	DB	00H
	ORG $+12
??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ$rtcVarDesc DD 044H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >
	DD	01H
	DQ	FLAT:??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ$rtcName$0
	ORG $+48
??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ$rtcFrameData DD 01H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >
	DD	00H
	DQ	FLAT:??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA DD 031001H
	DD	0700c4210H
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z DB 0aH
	DB	00H
	DB	00H
	DB	'1', 04H
	DB	02H
	DB	08aH
	DB	04H
	DB	'j'
	DB	02H
	DB	'2'
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$stateUnwindMap$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z DB 04H
	DB	0eH
	DD	imagerel ?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA
	DB	02eH
	DD	imagerel ?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z DB 028H
	DD	imagerel $stateUnwindMap$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z
	DD	imagerel $ip2state$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z DD 025054019H
	DD	01132318H
	DD	0700c004dH
	DD	0500bH
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z
	DD	025aH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$0 DB 024H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
	DB	053H
	DB	032H
	DB	00H
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$1 DB 05fH ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
	DB	050H
	DB	072H
	DB	06fH
	DB	078H
	DB	079H
	DB	00H
	ORG $+1
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$2 DB 05fH ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
	DB	047H
	DB	075H
	DB	061H
	DB	072H
	DB	064H
	DB	00H
	ORG $+13
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcVarDesc DD 0118H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
	DD	08H
	DQ	FLAT:??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$2
	DD	0e8H
	DD	010H
	DQ	FLAT:??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$1
	DD	044H
	DD	01H
	DQ	FLAT:??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcName$0
	ORG $+144
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcFrameData DD 03H ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
	DD	00H
	DQ	FLAT:??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z DD 025053401H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0?$allocator@USDL_Point@@@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0?$allocator@USDL_Point@@@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0?$allocator@USDL_Point@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0?$allocator@USDL_Point@@@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0?$allocator@USDL_Point@@@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0Snake@@QEAA@HH@Z DD 025053301H
	DD	0117231cH
	DD	07010001dH
	DD	0500fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??Rrandom_device@std@@QEAAIXZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0random_device@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DB 060H
	DD	imagerel $ip2state$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DB 060H
	DD	imagerel $ip2state$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z DD 025052f19H
	DD	01132318H
	DD	0700c0021H
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ DB 060H
	DD	imagerel $ip2state$?_Orphan_all@_Container_base12@std@@QEAAXXZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Orphan_all@_Container_base12@std@@QEAAXXZ DD 025053b19H
	DD	010e2313H
	DD	070070025H
	DD	05006H
	DD	imagerel __GSHandlerCheck_EH4
	DD	imagerel $cppxdata$?_Orphan_all@_Container_base12@std@@QEAAXXZ
	DD	011bH
xdata	ENDS
;	COMDAT CONST
CONST	SEGMENT
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0 DB 05fH ; std::_Container_base12::_Orphan_all
	DB	04cH
	DB	06fH
	DB	063H
	DB	06bH
	DB	00H
	ORG $+10
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc DD 024H ; std::_Container_base12::_Orphan_all
	DD	04H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcName$0
	ORG $+48
?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData DD 01H ; std::_Container_base12::_Orphan_all
	DD	00H
	DQ	FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcVarDesc
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_base12@std@@QEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DB 060H
	DD	imagerel $ip2state$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z DD 035052f01H
	DD	01133318H
	DD	0700c002fH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?_Throw_bad_array_new_length@std@@YAXXZ DD 025051e01H
	DD	010a230fH
	DD	070030023H
	DD	05002H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_array_new_length@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_array_new_length@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_array_new_length@std@@QEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_array_new_length@std@@QEAA@XZ DB 060H
	DD	imagerel $ip2state$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_array_new_length@std@@QEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_array_new_length@std@@QEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gbad_alloc@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@QEAA@AEBV01@@Z DD 025052f01H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1bad_alloc@std@@UEAA@XZ DD 025052a01H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0bad_alloc@std@@AEAA@QEBD@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z DB 060H
	DD	imagerel $ip2state$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0bad_alloc@std@@AEAA@QEBD@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0bad_alloc@std@@AEAA@QEBD@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_Gexception@std@@UEAAPEAXI@Z DD 025052e01H
	DD	01122317H
	DD	0700b001dH
	DD	0500aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?what@exception@std@@UEBAPEBDXZ DD 025052a01H
	DD	010e2313H
	DD	07007001fH
	DD	05006H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??1exception@std@@UEAA@XZ DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??1exception@std@@UEAA@XZ DB 060H
	DD	imagerel $ip2state$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1exception@std@@UEAA@XZ DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??1exception@std@@UEAA@XZ
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@AEBV01@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@AEBV01@@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@AEBV01@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@AEBV01@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??0exception@std@@QEAA@QEBDH@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??0exception@std@@QEAA@QEBDH@Z DB 060H
	DD	imagerel $ip2state$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0exception@std@@QEAA@QEBDH@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??0exception@std@@QEAA@QEBDH@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$??2@YAPEAX_KPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$??2@YAPEAX_KPEAX@Z DB 060H
	DD	imagerel $ip2state$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??2@YAPEAX_KPEAX@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$??2@YAPEAX_KPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z DD 025053419H
	DD	0118231dH
	DD	07011001dH
	DD	05010H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX_K@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX_K@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX_K@Z DD 025052f19H
	DD	01132318H
	DD	0700c001dH
	DD	0500bH
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX_K@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$ip2state$?__empty_global_delete@@YAXPEAX@Z DB 02H
	DB	00H
	DB	00H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$cppxdata$?__empty_global_delete@@YAXPEAX@Z DB 060H
	DD	imagerel $ip2state$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__empty_global_delete@@YAXPEAX@Z DD 025052a19H
	DD	010e2313H
	DD	07007001dH
	DD	05006H
	DD	imagerel __CxxFrameHandler4
	DD	imagerel $cppxdata$?__empty_global_delete@@YAXPEAX@Z
xdata	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z
_TEXT	SEGMENT
_First_ch$ = 8
_Last_ch$ = 40
_Dest_ch$ = 72
_Count$ = 104
_First$ = 352
_Last$ = 360
_Dest$ = 368
??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z PROC ; std::_Copy_memmove<SDL_Point *,SDL_Point *>, COMDAT

; 1739 : _OutIt _Copy_memmove(_InIt _First, _InIt _Last, _OutIt _Dest) { // implement copy-like function as memmove

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode

; 1740 :     const char* const _First_ch = const_cast<const char*>(reinterpret_cast<const volatile char*>(_First));

	mov	rax, QWORD PTR _First$[rbp]
	mov	QWORD PTR _First_ch$[rbp], rax

; 1741 :     const char* const _Last_ch  = const_cast<const char*>(reinterpret_cast<const volatile char*>(_Last));

	mov	rax, QWORD PTR _Last$[rbp]
	mov	QWORD PTR _Last_ch$[rbp], rax

; 1742 :     char* const _Dest_ch        = const_cast<char*>(reinterpret_cast<volatile char*>(_Dest));

	mov	rax, QWORD PTR _Dest$[rbp]
	mov	QWORD PTR _Dest_ch$[rbp], rax

; 1743 :     const auto _Count           = static_cast<size_t>(_Last_ch - _First_ch);

	mov	rax, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Last_ch$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Count$[rbp], rax

; 1744 :     _CSTD memmove(_Dest_ch, _First_ch, _Count);

	mov	r8, QWORD PTR _Count$[rbp]
	mov	rdx, QWORD PTR _First_ch$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	call	memmove

; 1745 :     return reinterpret_cast<_OutIt>(_Dest_ch + _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	mov	rcx, QWORD PTR _Dest_ch$[rbp]
	add	rcx, rax
	mov	rax, rcx

; 1746 : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ENDP ; std::_Copy_memmove<SDL_Point *,SDL_Point *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z PROC ; std::_Unfancy<SDL_Point>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__46C44D95_xstddef
	call	__CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 295  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ENDP ; std::_Unfancy<SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z PROC ; std::_Get_unwrapped<SDL_Point>, COMDAT

; 275  : _NODISCARD constexpr _Ty* _Get_unwrapped(_Ty* const _Ptr) { // special case already-unwrapped pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode

; 276  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 277  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ENDP ; std::_Get_unwrapped<SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
__formal$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z PROC ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate, COMDAT

; 751  :     static void deallocate(_Alloc&, const pointer _Ptr, const size_type _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 752  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 753  :         _Deallocate<_New_alignof<value_type>>(_Ptr, sizeof(value_type) * _Count);

	imul	rax, QWORD PTR _Count$[rbp], 16
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 754  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ENDP ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ
_TEXT	SEGMENT
_Val$1 = 4
tv70 = 212
this$ = 256
?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ PROC ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_bits, COMDAT

; 3333 :     _Udiff _Get_bits() { // return a random value within [0, _Bmask]

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode
$LN2@Get_bits:

; 3334 :         for (;;) { // repeat until random value is in range
; 3335 :             _Udiff _Val = _Ref() - (_Urng::min)();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::operator()
	mov	DWORD PTR tv70[rbp], eax
	call	?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::min
	mov	ecx, DWORD PTR tv70[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Val$1[rbp], eax

; 3336 : 
; 3337 :             if (_Val <= _Bmask) {

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	cmp	DWORD PTR _Val$1[rbp], eax
	ja	SHORT $LN5@Get_bits

; 3338 :                 return _Val;

	mov	eax, DWORD PTR _Val$1[rbp]
	jmp	SHORT $LN1@Get_bits
$LN5@Get_bits:

; 3339 :             }
; 3340 :         }

	jmp	SHORT $LN2@Get_bits
$LN1@Get_bits:

; 3341 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ ENDP ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_bits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ
_TEXT	SEGMENT
_Ret$ = 4
_Num$1 = 40
this$ = 288
?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ PROC ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_all_bits, COMDAT

; 3317 :     _Udiff _Get_all_bits() { // return a random value

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode

; 3318 :         _Udiff _Ret = 0;

	mov	DWORD PTR _Ret$[rbp], 0

; 3319 : 
; 3320 :         for (size_t _Num = 0; _Num < CHAR_BIT * sizeof(_Udiff); _Num += _Bits) { // don't mask away any bits

	mov	QWORD PTR _Num$1[rbp], 0
	jmp	SHORT $LN4@Get_all_bi
$LN2@Get_all_bi:
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	rcx, QWORD PTR _Num$1[rbp]
	add	rcx, rax
	mov	rax, rcx
	mov	QWORD PTR _Num$1[rbp], rax
$LN4@Get_all_bi:
	cmp	QWORD PTR _Num$1[rbp], 32		; 00000020H
	jae	SHORT $LN3@Get_all_bi

; 3321 :             _Ret <<= _Bits - 1; // avoid full shift

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	dec	rax
	movzx	ecx, al
	mov	eax, DWORD PTR _Ret$[rbp]
	shl	eax, cl
	mov	DWORD PTR _Ret$[rbp], eax

; 3322 :             _Ret <<= 1;

	mov	eax, DWORD PTR _Ret$[rbp]
	shl	eax, 1
	mov	DWORD PTR _Ret$[rbp], eax

; 3323 :             _Ret |= _Get_bits();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_bits
	mov	ecx, DWORD PTR _Ret$[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Ret$[rbp], eax

; 3324 :         }

	jmp	SHORT $LN2@Get_all_bi
$LN3@Get_all_bi:

; 3325 : 
; 3326 :         return _Ret;

	mov	eax, DWORD PTR _Ret$[rbp]

; 3327 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ ENDP ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_all_bits
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z
_TEXT	SEGMENT
_Ret$1 = 4
_Mask$2 = 36
tv79 = 244
this$ = 288
_Index$ = 296
??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z PROC ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::operator(), COMDAT

; 3296 :     _Diff operator()(_Diff _Index) { // adapt _Urng closed range to [0, _Index)

$LN10:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode
$LN2@operator:

; 3297 :         for (;;) { // try a sample random value
; 3298 :             _Udiff _Ret  = 0; // random bits

	mov	DWORD PTR _Ret$1[rbp], 0

; 3299 :             _Udiff _Mask = 0; // 2^N - 1, _Ret is within [0, _Mask]

	mov	DWORD PTR _Mask$2[rbp], 0
$LN5@operator:

; 3300 : 
; 3301 :             while (_Mask < _Udiff(_Index - 1)) { // need more random bits

	mov	eax, DWORD PTR _Index$[rbp]
	dec	eax
	cmp	DWORD PTR _Mask$2[rbp], eax
	jae	SHORT $LN6@operator

; 3302 :                 _Ret <<= _Bits - 1; // avoid full shift

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	dec	rax
	movzx	ecx, al
	mov	eax, DWORD PTR _Ret$1[rbp]
	shl	eax, cl
	mov	DWORD PTR _Ret$1[rbp], eax

; 3303 :                 _Ret <<= 1;

	mov	eax, DWORD PTR _Ret$1[rbp]
	shl	eax, 1
	mov	DWORD PTR _Ret$1[rbp], eax

; 3304 :                 _Ret |= _Get_bits();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Get_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@AEAAIXZ ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_bits
	mov	ecx, DWORD PTR _Ret$1[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Ret$1[rbp], eax

; 3305 :                 _Mask <<= _Bits - 1; // avoid full shift

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	dec	rax
	movzx	ecx, al
	mov	eax, DWORD PTR _Mask$2[rbp]
	shl	eax, cl
	mov	DWORD PTR _Mask$2[rbp], eax

; 3306 :                 _Mask <<= 1;

	mov	eax, DWORD PTR _Mask$2[rbp]
	shl	eax, 1
	mov	DWORD PTR _Mask$2[rbp], eax

; 3307 :                 _Mask |= _Bmask;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	mov	ecx, DWORD PTR _Mask$2[rbp]
	or	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Mask$2[rbp], eax

; 3308 :             }

	jmp	SHORT $LN5@operator
$LN6@operator:

; 3309 : 
; 3310 :             // _Ret is [0, _Mask], _Index - 1 <= _Mask, return if unbiased
; 3311 :             if (_Ret / _Index < _Mask / _Index || _Mask % _Index == _Udiff(_Index - 1)) {

	xor	edx, edx
	mov	eax, DWORD PTR _Ret$1[rbp]
	div	DWORD PTR _Index$[rbp]
	mov	DWORD PTR tv79[rbp], eax
	xor	edx, edx
	mov	eax, DWORD PTR _Mask$2[rbp]
	div	DWORD PTR _Index$[rbp]
	mov	ecx, DWORD PTR tv79[rbp]
	cmp	ecx, eax
	jb	SHORT $LN8@operator
	xor	edx, edx
	mov	eax, DWORD PTR _Mask$2[rbp]
	div	DWORD PTR _Index$[rbp]
	mov	eax, edx
	mov	ecx, DWORD PTR _Index$[rbp]
	dec	ecx
	cmp	eax, ecx
	jne	SHORT $LN7@operator
$LN8@operator:

; 3312 :                 return static_cast<_Diff>(_Ret % _Index);

	xor	edx, edx
	mov	eax, DWORD PTR _Ret$1[rbp]
	div	DWORD PTR _Index$[rbp]
	mov	eax, edx
	jmp	SHORT $LN1@operator
$LN7@operator:

; 3313 :             }
; 3314 :         }

	jmp	$LN2@operator
$LN1@operator:

; 3315 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z ENDP ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z
_TEXT	SEGMENT
tv70 = 192
this$ = 240
_Func$ = 248
??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z PROC ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >, COMDAT

; 3290 :     explicit _Rng_from_urng(_Urng& _Func) : _Ref(_Func), _Bits(CHAR_BIT * sizeof(_Udiff)), _Bmask(_Udiff(-1)) {

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Func$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 32			; 00000020H
	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+16], -1			; ffffffffH

; 3291 :         for (; (_Urng::max)() - (_Urng::min)() < _Bmask; _Bmask >>= 1) {

	jmp	SHORT $LN4@Rng_from_u
$LN2@Rng_from_u:
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	shr	eax, 1
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+16], eax
$LN4@Rng_from_u:
	call	?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::max
	mov	DWORD PTR tv70[rbp], eax
	call	?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::min
	mov	ecx, DWORD PTR tv70[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	rcx, QWORD PTR this$[rbp]
	cmp	eax, DWORD PTR [rcx+16]
	jae	SHORT $LN3@Rng_from_u

; 3292 :             --_Bits;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	dec	rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx+8], rax

; 3293 :         }

	jmp	SHORT $LN2@Rng_from_u
$LN3@Rng_from_u:

; 3294 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ENDP ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Block_size$ = 8
_Ptr_container$ = 40
_Ptr$ = 72
_Bytes$ = 320
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z PROC ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>, COMDAT

; 83   : _DECLSPEC_ALLOCATOR void* _Allocate_manually_vector_aligned(const size_t _Bytes) {

$LN13:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 344				; 00000158H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 86					; 00000056H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+376]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 84   :     // allocate _Bytes manually aligned to at least _Big_allocation_alignment
; 85   :     const size_t _Block_size = _Non_user_size + _Bytes;

	mov	rax, QWORD PTR _Bytes$[rbp]
	add	rax, 47					; 0000002fH
	mov	QWORD PTR _Block_size$[rbp], rax

; 86   :     if (_Block_size <= _Bytes) {

	mov	rax, QWORD PTR _Bytes$[rbp]
	cmp	QWORD PTR _Block_size$[rbp], rax
	ja	SHORT $LN8@Allocate_m

; 87   :         _Throw_bad_array_new_length(); // add overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN8@Allocate_m:

; 88   :     }
; 89   : 
; 90   :     const uintptr_t _Ptr_container = reinterpret_cast<uintptr_t>(_Traits::_Allocate(_Block_size));

	mov	rcx, QWORD PTR _Block_size$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Allocate_m:

; 91   :     _STL_VERIFY(_Ptr_container != 0, "invalid argument"); // validate even in release since we're doing p[-1]

	cmp	QWORD PTR _Ptr_container$[rbp], 0
	je	SHORT $LN9@Allocate_m
	jmp	SHORT $LN10@Allocate_m
$LN9@Allocate_m:
$LN7@Allocate_m:
	lea	rax, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 91					; 0000005bH
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN12@Allocate_m
	int	3
	xor	eax, eax
$LN12@Allocate_m:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 91					; 0000005bH
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EO@GFNCMDLA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAl?$AAl?$AAo?$AAc?$AAa?$AAt?$AAe?$AA_@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Allocate_m
$LN10@Allocate_m:
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN4@Allocate_m

; 92   :     void* const _Ptr = reinterpret_cast<void*>((_Ptr_container + _Non_user_size) & ~(_Big_allocation_alignment - 1));

	mov	rax, QWORD PTR _Ptr_container$[rbp]
	add	rax, 47					; 0000002fH
	and	rax, -32				; ffffffffffffffe0H
	mov	QWORD PTR _Ptr$[rbp], rax

; 93   :     static_cast<uintptr_t*>(_Ptr)[-1] = _Ptr_container;

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rcx+rax], rdx

; 94   : 
; 95   : #ifdef _DEBUG
; 96   :     static_cast<uintptr_t*>(_Ptr)[-2] = _Big_allocation_sentinel;

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	mov	QWORD PTR [rcx+rax], rdx

; 97   : #endif // _DEBUG
; 98   :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]
$LN11@Allocate_m:

; 99   : }

	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ENDP ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
_TEXT	SEGMENT
_UFirst$ = 8
_ULast$ = 40
_First$ = 288
_Last$ = 296
_Dest$ = 304
_Al$ = 312
??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z PROC ; std::_Uninitialized_copy<SDL_Point *,std::allocator<SDL_Point> >, COMDAT

; 1600 :     const _InIt _First, const _InIt _Last, _Alloc_ptr_t<_Alloc> _Dest, _Alloc& _Al) {

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 1601 :     // copy [_First, _Last) to raw _Dest, using _Al
; 1602 :     // note: only called internally from elsewhere in the STL
; 1603 :     using _Ptrval = typename _Alloc::value_type*;
; 1604 : 
; 1605 :     auto _UFirst      = _Get_unwrapped(_First);

	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ; std::_Get_unwrapped<SDL_Point>
	mov	QWORD PTR _UFirst$[rbp], rax

; 1606 :     const auto _ULast = _Get_unwrapped(_Last);

	mov	rcx, QWORD PTR _Last$[rbp]
	call	??$_Get_unwrapped@USDL_Point@@@std@@YAPEAUSDL_Point@@QEAU1@@Z ; std::_Get_unwrapped<SDL_Point>
	mov	QWORD PTR _ULast$[rbp], rax

; 1607 : 
; 1608 :     if constexpr (conjunction_v<bool_constant<_Ptr_copy_cat<decltype(_UFirst), _Ptrval>::_Really_trivial>,
; 1609 :                       _Uses_default_construct<_Alloc, _Ptrval, decltype(*_UFirst)>>) {
; 1610 :         _Copy_memmove(_UFirst, _ULast, _Unfancy(_Dest));

	mov	rcx, QWORD PTR _Dest$[rbp]
	call	??$_Unfancy@USDL_Point@@@std@@YAPEAUSDL_Point@@PEAU1@@Z ; std::_Unfancy<SDL_Point>
	mov	r8, rax
	mov	rdx, QWORD PTR _ULast$[rbp]
	mov	rcx, QWORD PTR _UFirst$[rbp]
	call	??$_Copy_memmove@PEAUSDL_Point@@PEAU1@@std@@YAPEAUSDL_Point@@PEAU1@00@Z ; std::_Copy_memmove<SDL_Point *,SDL_Point *>

; 1611 :         _Dest += _ULast - _UFirst;

	mov	rax, QWORD PTR _UFirst$[rbp]
	mov	rcx, QWORD PTR _ULast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	rcx, QWORD PTR _Dest$[rbp]
	lea	rax, QWORD PTR [rcx+rax*8]
	mov	QWORD PTR _Dest$[rbp], rax

; 1612 :         (void) _Al;
; 1613 :     } else {
; 1614 :         _Uninitialized_backout_al<_Alloc> _Backout{_Dest, _Al};
; 1615 :         for (; _UFirst != _ULast; ++_UFirst) {
; 1616 :             _Backout._Emplace_back(*_UFirst);
; 1617 :         }
; 1618 : 
; 1619 :         _Dest = _Backout._Release();
; 1620 :     }
; 1621 : 
; 1622 :     return _Dest;

	mov	rax, QWORD PTR _Dest$[rbp]

; 1623 : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ENDP ; std::_Uninitialized_copy<SDL_Point *,std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z PROC ; std::forward<std::allocator<SDL_Point> >, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FFC6471F_type_traits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1422 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z ENDP ; std::forward<std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >, COMDAT

; 1081 : void _Deallocate_plain(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1082 :     // deallocate a plain pointer using an allocator
; 1083 :     using _Alloc_traits = allocator_traits<_Alloc>;
; 1084 :     if constexpr (is_same_v<_Alloc_ptr_t<_Alloc>, typename _Alloc::value_type*>) {
; 1085 :         _Alloc_traits::deallocate(_Al, _Ptr, 1);

	mov	r8d, 1
	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?deallocate@?$_Default_allocator_traits@V?$allocator@U_Container_proxy@std@@@std@@@std@@SAXAEAV?$allocator@U_Container_proxy@std@@@2@QEAU_Container_proxy@2@_K@Z ; std::_Default_allocator_traits<std::allocator<std::_Container_proxy> >::deallocate
	npad	1

; 1086 :     } else {
; 1087 :         using _Ptr_traits = pointer_traits<_Alloc_ptr_t<_Alloc>>;
; 1088 :         _Alloc_traits::deallocate(_Al, _Ptr_traits::pointer_to(*_Ptr), 1);
; 1089 :     }
; 1090 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z
_TEXT	SEGMENT
_Rng$ = 8
_Umin$ = 52
_Umax$ = 84
_Uret$ = 116
__$ArrayPad$ = 328
this$ = 368
_Eng$ = 376
_Min$ = 384
_Max$ = 392
??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z PROC ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >, COMDAT

; 1882 :     result_type _Eval(_Engine& _Eng, _Ty _Min, _Ty _Max) const { // compute next value in range [_Min, _Max]

$LN5:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1883 :         _Rng_from_urng<_Uty, _Engine> _Rng(_Eng);

	mov	rdx, QWORD PTR _Eng$[rbp]
	lea	rcx, QWORD PTR _Rng$[rbp]
	call	??0?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAA@AEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >

; 1884 : 
; 1885 :         const _Uty _Umin = _Adjust(_Uty(_Min));

	mov	ecx, DWORD PTR _Min$[rbp]
	call	?_Adjust@?$uniform_int@H@std@@CAII@Z	; std::uniform_int<int>::_Adjust
	mov	DWORD PTR _Umin$[rbp], eax

; 1886 :         const _Uty _Umax = _Adjust(_Uty(_Max));

	mov	ecx, DWORD PTR _Max$[rbp]
	call	?_Adjust@?$uniform_int@H@std@@CAII@Z	; std::uniform_int<int>::_Adjust
	mov	DWORD PTR _Umax$[rbp], eax

; 1887 : 
; 1888 :         _Uty _Uret;
; 1889 : 
; 1890 :         if (_Umax - _Umin == _Uty(-1)) {

	mov	eax, DWORD PTR _Umin$[rbp]
	mov	ecx, DWORD PTR _Umax$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	cmp	eax, -1					; ffffffffH
	jne	SHORT $LN2@Eval

; 1891 :             _Uret = static_cast<_Uty>(_Rng._Get_all_bits());

	lea	rcx, QWORD PTR _Rng$[rbp]
	call	?_Get_all_bits@?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAIXZ ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::_Get_all_bits
	mov	DWORD PTR _Uret$[rbp], eax

; 1892 :         } else {

	jmp	SHORT $LN3@Eval
$LN2@Eval:

; 1893 :             _Uret = static_cast<_Uty>(_Rng(static_cast<_Uty>(_Umax - _Umin + 1)));

	mov	eax, DWORD PTR _Umin$[rbp]
	mov	ecx, DWORD PTR _Umax$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	inc	eax
	mov	edx, eax
	lea	rcx, QWORD PTR _Rng$[rbp]
	call	??R?$_Rng_from_urng@IV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@std@@QEAAII@Z ; std::_Rng_from_urng<unsigned int,std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >::operator()
	mov	DWORD PTR _Uret$[rbp], eax
$LN3@Eval:

; 1894 :         }
; 1895 : 
; 1896 :         return static_cast<_Ty>(_Adjust(static_cast<_Uty>(_Uret + _Umin)));

	mov	eax, DWORD PTR _Umin$[rbp]
	mov	ecx, DWORD PTR _Uret$[rbp]
	add	ecx, eax
	mov	eax, ecx
	mov	ecx, eax
	call	?_Adjust@?$uniform_int@H@std@@CAII@Z	; std::uniform_int<int>::_Adjust

; 1897 :     }

	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z ENDP ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\type_traits
;	COMDAT ??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z
_TEXT	SEGMENT
_Arg$ = 224
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z PROC ; std::forward<std::_Container_base12 *>, COMDAT

; 1420 :     remove_reference_t<_Ty>& _Arg) noexcept { // forward an lvalue as either an lvalue or an rvalue

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__FFC6471F_type_traits
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1421 :     return static_cast<_Ty&&>(_Arg);

	mov	rax, QWORD PTR _Arg$[rbp]

; 1422 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ENDP ; std::forward<std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z PROC ; std::addressof<std::_Container_proxy>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__46C44D95_xstddef
	call	__CheckForDebuggerJustMyCode
	npad	1

; 280  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 281  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$07@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$07@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<8>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

	mov	rax, 2305843009213693951		; 1fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
$LN3@Get_size_o:

; 36   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$07@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<8>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z
_TEXT	SEGMENT
_First$ = 224
_Last$ = 232
_Al$ = 240
??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z PROC ; std::_Destroy_range<std::allocator<SDL_Point> >, COMDAT

; 1027 : void _Destroy_range(_Alloc_ptr_t<_Alloc> _First, const _Alloc_ptr_t<_Alloc> _Last, _Alloc& _Al) noexcept {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1028 :     // note that this is an optimization for debug mode codegen; in release mode the BE removes all of this
; 1029 :     using _Ty = typename _Alloc::value_type;
; 1030 :     if
; 1031 :         _CONSTEXPR_IF(conjunction_v<is_trivially_destructible<_Ty>, _Uses_default_destroy<_Alloc, _Ty*>>) {
; 1032 :             (void) _First;
; 1033 :             (void) _Last;
; 1034 :             (void) _Al;
; 1035 :         }
; 1036 :     else {
; 1037 :         for (; _First != _Last; ++_First) {
; 1038 :             allocator_traits<_Alloc>::destroy(_Al, _Unfancy(_First));
; 1039 :         }
; 1040 :     }
; 1041 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ENDP ; std::_Destroy_range<std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z
_TEXT	SEGMENT
_Overflow_is_possible$ = 4
_Max_possible$1 = 40
_Count$ = 288
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z PROC		; std::_Get_size_of_n<16>, COMDAT

; 24   : _NODISCARD constexpr size_t _Get_size_of_n(const size_t _Count) {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 25   :     constexpr bool _Overflow_is_possible = _Ty_size > 1;

	mov	BYTE PTR _Overflow_is_possible$[rbp], 1

; 26   : 
; 27   :     if
; 28   :         _CONSTEXPR_IF(_Overflow_is_possible) {
; 29   :             constexpr size_t _Max_possible = static_cast<size_t>(-1) / _Ty_size;

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	mov	QWORD PTR _Max_possible$1[rbp], rax

; 30   :             if (_Count > _Max_possible) {

	mov	rax, 1152921504606846975		; 0fffffffffffffffH
	cmp	QWORD PTR _Count$[rbp], rax
	jbe	SHORT $LN2@Get_size_o

; 31   :                 _Throw_bad_array_new_length(); // multiply overflow

	call	?_Throw_bad_array_new_length@std@@YAXXZ	; std::_Throw_bad_array_new_length
$LN2@Get_size_o:

; 32   :             }
; 33   :         }
; 34   : 
; 35   :     return _Count * _Ty_size;

	imul	rax, QWORD PTR _Count$[rbp], 16
$LN3@Get_size_o:

; 36   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z ENDP		; std::_Get_size_of_n<16>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z
_TEXT	SEGMENT
_Ptr$ = 224
_Bytes$ = 232
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z PROC		; std::_Deallocate<16,0>, COMDAT

; 183  : void _Deallocate(void* _Ptr, size_t _Bytes) noexcept {

$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 184  :     // deallocate storage allocated by _Allocate when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 185  : #if defined(_M_IX86) || defined(_M_X64)
; 186  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Deallocate

; 187  :         _Adjust_manually_vector_aligned(_Ptr, _Bytes);

	lea	rdx, QWORD PTR _Bytes$[rbp]
	lea	rcx, QWORD PTR _Ptr$[rbp]
	call	?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ; std::_Adjust_manually_vector_aligned
	npad	1
$LN2@Deallocate:

; 188  :     }
; 189  : #endif // defined(_M_IX86) || defined(_M_X64)
; 190  : 
; 191  :     ::operator delete(_Ptr, _Bytes);

	mov	rdx, QWORD PTR _Bytes$[rbp]
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
	npad	1

; 192  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ENDP		; std::_Deallocate<16,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z PROC ; std::_Allocate<16,std::_Default_allocate_traits,0>, COMDAT

; 167  : _DECLSPEC_ALLOCATOR void* _Allocate(const size_t _Bytes) {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 168  :     // allocate _Bytes when !_HAS_ALIGNED_NEW || _Align <= __STDCPP_DEFAULT_NEW_ALIGNMENT__
; 169  : #if defined(_M_IX86) || defined(_M_X64)
; 170  :     if (_Bytes >= _Big_allocation_threshold) { // boost the alignment of big allocations to help autovectorization

	cmp	QWORD PTR _Bytes$[rbp], 4096		; 00001000H
	jb	SHORT $LN2@Allocate

; 171  :         return _Allocate_manually_vector_aligned<_Traits>(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??$_Allocate_manually_vector_aligned@U_Default_allocate_traits@std@@@std@@YAPEAX_K@Z ; std::_Allocate_manually_vector_aligned<std::_Default_allocate_traits>
	jmp	SHORT $LN1@Allocate
$LN2@Allocate:

; 172  :     }
; 173  : #endif // defined(_M_IX86) || defined(_M_X64)
; 174  : 
; 175  :     if (_Bytes != 0) {

	cmp	QWORD PTR _Bytes$[rbp], 0
	je	SHORT $LN3@Allocate

; 176  :         return _Traits::_Allocate(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ; std::_Default_allocate_traits::_Allocate
	jmp	SHORT $LN1@Allocate
$LN3@Allocate:

; 177  :     }
; 178  : 
; 179  :     return nullptr;

	xor	eax, eax
$LN1@Allocate:

; 180  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ENDP ; std::_Allocate<16,std::_Default_allocate_traits,0>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z
_TEXT	SEGMENT
_Ptr$ = 224
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z PROC ; std::_Unfancy<std::_Container_proxy>, COMDAT

; 293  : _Ty* _Unfancy(_Ty* _Ptr) { // do nothing for plain pointers

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__46C44D95_xstddef
	call	__CheckForDebuggerJustMyCode

; 294  :     return _Ptr;

	mov	rax, QWORD PTR _Ptr$[rbp]

; 295  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ENDP ; std::_Unfancy<std::_Container_proxy>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z
_TEXT	SEGMENT
_New_proxy$ = 8
$T1 = 232
this$ = 288
_Al$ = 296
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z PROC ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >, COMDAT

; 1184 :     void _Alloc_proxy(_Alloc&& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 1185 :         _Container_proxy* const _New_proxy = _Unfancy(_Al.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	QWORD PTR _New_proxy$[rbp], rax

; 1186 :         _Construct_in_place(*_New_proxy, this);

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rcx, QWORD PTR _New_proxy$[rbp]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1187 :         _Myproxy            = _New_proxy;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _New_proxy$[rbp]
	mov	QWORD PTR [rax], rcx

; 1188 :         _New_proxy->_Mycont = this;

	mov	rax, QWORD PTR _New_proxy$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], rcx

; 1189 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ENDP ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z PROC ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><>, COMDAT

; 1414 :         : _Ty1(), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$allocator@USDL_Point@@@std@@QEAA@XZ ; std::allocator<SDL_Point>::allocator<SDL_Point>
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<SDL_Point> >::_Vector_val<std::_Simple_types<SDL_Point> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ENDP ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
_Dest$ = 248
??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Ucopy<SDL_Point *>, COMDAT

; 1543 :     pointer _Ucopy(_Iter _First, _Iter _Last, pointer _Dest) { // copy [_First, _Last) to raw _Dest, using allocator

$LN3:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1544 :         return _Uninitialized_copy(_First, _Last, _Dest, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	r9, rax
	mov	r8, QWORD PTR _Dest$[rbp]
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Uninitialized_copy@PEAUSDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@YAPEAUSDL_Point@@QEAU1@0PEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Uninitialized_copy<SDL_Point *,std::allocator<SDL_Point> >

; 1545 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Ucopy<SDL_Point *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xutility
;	COMDAT ??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ PROC ; std::_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >::~_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >, COMDAT

; 3526 :     ~_Tidy_guard() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__86E03ACD_xutility
	call	__CheckForDebuggerJustMyCode
	npad	1

; 3527 :         if (_Target) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Tidy_guard

; 3528 :             _Target->_Tidy();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Tidy
	npad	1
$LN2@Tidy_guard:

; 3529 :         }
; 3530 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >::~_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1382 :     ~_Container_proxy_ptr12() {

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1383 :         if (_Ptr) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN2@Container_

; 1384 :             _Delete_plain_internal(_Al, _Ptr);

	mov	rax, QWORD PTR this$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax+8]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	npad	1
$LN2@Container_:

; 1385 :         }
; 1386 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z
_TEXT	SEGMENT
$T1 = 200
this$ = 256
_Al_$ = 264
_Mycont$ = 272
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z PROC ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >, COMDAT

; 1368 :     _Container_proxy_ptr12(_Alloc& _Al_, _Container_base12& _Mycont)

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 1369 :         : _Al(_Al_) { // create a new _Container_proxy pointing at _Mycont

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Al_$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 1370 :         _Ptr = _Unfancy(_Al_.allocate(1));

	mov	edx, 1
	mov	rcx, QWORD PTR _Al_$[rbp]
	call	?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ; std::allocator<std::_Container_proxy>::allocate
	mov	rcx, rax
	call	??$_Unfancy@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@PEAU10@@Z ; std::_Unfancy<std::_Container_proxy>
	mov	rcx, QWORD PTR this$[rbp]
	mov	QWORD PTR [rcx], rax

; 1371 :         _Construct_in_place(*_Ptr, _STD addressof(_Mycont));

	mov	rcx, QWORD PTR _Mycont$[rbp]
	call	??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ; std::addressof<std::_Container_base12>
	mov	QWORD PTR $T1[rbp], rax
	lea	rdx, QWORD PTR $T1[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rax]
	call	??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>

; 1372 :         _Mycont._Myproxy = _Ptr;

	mov	rax, QWORD PTR _Mycont$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 1373 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
_Val1$ = 240
??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z PROC ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><std::allocator<SDL_Point> >, COMDAT

; 1418 :         : _Ty1(_STD forward<_Other1>(_Val1)), _Myval2(_STD forward<_Other2>(_Val2)...) {}

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	BYTE PTR [rsp+16], dl
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR _Val1$[rbp]
	call	??$forward@V?$allocator@USDL_Point@@@std@@@std@@YA$$QEAV?$allocator@USDL_Point@@@0@AEAV10@@Z ; std::forward<std::allocator<SDL_Point> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ ; std::_Vector_val<std::_Simple_types<SDL_Point> >::_Vector_val<std::_Simple_types<SDL_Point> >
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z ENDP ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z
_TEXT	SEGMENT
_Al$ = 224
_Ptr$ = 232
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z PROC ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >, COMDAT

; 1109 : void _Delete_plain_internal(_Alloc& _Al, typename _Alloc::value_type* const _Ptr) noexcept {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1110 :     // destroy *_Ptr in place, then deallocate _Ptr using _Al; used for internal container types the user didn't name
; 1111 :     using _Ty = typename _Alloc::value_type;
; 1112 :     _Ptr->~_Ty();
; 1113 :     _Deallocate_plain(_Al, _Ptr);

	mov	rdx, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Al$[rbp]
	call	??$_Deallocate_plain@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Deallocate_plain<std::allocator<std::_Container_proxy> >
	npad	1

; 1114 : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ENDP ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\utility
;	COMDAT ??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z
_TEXT	SEGMENT
_Old_val$ = 8
_Val$ = 256
_New_val$ = 264
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z PROC ; std::exchange<std::_Container_proxy *,std::nullptr_t>, COMDAT

; 526  : _Ty exchange(_Ty& _Val, _Other&& _New_val) { // assign _New_val to _Val, return previous _Val

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__B1DBDA87_utility
	call	__CheckForDebuggerJustMyCode

; 527  :     _Ty _Old_val = static_cast<_Ty&&>(_Val);

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Old_val$[rbp], rax

; 528  :     _Val         = static_cast<_Other&&>(_New_val);

	mov	rax, QWORD PTR _Val$[rbp]
	mov	rcx, QWORD PTR _New_val$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	QWORD PTR [rax], rcx

; 529  :     return _Old_val;

	mov	rax, QWORD PTR _Old_val$[rbp]

; 530  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ENDP ; std::exchange<std::_Container_proxy *,std::nullptr_t>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z
_TEXT	SEGMENT
this$ = 224
__formal$ = 232
??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z PROC ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><SDL_Point>, COMDAT

; 863  :     constexpr allocator(const allocator<_Other>&) noexcept {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z ENDP ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z PROC ; std::allocator<std::_Container_proxy>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$0BA@@std@@YA_K_K@Z	; std::_Get_size_of_n<16>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@U_Container_proxy@std@@@std@@QEAAPEAU_Container_proxy@2@_K@Z ENDP ; std::allocator<std::_Container_proxy>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z
_TEXT	SEGMENT
this$ = 224
_Eng$ = 232
??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z PROC ; std::uniform_int<int>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >, COMDAT

; 1849 :     _NODISCARD result_type operator()(_Engine& _Eng) const { // return next value

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1850 :         return _Eval(_Eng, _Par._Min, _Par._Max);

	mov	rax, QWORD PTR this$[rbp]
	mov	r9d, DWORD PTR [rax+4]
	mov	rax, QWORD PTR this$[rbp]
	mov	r8d, DWORD PTR [rax]
	mov	rdx, QWORD PTR _Eng$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Eval@V?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@AEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@HH@Z ; std::uniform_int<int>::_Eval<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >

; 1851 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ENDP ; std::uniform_int<int>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?Update@Game@@AEAAXXZ
_TEXT	SEGMENT
new_x$ = 4
new_y$ = 36
this$ = 288
?Update@Game@@AEAAXXZ PROC				; Game::Update, COMDAT

; 78   : void Game::Update() {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode

; 79   :   if (!snake.alive) return;

	mov	rax, QWORD PTR this$[rbp]
	movzx	eax, BYTE PTR [rax+20]
	test	eax, eax
	jne	SHORT $LN2@Update
	jmp	$LN1@Update
$LN2@Update:

; 80   : 
; 81   :   snake.Update();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?Update@Snake@@QEAAXXZ			; Snake::Update

; 82   : 
; 83   :   int new_x = static_cast<int>(snake.head_x);

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+24]
	mov	DWORD PTR new_x$[rbp], eax

; 84   :   int new_y = static_cast<int>(snake.head_y);

	mov	rax, QWORD PTR this$[rbp]
	cvttss2si eax, DWORD PTR [rax+28]
	mov	DWORD PTR new_y$[rbp], eax

; 85   : 
; 86   :   // Check if there's food over here
; 87   :   if (food.x == new_x && food.y == new_y) {

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_x$[rbp]
	cmp	DWORD PTR [rax+72], ecx
	jne	SHORT $LN3@Update
	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR new_y$[rbp]
	cmp	DWORD PTR [rax+76], ecx
	jne	SHORT $LN3@Update

; 88   :     score++;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+5100]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx+5100], eax

; 89   :     PlaceFood();

	mov	rcx, QWORD PTR this$[rbp]
	call	?PlaceFood@Game@@AEAAXXZ		; Game::PlaceFood

; 90   :     // Grow snake and increase speed.
; 91   :     snake.GrowBody();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?GrowBody@Snake@@QEAAXXZ		; Snake::GrowBody

; 92   :     snake.speed += 0.008;

	mov	rax, QWORD PTR this$[rbp]
	cvtss2sd xmm0, DWORD PTR [rax+12]
	addsd	xmm0, QWORD PTR __real@3f80624dd2f1a9fc
	cvtsd2ss xmm0, xmm0
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+12], xmm0
$LN3@Update:
$LN1@Update:

; 93   :   }
; 94   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?Update@Game@@AEAAXXZ ENDP				; Game::Update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?PlaceFood@Game@@AEAAXXZ
_TEXT	SEGMENT
x$ = 4
y$ = 36
tv93 = 248
tv86 = 248
tv75 = 248
this$ = 288
?PlaceFood@Game@@AEAAXXZ PROC				; Game::PlaceFood, COMDAT

; 63   : void Game::PlaceFood() {

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
$LN2@PlaceFood:

; 64   :   int x, y;
; 65   :   while (true) {

	xor	eax, eax
	cmp	eax, 1
	je	$LN3@PlaceFood

; 66   :     x = random_w(engine);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5084				; 000013dcH
	mov	QWORD PTR tv75[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 84					; 00000054H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv75[rbp]
	call	??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::uniform_int<int>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	mov	DWORD PTR x$[rbp], eax

; 67   :     y = random_h(engine);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5092				; 000013e4H
	mov	QWORD PTR tv86[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 84					; 00000054H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv86[rbp]
	call	??$?RV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@@?$uniform_int@H@std@@QEBAHAEAV?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@1@@Z ; std::uniform_int<int>::operator()<std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253> >
	mov	DWORD PTR y$[rbp], eax

; 68   :     // Check that the location is not occupied by a snake item before placing
; 69   :     // food.
; 70   :     if (!snake.SnakeCell(x, y)) {

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv93[rbp], rax
	mov	r8d, DWORD PTR y$[rbp]
	mov	edx, DWORD PTR x$[rbp]
	mov	rcx, QWORD PTR tv93[rbp]
	call	?SnakeCell@Snake@@QEAA_NHH@Z		; Snake::SnakeCell
	movzx	eax, al
	test	eax, eax
	jne	SHORT $LN4@PlaceFood

; 71   :       food.x = x;

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR x$[rbp]
	mov	DWORD PTR [rax+72], ecx

; 72   :       food.y = y;

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR y$[rbp]
	mov	DWORD PTR [rax+76], ecx

; 73   :       return;

	jmp	SHORT $LN1@PlaceFood
$LN4@PlaceFood:

; 74   :     }
; 75   :   }

	jmp	$LN2@PlaceFood
$LN3@PlaceFood:
$LN1@PlaceFood:

; 76   : }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?PlaceFood@Game@@AEAAXXZ ENDP				; Game::PlaceFood
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??0?$uniform_int_distribution@H@std@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 224
_Min0$ = 232
_Max0$ = 240
??0?$uniform_int_distribution@H@std@@QEAA@HH@Z PROC	; std::uniform_int_distribution<int>::uniform_int_distribution<int>, COMDAT

; 1953 :     explicit uniform_int_distribution(_Ty _Min0 = 0, _Ty _Max0 = (numeric_limits<_Ty>::max)())

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1954 :         : _Mybase(_Min0, _Max0) { // construct from parameters

	mov	r8d, DWORD PTR _Max0$[rbp]
	mov	edx, DWORD PTR _Min0$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$uniform_int@H@std@@QEAA@HH@Z	; std::uniform_int<int>::uniform_int<int>

; 1955 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$uniform_int_distribution@H@std@@QEAA@HH@Z ENDP	; std::uniform_int_distribution<int>::uniform_int_distribution<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z
_TEXT	SEGMENT
this$ = 224
_Min0$ = 232
_Max0$ = 240
?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z PROC	; std::uniform_int<int>::param_type::_Init, COMDAT

; 1805 :         void _Init(_Ty _Min0, _Ty _Max0) { // set internal state

$LN12:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode
$LN4@Init:

; 1806 :             _STL_ASSERT(_Min0 <= _Max0, "invalid min and max arguments for uniform_int");

	mov	eax, DWORD PTR _Max0$[rbp]
	cmp	DWORD PTR _Min0$[rbp], eax
	jg	SHORT $LN8@Init
	jmp	SHORT $LN9@Init
$LN8@Init:
$LN7@Init:
	lea	rax, OFFSET FLAT:??_C@_0CO@CCCJIBKO@invalid?5min?5and?5max?5arguments?5f@
	mov	QWORD PTR [rsp+40], rax
	lea	rax, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rax
	xor	r9d, r9d
	mov	r8d, 1806				; 0000070eH
	lea	rdx, OFFSET FLAT:??_C@_0GH@EOCNBNE@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN11@Init
	int	3
	xor	eax, eax
$LN11@Init:
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, 1806				; 0000070eH
	lea	r8, OFFSET FLAT:??_C@_1MO@JGHLKOIO@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1FC@FNLBOEA@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AAu?$AAn?$AAi?$AAf?$AAo?$AAr?$AAm?$AA_?$AAi?$AAn@
	lea	rcx, OFFSET FLAT:??_C@_1GA@FJHEAOJP@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAm?$AAi?$AAn?$AA?5?$AAa?$AAn@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Init
$LN9@Init:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Init

; 1807 :             _Min = _Min0;

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _Min0$[rbp]
	mov	DWORD PTR [rax], ecx

; 1808 :             _Max = _Max0;

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _Max0$[rbp]
	mov	DWORD PTR [rax+4], ecx

; 1809 :         }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z ENDP	; std::uniform_int<int>::param_type::_Init
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??0param_type@?$uniform_int@H@std@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 224
_Min0$ = 232
_Max0$ = 240
??0param_type@?$uniform_int@H@std@@QEAA@HH@Z PROC	; std::uniform_int<int>::param_type::param_type, COMDAT

; 1785 :         explicit param_type(result_type _Min0 = 0, result_type _Max0 = 9) { // construct from parameters

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1786 :             _Init(_Min0, _Max0);

	mov	r8d, DWORD PTR _Max0$[rbp]
	mov	edx, DWORD PTR _Min0$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Init@param_type@?$uniform_int@H@std@@QEAAXHH@Z ; std::uniform_int<int>::param_type::_Init

; 1787 :         }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0param_type@?$uniform_int@H@std@@QEAA@HH@Z ENDP	; std::uniform_int<int>::param_type::param_type
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z
_TEXT	SEGMENT
_Adjuster$ = 4
_Uval$ = 256
__formal$ = 264
?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z PROC ; std::uniform_int<int>::_Adjust, COMDAT

; 1903 :     static _Uty _Adjust(_Uty _Uval, true_type) { // convert signed ranges to unsigned ranges and vice versa

$LN5:
	mov	BYTE PTR [rsp+16], dl
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1904 :         const _Uty _Adjuster = (_Uty(-1) >> 1) + 1; // 2^(N-1)

	mov	DWORD PTR _Adjuster$[rbp], -2147483648	; 80000000H

; 1905 : 
; 1906 :         if (_Uval < _Adjuster) {

	cmp	DWORD PTR _Uval$[rbp], -2147483648	; 80000000H
	jae	SHORT $LN2@Adjust

; 1907 :             return static_cast<_Uty>(_Uval + _Adjuster);

	mov	eax, DWORD PTR _Uval$[rbp]
	add	eax, -2147483648			; 80000000H
	jmp	SHORT $LN1@Adjust

; 1908 :         } else {

	jmp	SHORT $LN3@Adjust
$LN2@Adjust:

; 1909 :             return static_cast<_Uty>(_Uval - _Adjuster);

	mov	eax, DWORD PTR _Uval$[rbp]
	sub	eax, -2147483648			; 80000000H
$LN3@Adjust:
$LN1@Adjust:

; 1910 :         }
; 1911 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z ENDP ; std::uniform_int<int>::_Adjust
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?_Adjust@?$uniform_int@H@std@@CAII@Z
_TEXT	SEGMENT
$T1 = 228
_Uval$ = 288
?_Adjust@?$uniform_int@H@std@@CAII@Z PROC		; std::uniform_int<int>::_Adjust, COMDAT

; 1899 :     static _Uty _Adjust(_Uty _Uval) { // convert signed ranges to unsigned ranges and vice versa

$LN3:
	mov	DWORD PTR [rsp+8], ecx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, DWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1900 :         return _Adjust(_Uval, is_signed<_Ty>());

	movzx	edx, BYTE PTR $T1[rbp]
	mov	ecx, DWORD PTR _Uval$[rbp]
	call	?_Adjust@?$uniform_int@H@std@@CAIIU?$integral_constant@_N$00@2@@Z ; std::uniform_int<int>::_Adjust

; 1901 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust@?$uniform_int@H@std@@CAII@Z ENDP		; std::uniform_int<int>::_Adjust
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??0?$uniform_int@H@std@@QEAA@HH@Z
_TEXT	SEGMENT
tv70 = 192
this$ = 240
_Min0$ = 248
_Max0$ = 256
??0?$uniform_int@H@std@@QEAA@HH@Z PROC			; std::uniform_int<int>::uniform_int<int>, COMDAT

; 1815 :     explicit uniform_int(_Ty _Min0 = 0, _Ty _Max0 = 9) : _Par(_Min0, _Max0) { // construct from parameters

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	mov	r8d, DWORD PTR _Max0$[rbp]
	mov	edx, DWORD PTR _Min0$[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??0param_type@?$uniform_int@H@std@@QEAA@HH@Z ; std::uniform_int<int>::param_type::param_type

; 1816 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??0?$uniform_int@H@std@@QEAA@HH@Z ENDP			; std::uniform_int<int>::uniform_int<int>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ
_TEXT	SEGMENT
?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ PROC ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::max, COMDAT

; 1317 :     _NODISCARD static constexpr result_type(max)() { // return maximum possible generated value

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1318 :         return _Mybase::_WMSK;

	mov	eax, -1					; ffffffffH

; 1319 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?max@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ENDP ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::max
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ
_TEXT	SEGMENT
?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ PROC ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::min, COMDAT

; 1313 :     _NODISCARD static constexpr result_type(min)() { // return minimum possible generated value

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1314 :         return 0;

	xor	eax, eax

; 1315 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?min@?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@SAIXZ ENDP ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::min
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z
_TEXT	SEGMENT
this$ = 224
_X0$ = 232
??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z PROC ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>, COMDAT

; 1269 :     explicit mersenne_twister_engine(result_type _X0 = default_seed)

$LN3:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1270 :         : _Mybase(_X0, _Dx, _Fx) { // construct with default seed

	mov	r9d, 1812433253				; 6c078965H
	mov	r8d, -1					; ffffffffH
	mov	edx, DWORD PTR _X0$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>

; 1271 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z ENDP ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ
_TEXT	SEGMENT
_Ix$ = 4
_Tmp$1 = 36
tv131 = 244
this$ = 288
?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ PROC ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_upper, COMDAT

; 1191 :     void _Refill_upper() { // compute values for the upper half of the history array

$LN8:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1192 :         int _Ix;
; 1193 :         for (_Ix = _Nx; _Ix < 2 * _Nx; ++_Ix) { // fill in values

	mov	DWORD PTR _Ix$[rbp], 624		; 00000270H
	jmp	SHORT $LN4@Refill_upp
$LN2@Refill_upp:
	mov	eax, DWORD PTR _Ix$[rbp]
	inc	eax
	mov	DWORD PTR _Ix$[rbp], eax
$LN4@Refill_upp:
	cmp	DWORD PTR _Ix$[rbp], 1248		; 000004e0H
	jge	$LN3@Refill_upp

; 1194 :             _Ty _Tmp       = (this->_Ax[_Ix - _Nx] & _HMSK) | (this->_Ax[_Ix - _Nx + 1] & _LMSK);

	mov	eax, DWORD PTR _Ix$[rbp]
	sub	eax, 624				; 00000270H
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+4]
	and	eax, -2147483648			; 80000000H
	mov	ecx, DWORD PTR _Ix$[rbp]
	sub	ecx, 623				; 0000026fH
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rdx+rcx*4+4]
	btr	ecx, 31
	or	eax, ecx
	mov	DWORD PTR _Tmp$1[rbp], eax

; 1195 :             this->_Ax[_Ix] = (_Tmp >> 1) ^ (_Tmp & 1 ? _Px : 0) ^ this->_Ax[_Ix - _Nx + _Mx];

	mov	eax, DWORD PTR _Tmp$1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN6@Refill_upp
	mov	DWORD PTR tv131[rbp], -1727483681	; 9908b0dfH
	jmp	SHORT $LN7@Refill_upp
$LN6@Refill_upp:
	mov	DWORD PTR tv131[rbp], 0
$LN7@Refill_upp:
	mov	eax, DWORD PTR _Tmp$1[rbp]
	shr	eax, 1
	xor	eax, DWORD PTR tv131[rbp]
	mov	ecx, DWORD PTR _Ix$[rbp]
	sub	ecx, 227				; 000000e3H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rbp]
	xor	eax, DWORD PTR [rdx+rcx*4+4]
	movsxd	rcx, DWORD PTR _Ix$[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rdx+rcx*4+4], eax

; 1196 :         }

	jmp	$LN2@Refill_upp
$LN3@Refill_upp:

; 1197 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ ENDP ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_upper
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ
_TEXT	SEGMENT
_Ix$ = 4
_Tmp$1 = 36
_Tmp$2 = 68
_Tmp$ = 100
tv222 = 308
tv179 = 308
tv131 = 308
this$ = 352
?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ PROC ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_lower, COMDAT

; 1174 :         void _Refill_lower() { // compute values for the lower half of the history array

$LN15:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 360				; 00000168H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 90					; 0000005aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+392]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1175 :         int _Ix;
; 1176 :         for (_Ix = 0; _Ix < _Nx - _Mx; ++_Ix) { // fill in lower region

	mov	DWORD PTR _Ix$[rbp], 0
	jmp	SHORT $LN4@Refill_low
$LN2@Refill_low:
	mov	eax, DWORD PTR _Ix$[rbp]
	inc	eax
	mov	DWORD PTR _Ix$[rbp], eax
$LN4@Refill_low:
	cmp	DWORD PTR _Ix$[rbp], 227		; 000000e3H
	jge	$LN3@Refill_low

; 1177 :             _Ty _Tmp       = (this->_Ax[_Ix + _Nx] & _HMSK) | (this->_Ax[_Ix + _Nx + 1] & _LMSK);

	mov	eax, DWORD PTR _Ix$[rbp]
	add	eax, 624				; 00000270H
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+4]
	and	eax, -2147483648			; 80000000H
	mov	ecx, DWORD PTR _Ix$[rbp]
	add	ecx, 625				; 00000271H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rdx+rcx*4+4]
	btr	ecx, 31
	or	eax, ecx
	mov	DWORD PTR _Tmp$1[rbp], eax

; 1178 :             this->_Ax[_Ix] = (_Tmp >> 1) ^ (_Tmp & 1 ? _Px : 0) ^ this->_Ax[_Ix + _Nx + _Mx];

	mov	eax, DWORD PTR _Tmp$1[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN9@Refill_low
	mov	DWORD PTR tv131[rbp], -1727483681	; 9908b0dfH
	jmp	SHORT $LN10@Refill_low
$LN9@Refill_low:
	mov	DWORD PTR tv131[rbp], 0
$LN10@Refill_low:
	mov	eax, DWORD PTR _Tmp$1[rbp]
	shr	eax, 1
	xor	eax, DWORD PTR tv131[rbp]
	mov	ecx, DWORD PTR _Ix$[rbp]
	add	ecx, 1021				; 000003fdH
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rbp]
	xor	eax, DWORD PTR [rdx+rcx*4+4]
	movsxd	rcx, DWORD PTR _Ix$[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rdx+rcx*4+4], eax

; 1179 :         }

	jmp	$LN2@Refill_low
$LN3@Refill_low:

; 1180 : 
; 1181 :         for (; _Ix < _Nx - 1; ++_Ix) { // fill in upper region (avoids modulus operation)

	jmp	SHORT $LN7@Refill_low
$LN5@Refill_low:
	mov	eax, DWORD PTR _Ix$[rbp]
	inc	eax
	mov	DWORD PTR _Ix$[rbp], eax
$LN7@Refill_low:
	cmp	DWORD PTR _Ix$[rbp], 623		; 0000026fH
	jge	$LN6@Refill_low

; 1182 :             _Ty _Tmp       = (this->_Ax[_Ix + _Nx] & _HMSK) | (this->_Ax[_Ix + _Nx + 1] & _LMSK);

	mov	eax, DWORD PTR _Ix$[rbp]
	add	eax, 624				; 00000270H
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+4]
	and	eax, -2147483648			; 80000000H
	mov	ecx, DWORD PTR _Ix$[rbp]
	add	ecx, 625				; 00000271H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rdx+rcx*4+4]
	btr	ecx, 31
	or	eax, ecx
	mov	DWORD PTR _Tmp$2[rbp], eax

; 1183 :             this->_Ax[_Ix] = (_Tmp >> 1) ^ (_Tmp & 1 ? _Px : 0) ^ this->_Ax[_Ix - _Nx + _Mx];

	mov	eax, DWORD PTR _Tmp$2[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN11@Refill_low
	mov	DWORD PTR tv179[rbp], -1727483681	; 9908b0dfH
	jmp	SHORT $LN12@Refill_low
$LN11@Refill_low:
	mov	DWORD PTR tv179[rbp], 0
$LN12@Refill_low:
	mov	eax, DWORD PTR _Tmp$2[rbp]
	shr	eax, 1
	xor	eax, DWORD PTR tv179[rbp]
	mov	ecx, DWORD PTR _Ix$[rbp]
	sub	ecx, 227				; 000000e3H
	movsxd	rcx, ecx
	mov	rdx, QWORD PTR this$[rbp]
	xor	eax, DWORD PTR [rdx+rcx*4+4]
	movsxd	rcx, DWORD PTR _Ix$[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rdx+rcx*4+4], eax

; 1184 :         }

	jmp	$LN5@Refill_low
$LN6@Refill_low:

; 1185 : 
; 1186 :         _Ty _Tmp       = (this->_Ax[_Ix + _Nx] & _HMSK) | (this->_Ax[0] & _LMSK);

	mov	eax, DWORD PTR _Ix$[rbp]
	add	eax, 624				; 00000270H
	cdqe
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+4]
	and	eax, -2147483648			; 80000000H
	mov	ecx, 4
	imul	rcx, rcx, 0
	mov	rdx, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR [rdx+rcx+4]
	btr	ecx, 31
	or	eax, ecx
	mov	DWORD PTR _Tmp$[rbp], eax

; 1187 :         this->_Ax[_Ix] = (_Tmp >> 1) ^ (_Tmp & 1 ? _Px : 0) ^ this->_Ax[_Mx - 1];

	mov	eax, DWORD PTR _Tmp$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN13@Refill_low
	mov	DWORD PTR tv222[rbp], -1727483681	; 9908b0dfH
	jmp	SHORT $LN14@Refill_low
$LN13@Refill_low:
	mov	DWORD PTR tv222[rbp], 0
$LN14@Refill_low:
	mov	eax, DWORD PTR _Tmp$[rbp]
	shr	eax, 1
	xor	eax, DWORD PTR tv222[rbp]
	mov	ecx, 4
	imul	rcx, rcx, 396				; 0000018cH
	mov	rdx, QWORD PTR this$[rbp]
	xor	eax, DWORD PTR [rdx+rcx+4]
	movsxd	rcx, DWORD PTR _Ix$[rbp]
	mov	rdx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rdx+rcx*4+4], eax

; 1188 :         this->_Idx     = 0;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 0

; 1189 :     }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ ENDP ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_lower
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ
_TEXT	SEGMENT
_Res$ = 4
tv129 = 212
this$ = 256
??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ PROC ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::operator(), COMDAT

; 1150 :     _NODISCARD result_type operator()() { // return next value

$LN6:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1151 :         if (this->_Idx == _Nx) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 624			; 00000270H
	jne	SHORT $LN2@operator

; 1152 :             _Refill_upper();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Refill_upper@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_upper
	jmp	SHORT $LN3@operator
$LN2@operator:

; 1153 :         } else if (2 * _Nx <= this->_Idx) {

	mov	rax, QWORD PTR this$[rbp]
	cmp	DWORD PTR [rax], 1248			; 000004e0H
	jb	SHORT $LN4@operator

; 1154 :             _Refill_lower();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Refill_lower@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@IEAAXXZ ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::_Refill_lower
$LN4@operator:
$LN3@operator:

; 1155 :         }
; 1156 : 
; 1157 :         _Ty _Res = this->_Ax[this->_Idx++] & _WMSK;

	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rcx+rax*4+4]
	mov	DWORD PTR tv129[rbp], eax
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax]
	inc	eax
	mov	rcx, QWORD PTR this$[rbp]
	mov	DWORD PTR [rcx], eax
	mov	eax, DWORD PTR tv129[rbp]
	mov	DWORD PTR _Res$[rbp], eax

; 1158 :         _Res ^= (_Res >> _Ux) & _Dxval;

	mov	eax, DWORD PTR _Res$[rbp]
	shr	eax, 11
	mov	rcx, QWORD PTR this$[rbp]
	and	eax, DWORD PTR [rcx+4996]
	mov	ecx, DWORD PTR _Res$[rbp]
	xor	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Res$[rbp], eax

; 1159 :         _Res ^= (_Res << _Sx) & _Bx;

	mov	eax, DWORD PTR _Res$[rbp]
	shl	eax, 7
	and	eax, -1658038656			; 9d2c5680H
	mov	ecx, DWORD PTR _Res$[rbp]
	xor	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Res$[rbp], eax

; 1160 :         _Res ^= (_Res << _Tx) & _Cx;

	mov	eax, DWORD PTR _Res$[rbp]
	shl	eax, 15
	and	eax, -272236544				; efc60000H
	mov	ecx, DWORD PTR _Res$[rbp]
	xor	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Res$[rbp], eax

; 1161 :         _Res ^= (_Res & _WMSK) >> _Lx;

	mov	eax, DWORD PTR _Res$[rbp]
	shr	eax, 18
	mov	ecx, DWORD PTR _Res$[rbp]
	xor	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR _Res$[rbp], eax

; 1162 :         return _Res;

	mov	eax, DWORD PTR _Res$[rbp]

; 1163 :     }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??R?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAIXZ ENDP ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z
_TEXT	SEGMENT
_Prev$ = 4
_Ix$1 = 36
tv84 = 244
this$ = 288
_X0$ = 296
_Fx$ = 304
?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z PROC ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::seed, COMDAT

; 1114 :     void seed(_Ty _X0 = default_seed, _Ty _Fx = static_cast<_Ty>(1812433253)) {

$LN6:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1115 :         // set initial values from specified value
; 1116 :         _Ty _Prev = this->_Ax[0] = _X0 & _WMSK;

	mov	eax, 4
	imul	rax, rax, 0
	mov	rcx, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR _X0$[rbp]
	mov	DWORD PTR [rcx+rax+4], edx
	mov	eax, DWORD PTR _X0$[rbp]
	mov	DWORD PTR _Prev$[rbp], eax

; 1117 :         for (int _Ix = 1; _Ix < _Nx; ++_Ix) {

	mov	DWORD PTR _Ix$1[rbp], 1
	jmp	SHORT $LN4@seed
$LN2@seed:
	mov	eax, DWORD PTR _Ix$1[rbp]
	inc	eax
	mov	DWORD PTR _Ix$1[rbp], eax
$LN4@seed:
	cmp	DWORD PTR _Ix$1[rbp], 624		; 00000270H
	jge	SHORT $LN3@seed

; 1118 :             _Prev = this->_Ax[_Ix] = (_Ix + _Fx * (_Prev ^ (_Prev >> (_Wx - 2)))) & _WMSK;

	mov	eax, DWORD PTR _Prev$[rbp]
	shr	eax, 30
	mov	ecx, DWORD PTR _Prev$[rbp]
	xor	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR _Fx$[rbp]
	imul	ecx, eax
	mov	eax, ecx
	mov	ecx, DWORD PTR _Ix$1[rbp]
	add	ecx, eax
	mov	DWORD PTR tv84[rbp], ecx
	movsxd	rax, DWORD PTR _Ix$1[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR tv84[rbp]
	mov	DWORD PTR [rcx+rax*4+4], edx
	mov	eax, DWORD PTR tv84[rbp]
	mov	DWORD PTR _Prev$[rbp], eax

; 1119 :         }

	jmp	SHORT $LN2@seed
$LN3@seed:

; 1120 : 
; 1121 :         this->_Idx = _Nx;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax], 624			; 00000270H

; 1122 :     }

	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z ENDP ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::seed
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z
_TEXT	SEGMENT
this$ = 224
_X0$ = 232
_Dxarg$ = 240
_Fxarg$ = 248
??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z PROC ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>, COMDAT

; 1104 :     explicit mersenne_twister(_Ty _X0 = default_seed, _Ty _Dxarg = _WMSK, _Ty _Fxarg = static_cast<_Ty>(1812433253))

$LN3:
	mov	DWORD PTR [rsp+32], r9d
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 1105 :         : _Dxval(_Dxarg) { // construct with specified seed

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR _Dxarg$[rbp]
	mov	DWORD PTR [rax+4996], ecx

; 1106 :         seed(_X0, _Fxarg);

	mov	r8d, DWORD PTR _Fxarg$[rbp]
	mov	edx, DWORD PTR _X0$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	?seed@?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAAXII@Z ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::seed

; 1107 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$mersenne_twister@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@@std@@QEAA@III@Z ENDP ; std::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>::mersenne_twister<unsigned int,32,624,397,31,2567483615,11,7,2636928640,15,4022730752,18>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?GetSize@Game@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetSize@Game@@QEBAHXZ PROC				; Game::GetSize, COMDAT

; 97   : int Game::GetSize() const { return snake.size; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+16]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetSize@Game@@QEBAHXZ ENDP				; Game::GetSize
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?GetScore@Game@@QEBAHXZ
_TEXT	SEGMENT
this$ = 224
?GetScore@Game@@QEBAHXZ PROC				; Game::GetScore, COMDAT

; 96   : int Game::GetScore() const { return score; }

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	eax, DWORD PTR [rax+5100]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?GetScore@Game@@QEBAHXZ ENDP				; Game::GetScore
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z
_TEXT	SEGMENT
title_timestamp$ = 4
frame_start$ = 36
frame_end$ = 68
frame_duration$ = 100
frame_count$ = 132
running$ = 164
$T4 = 392
$T5 = 488
tv76 = 504
tv73 = 504
tv138 = 512
__$ArrayPad$ = 520
this$ = 560
controller$ = 568
playzone$ = 576
target_frame_duration$ = 584
?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z PROC ; Game::Run, COMDAT

; 24   :                std::size_t target_frame_duration) {

$LN8:
	mov	QWORD PTR [rsp+32], r9
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 568				; 00000238H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 142				; 0000008eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+600]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode

; 25   :   Uint32 title_timestamp = SDL_GetTicks();

	call	SDL_GetTicks
	mov	DWORD PTR title_timestamp$[rbp], eax

; 26   :   Uint32 frame_start;
; 27   :   Uint32 frame_end;
; 28   :   Uint32 frame_duration;
; 29   :   int frame_count = 0;

	mov	DWORD PTR frame_count$[rbp], 0

; 30   :   bool running = true;

	mov	BYTE PTR running$[rbp], 1
$LN2@Run:

; 31   : 
; 32   :   while (running) {

	movzx	eax, BYTE PTR running$[rbp]
	test	eax, eax
	je	$LN3@Run

; 33   :     frame_start = SDL_GetTicks();

	call	SDL_GetTicks
	mov	DWORD PTR frame_start$[rbp], eax

; 34   : 
; 35   :     // Input, Update, Render - the main game loop.
; 36   :     controller->HandleInput(running, snake);

	mov	rax, QWORD PTR controller$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv73[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	mov	r8, rax
	lea	rdx, QWORD PTR running$[rbp]
	mov	rcx, QWORD PTR tv73[rbp]
	call	?HandleInput@Controller@controller@ui_layer@@QEBAXAEA_NAEAVSnake@@@Z ; ui_layer::controller::Controller::HandleInput

; 37   :     Update();

	mov	rcx, QWORD PTR this$[rbp]
	call	?Update@Game@@AEAAXXZ			; Game::Update

; 38   :     playzone.Render(snake, food);

	lea	rax, QWORD PTR $T4[rbp]
	mov	QWORD PTR $T5[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 72					; 00000048H
	mov	QWORD PTR tv76[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	mov	rdx, rcx
	mov	rcx, QWORD PTR $T5[rbp]
	call	??0Snake@@QEAA@AEBV0@@Z
	mov	QWORD PTR tv138[rbp], rax
	mov	rax, QWORD PTR tv76[rbp]
	mov	r8, rax
	mov	rdx, QWORD PTR tv138[rbp]
	mov	rcx, QWORD PTR playzone$[rbp]
	call	?Render@PlayZone@@QEAAXVSnake@@AEBUSDL_Point@@@Z ; PlayZone::Render

; 39   : 
; 40   :     frame_end = SDL_GetTicks();

	call	SDL_GetTicks
	mov	DWORD PTR frame_end$[rbp], eax

; 41   : 
; 42   :     // Keep track of how long each loop through the input/update/render cycle
; 43   :     // takes.
; 44   :     frame_count++;

	mov	eax, DWORD PTR frame_count$[rbp]
	inc	eax
	mov	DWORD PTR frame_count$[rbp], eax

; 45   :     frame_duration = frame_end - frame_start;

	mov	eax, DWORD PTR frame_start$[rbp]
	mov	ecx, DWORD PTR frame_end$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	mov	DWORD PTR frame_duration$[rbp], eax

; 46   : 
; 47   :     // After every second, update the window title.
; 48   :     if (frame_end - title_timestamp >= 1000) {

	mov	eax, DWORD PTR title_timestamp$[rbp]
	mov	ecx, DWORD PTR frame_end$[rbp]
	sub	ecx, eax
	mov	eax, ecx
	cmp	eax, 1000				; 000003e8H
	jb	SHORT $LN4@Run

; 49   :       playzone.UpdateWindowTitle(score, frame_count);

	mov	r8d, DWORD PTR frame_count$[rbp]
	mov	rax, QWORD PTR this$[rbp]
	mov	edx, DWORD PTR [rax+5100]
	mov	rcx, QWORD PTR playzone$[rbp]
	call	?UpdateWindowTitle@PlayZone@@QEAAXHH@Z	; PlayZone::UpdateWindowTitle

; 50   :       frame_count = 0;

	mov	DWORD PTR frame_count$[rbp], 0

; 51   :       title_timestamp = frame_end;

	mov	eax, DWORD PTR frame_end$[rbp]
	mov	DWORD PTR title_timestamp$[rbp], eax
$LN4@Run:

; 52   :     }
; 53   : 
; 54   :     // If the time for this frame is too small (i.e. frame_duration is
; 55   :     // smaller than the target ms_per_frame), delay the loop to
; 56   :     // achieve the correct frame rate.
; 57   :     if (frame_duration < target_frame_duration) {

	mov	eax, DWORD PTR frame_duration$[rbp]
	cmp	rax, QWORD PTR target_frame_duration$[rbp]
	jae	SHORT $LN5@Run

; 58   :       SDL_Delay(target_frame_duration - frame_duration);

	mov	eax, DWORD PTR frame_duration$[rbp]
	mov	rcx, QWORD PTR target_frame_duration$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	mov	ecx, eax
	call	SDL_Delay
$LN5@Run:

; 59   :     }
; 60   :   }

	jmp	$LN2@Run
$LN3@Run:

; 61   : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+536]
	pop	rdi
	pop	rbp
	ret	0
?Run@Game@@QEAAXAEBQEAVController@controller@ui_layer@@AEAVPlayZone@@_K@Z ENDP ; Game::Run
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.hpp
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ??0Game@@QEAA@_K0@Z
_TEXT	SEGMENT
tv95 = 192
tv89 = 192
tv83 = 192
tv70 = 192
this$ = 240
grid_width$ = 248
grid_height$ = 256
??0Game@@QEAA@_K0@Z PROC				; Game::Game, COMDAT

; 19   :       random_h(0, static_cast<int>(grid_height)) {

$LN4:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode

; 16   :     : snake(grid_width, grid_height),

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv70[rbp], rax
	mov	r8d, DWORD PTR grid_height$[rbp]
	mov	edx, DWORD PTR grid_width$[rbp]
	mov	rcx, QWORD PTR tv70[rbp]
	call	??0Snake@@QEAA@HH@Z			; Snake::Snake
	npad	1

; 19   :       random_h(0, static_cast<int>(grid_height)) {

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rcx, rax
	call	??0random_device@std@@QEAA@XZ		; std::random_device::random_device

; 17   :       engine(dev()),

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 84					; 00000054H
	mov	QWORD PTR tv83[rbp], rax
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 80					; 00000050H
	mov	rcx, rax
	call	??Rrandom_device@std@@QEAAIXZ		; std::random_device::operator()
	mov	edx, eax
	mov	rcx, QWORD PTR tv83[rbp]
	call	??0?$mersenne_twister_engine@I$0CA@$0CHA@$0BIN@$0BP@$0JJAILANP@$0L@$0PPPPPPPP@$06$0JNCMFGIA@$0P@$0OPMGAAAA@$0BC@$0GMAHIJGF@@std@@QEAA@I@Z ; std::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>::mersenne_twister_engine<unsigned int,32,624,397,31,2567483615,11,4294967295,7,2636928640,15,4022730752,18,1812433253>

; 18   :       random_w(0, static_cast<int>(grid_width)),

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5084				; 000013dcH
	mov	QWORD PTR tv89[rbp], rax
	mov	r8d, DWORD PTR grid_width$[rbp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv89[rbp]
	call	??0?$uniform_int_distribution@H@std@@QEAA@HH@Z ; std::uniform_int_distribution<int>::uniform_int_distribution<int>

; 19   :       random_h(0, static_cast<int>(grid_height)) {

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 5092				; 000013e4H
	mov	QWORD PTR tv95[rbp], rax
	mov	r8d, DWORD PTR grid_height$[rbp]
	xor	edx, edx
	mov	rcx, QWORD PTR tv95[rbp]
	call	??0?$uniform_int_distribution@H@std@@QEAA@HH@Z ; std::uniform_int_distribution<int>::uniform_int_distribution<int>
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.hpp

; 37   :   int score{0};

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+5100], 0
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp

; 20   :   PlaceFood();

	mov	rcx, QWORD PTR this$[rbp]
	call	?PlaceFood@Game@@AEAAXXZ		; Game::PlaceFood
	npad	1

; 21   : }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??0Game@@QEAA@_K0@Z ENDP				; Game::Game
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
tv95 = 192
tv89 = 192
tv83 = 192
tv70 = 192
this$ = 240
grid_width$ = 248
grid_height$ = 256
?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA PROC			; `Game::Game'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Snake@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA ENDP			; `Game::Game'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
tv95 = 192
tv89 = 192
tv83 = 192
tv70 = 192
this$ = 240
grid_width$ = 248
grid_height$ = 256
?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA PROC			; `Game::Game'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1Snake@@QEAA@XZ
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0Game@@QEAA@_K0@Z@4HA ENDP			; `Game::Game'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0Snake@@QEAA@AEBV0@@Z
_TEXT	SEGMENT
tv86 = 192
this$ = 240
__that$ = 248
??0Snake@@QEAA@AEBV0@@Z PROC				; Snake::Snake, COMDAT
$LN4:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	mov	ecx, DWORD PTR [rcx]
	mov	DWORD PTR [rax], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	mov	ecx, DWORD PTR [rcx+4]
	mov	DWORD PTR [rax+4], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	mov	ecx, DWORD PTR [rcx+8]
	mov	DWORD PTR [rax+8], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	movss	xmm0, DWORD PTR [rcx+12]
	movss	DWORD PTR [rax+12], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	mov	ecx, DWORD PTR [rcx+16]
	mov	DWORD PTR [rax+16], ecx
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	movzx	ecx, BYTE PTR [rcx+20]
	mov	BYTE PTR [rax+20], cl
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	movss	xmm0, DWORD PTR [rcx+24]
	movss	DWORD PTR [rax+24], xmm0
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	movss	xmm0, DWORD PTR [rcx+28]
	movss	DWORD PTR [rax+28], xmm0
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	QWORD PTR tv86[rbp], rax
	mov	rax, QWORD PTR __that$[rbp]
	add	rax, 32					; 00000020H
	mov	rdx, rax
	mov	rcx, QWORD PTR tv86[rbp]
	call	??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR __that$[rbp]
	movzx	ecx, BYTE PTR [rcx+64]
	mov	BYTE PTR [rax+64], cl
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
??0Snake@@QEAA@AEBV0@@Z ENDP				; Snake::Snake
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Snake@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1Snake@@QEAA@XZ PROC					; Snake::~Snake, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1Snake@@QEAA@XZ ENDP					; Snake::~Snake
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first, COMDAT

; 1424 :     const _Ty1& _Get_first() const noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1425 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1426 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ PROC ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first, COMDAT

; 1420 :     _Ty1& _Get_first() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1421 :         return *this;

	mov	rax, QWORD PTR this$[rbp]

; 1422 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ ENDP ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ PROC ; std::_Vector_val<std::_Simple_types<SDL_Point> >::_Vector_val<std::_Simple_types<SDL_Point> >, COMDAT

; 314  :     _Vector_val() : _Myfirst(), _Mylast(), _Myend() { // initialize values

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	mov	rcx, QWORD PTR this$[rbp]
	call	??0_Container_base12@std@@QEAA@XZ	; std::_Container_base12::_Container_base12
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+16], 0
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+24], 0

; 315  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@std@@QEAA@XZ ENDP ; std::_Vector_val<std::_Simple_types<SDL_Point> >::_Vector_val<std::_Simple_types<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal, COMDAT

; 1692 :     const _Alty& _Getal() const noexcept { // return const reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1693 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
	npad	1

; 1694 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ
_TEXT	SEGMENT
this$ = 224
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal, COMDAT

; 1688 :     _Alty& _Getal() noexcept { // return reference to allocator

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1689 :         return _Mypair._Get_first();

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, rax
	call	?_Get_first@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Get_first
	npad	1

; 1690 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
tv90 = 312
tv88 = 320
tv86 = 328
this$ = 368
?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Tidy, COMDAT

; 1642 :     void _Tidy() noexcept { // free all storage

$LN4:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1643 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1644 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1645 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1646 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1647 : 
; 1648 :         _My_data._Orphan_all();

	mov	rcx, QWORD PTR _My_data$[rbp]
	call	?_Orphan_all@_Container_base12@std@@QEAAXXZ ; std::_Container_base12::_Orphan_all
	npad	1

; 1649 : 
; 1650 :         if (_Myfirst) { // destroy and deallocate old array

	mov	rax, QWORD PTR _Myfirst$[rbp]
	cmp	QWORD PTR [rax], 0
	je	$LN2@Tidy

; 1651 :             _Destroy(_Myfirst, _Mylast);

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	r8, QWORD PTR [rax]
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rdx, QWORD PTR [rax]
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy
	npad	1

; 1652 :             _Getal().deallocate(_Myfirst, static_cast<size_type>(_Myend - _Myfirst));

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	npad	1
	mov	QWORD PTR tv90[rbp], rax
	mov	rax, QWORD PTR _Myend$[rbp]
	mov	rcx, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR [rcx]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	sar	rax, 3
	mov	QWORD PTR tv88[rbp], rax
	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv86[rbp], rax
	mov	r8, QWORD PTR tv88[rbp]
	mov	rdx, QWORD PTR tv86[rbp]
	mov	rcx, QWORD PTR tv90[rbp]
	call	?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::deallocate
	npad	1

; 1653 : 
; 1654 :             _Myfirst = pointer();

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	QWORD PTR [rax], 0

; 1655 :             _Mylast  = pointer();

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	QWORD PTR [rax], 0

; 1656 :             _Myend   = pointer();

	mov	rax, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rax], 0
$LN2@Tidy:

; 1657 :         }
; 1658 :     }

	lea	rsp, QWORD PTR [rbp+344]
	pop	rdi
	pop	rbp
	ret	0
?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Tidy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z
_TEXT	SEGMENT
_My_data$ = 8
_Myfirst$ = 40
_Mylast$ = 72
_Myend$ = 104
_Newvec$ = 136
tv77 = 344
this$ = 384
_Newcapacity$ = 392
?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Buy_raw, COMDAT

; 1589 :     void _Buy_raw(const size_type _Newcapacity) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 392				; 00000188H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 98					; 00000062H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+424]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1590 :         // allocate array with _Newcapacity elements
; 1591 :         auto& _My_data    = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 1592 :         pointer& _Myfirst = _My_data._Myfirst;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 8
	mov	QWORD PTR _Myfirst$[rbp], rax

; 1593 :         pointer& _Mylast  = _My_data._Mylast;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 16
	mov	QWORD PTR _Mylast$[rbp], rax

; 1594 :         pointer& _Myend   = _My_data._Myend;

	mov	rax, QWORD PTR _My_data$[rbp]
	add	rax, 24
	mov	QWORD PTR _Myend$[rbp], rax

; 1595 : 
; 1596 :         _STL_INTERNAL_CHECK(!_Myfirst && !_Mylast && !_Myend); // check that *this is tidy
; 1597 :         _STL_INTERNAL_CHECK(0 < _Newcapacity && _Newcapacity <= max_size());
; 1598 : 
; 1599 :         const auto _Newvec = _Getal().allocate(_Newcapacity);

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	QWORD PTR tv77[rbp], rax
	mov	rdx, QWORD PTR _Newcapacity$[rbp]
	mov	rcx, QWORD PTR tv77[rbp]
	call	?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z ; std::allocator<SDL_Point>::allocate
	mov	QWORD PTR _Newvec$[rbp], rax

; 1600 :         _Myfirst           = _Newvec;

	mov	rax, QWORD PTR _Myfirst$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1601 :         _Mylast            = _Newvec;

	mov	rax, QWORD PTR _Mylast$[rbp]
	mov	rcx, QWORD PTR _Newvec$[rbp]
	mov	QWORD PTR [rax], rcx

; 1602 :         _Myend             = _Newvec + _Newcapacity;

	mov	rax, QWORD PTR _Newvec$[rbp]
	mov	rcx, QWORD PTR _Newcapacity$[rbp]
	lea	rax, QWORD PTR [rax+rcx*8]
	mov	rcx, QWORD PTR _Myend$[rbp]
	mov	QWORD PTR [rcx], rax

; 1603 :     }

	lea	rsp, QWORD PTR [rbp+360]
	pop	rdi
	pop	rbp
	ret	0
?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Buy_raw
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z
_TEXT	SEGMENT
this$ = 224
_First$ = 232
_Last$ = 240
?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy, COMDAT

; 1567 :     void _Destroy(pointer _First, pointer _Last) { // destroy [_First, _Last) using allocator

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 1568 :         _Destroy_range(_First, _Last, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	r8, rax
	mov	rdx, QWORD PTR _Last$[rbp]
	mov	rcx, QWORD PTR _First$[rbp]
	call	??$_Destroy_range@V?$allocator@USDL_Point@@@std@@@std@@YAXPEAUSDL_Point@@QEAU1@AEAV?$allocator@USDL_Point@@@0@@Z ; std::_Destroy_range<std::allocator<SDL_Point> >

; 1569 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Destroy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXPEAUSDL_Point@@0@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Destroy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
_Alproxy$ = 8
$S1$ = 36
$T4 = 260
__$ArrayPad$ = 280
this$ = 320
??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >, COMDAT

; 623  :     ~vector() noexcept {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 328				; 00000148H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 82					; 00000052H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+360]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 624  :         _Tidy();

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Tidy@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAXXZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Tidy
	npad	1

; 625  : #if _ITERATOR_DEBUG_LEVEL != 0
; 626  :         auto&& _Alproxy = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR $S1$[rbp]
	call	??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><SDL_Point>
	npad	1
	lea	rax, QWORD PTR $S1$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 627  :         _Delete_plain_internal(_Alproxy, _STD exchange(_Mypair._Myval2._Myproxy, nullptr));

	mov	QWORD PTR $T4[rbp], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rdx, QWORD PTR $T4[rbp]
	mov	rcx, rax
	call	??$exchange@PEAU_Container_proxy@std@@$$T@std@@YAPEAU_Container_proxy@0@AEAPEAU10@$$QEA$$T@Z ; std::exchange<std::_Container_proxy *,std::nullptr_t>
	npad	1
	mov	rdx, rax
	mov	rcx, QWORD PTR _Alproxy$[rbp]
	call	??$_Delete_plain_internal@V?$allocator@U_Container_proxy@std@@@std@@@std@@YAXAEAV?$allocator@U_Container_proxy@std@@@0@QEAU_Container_proxy@0@@Z ; std::_Delete_plain_internal<std::allocator<std::_Container_proxy> >
	npad	1

; 628  : #endif // _ITERATOR_DEBUG_LEVEL != 0
; 629  :     }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+296]
	pop	rdi
	pop	rbp
	ret	0
??1?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::~vector<SDL_Point,std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
_Alproxy$ = 8
$S2$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
$T9 = 532
tv78 = 552
tv76 = 560
__$ArrayPad$ = 568
this$ = 608
_Right$ = 616
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >, COMDAT

; 468  :             _Alty_traits::select_on_container_copy_construction(_Right._Getal())) { // construct by copying _Right

$LN6:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 616				; 00000268H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 154				; 0000009aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+648]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode

; 467  :         : _Mypair(_One_then_variadic_args_t(),

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv78[rbp], rax
	mov	rcx, QWORD PTR _Right$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEBAAEBV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $T7[rbp]
	call	?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::select_on_container_copy_construction
	mov	QWORD PTR tv76[rbp], rax
	movzx	eax, BYTE PTR $T8[rbp]
	mov	BYTE PTR $T9[rbp], al
	mov	r8, QWORD PTR tv76[rbp]
	movzx	edx, BYTE PTR $T9[rbp]
	mov	rcx, QWORD PTR tv78[rbp]
	call	??$?0V?$allocator@USDL_Point@@@std@@$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_One_then_variadic_args_t@1@$$QEAV?$allocator@USDL_Point@@@1@@Z ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><std::allocator<SDL_Point> >

; 469  :         auto&& _Alproxy           = _GET_PROXY_ALLOCATOR(_Alty, _Getal());

	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	mov	rdx, rax
	lea	rcx, QWORD PTR $S2$[rbp]
	call	??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><SDL_Point>
	lea	rax, QWORD PTR $S2$[rbp]
	mov	QWORD PTR _Alproxy$[rbp], rax

; 470  :         auto& _My_data            = _Mypair._Myval2;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _My_data$[rbp], rax

; 471  :         const auto& _Right_data   = _Right._Mypair._Myval2;

	mov	rax, QWORD PTR _Right$[rbp]
	mov	QWORD PTR _Right_data$[rbp], rax

; 472  :         const pointer _Rightfirst = _Right_data._Myfirst;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR _Rightfirst$[rbp], rax

; 473  :         const pointer _Rightlast  = _Right_data._Mylast;

	mov	rax, QWORD PTR _Right_data$[rbp]
	mov	rax, QWORD PTR [rax+16]
	mov	QWORD PTR _Rightlast$[rbp], rax

; 474  :         _Container_proxy_ptr<_Alty> _Proxy(_Alproxy, _My_data);

	mov	r8, QWORD PTR _My_data$[rbp]
	mov	rdx, QWORD PTR _Alproxy$[rbp]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??0?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@AEAV?$allocator@U_Container_proxy@std@@@1@AEAU_Container_base12@1@@Z ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	npad	1

; 475  :         if (_Rightfirst != _Rightlast) {

	mov	rax, QWORD PTR _Rightlast$[rbp]
	cmp	QWORD PTR _Rightfirst$[rbp], rax
	je	SHORT $LN2@vector

; 476  :             _Buy_raw(static_cast<size_type>(_Rightlast - _Rightfirst));

	mov	rax, QWORD PTR _Rightfirst$[rbp]
	mov	rcx, QWORD PTR _Rightlast$[rbp]
	sub	rcx, rax
	mov	rax, rcx
	sar	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Buy_raw@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAX_K@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Buy_raw

; 477  :             _Tidy_guard<vector> _Guard{this};

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR _Guard$6[rbp], rax

; 478  :             _My_data._Mylast = _Ucopy(_Rightfirst, _Rightlast, _My_data._Myfirst);

	mov	rax, QWORD PTR _My_data$[rbp]
	mov	r9, QWORD PTR [rax+8]
	mov	r8, QWORD PTR _Rightlast$[rbp]
	mov	rdx, QWORD PTR _Rightfirst$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??$_Ucopy@PEAUSDL_Point@@@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAPEAUSDL_Point@@PEAU2@00@Z ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Ucopy<SDL_Point *>
	mov	rcx, QWORD PTR _My_data$[rbp]
	mov	QWORD PTR [rcx+16], rax

; 479  :             _Guard._Target   = nullptr;

	mov	QWORD PTR _Guard$6[rbp], 0

; 480  :         }

	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >::~_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >
$LN2@vector:

; 481  : 
; 482  :         _Proxy._Release();

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ; std::_Basic_container_proxy_ptr12::_Release
	npad	1

; 483  :     }

	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	mov	rax, QWORD PTR this$[rbp]
	mov	rdi, rax
	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z$rtcFrameData
	call	_RTC_CheckStackVars
	mov	rax, rdi
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	lea	rsp, QWORD PTR [rbp+584]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S2$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
$T9 = 532
tv78 = 552
tv76 = 560
__$ArrayPad$ = 568
this$ = 608
_Right$ = 616
?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$0
text$x	ENDS
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S2$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
$T9 = 532
tv78 = 552
tv76 = 560
__$ArrayPad$ = 568
this$ = 608
_Right$ = 616
?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >::~_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S2$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
$T9 = 532
tv78 = 552
tv76 = 560
__$ArrayPad$ = 568
this$ = 608
_Right$ = 616
?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$0
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Proxy$[rbp]
	call	??1?$_Container_proxy_ptr12@V?$allocator@U_Container_proxy@std@@@std@@@std@@QEAA@XZ ; std::_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >::~_Container_proxy_ptr12<std::allocator<std::_Container_proxy> >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$0@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$0
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT text$x
text$x	SEGMENT
_Alproxy$ = 8
$S2$ = 36
_My_data$ = 72
_Right_data$ = 104
_Rightfirst$ = 136
_Rightlast$ = 168
_Proxy$ = 200
_Guard$6 = 248
$T7 = 468
$T8 = 500
$T9 = 532
tv78 = 552
tv76 = 560
__$ArrayPad$ = 568
this$ = 608
_Right$ = 616
?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA PROC ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$1
	mov	QWORD PTR [rsp+8], rcx
	mov	QWORD PTR [rsp+16], rdx
	push	rbp
	push	rdi
	sub	rsp, 40					; 00000028H
	lea	rbp, QWORD PTR [rdx+32]
	lea	rcx, QWORD PTR _Guard$6[rbp]
	call	??1?$_Tidy_guard@V?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@@std@@QEAA@XZ ; std::_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >::~_Tidy_guard<std::vector<SDL_Point,std::allocator<SDL_Point> > >
	add	rsp, 40					; 00000028H
	pop	rdi
	pop	rbp
	ret	0
?dtor$1@?0???0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@AEBV01@@Z@4HA ENDP ; `std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >'::`1'::dtor$1
text$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vector
;	COMDAT ??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ
_TEXT	SEGMENT
$T1 = 196
$T2 = 228
tv83 = 248
tv69 = 248
this$ = 288
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ PROC ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >, COMDAT

; 385  :     vector() _NOEXCEPT_COND(is_nothrow_default_constructible_v<_Alty>)

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	lea	rcx, OFFSET FLAT:__C9967FC1_vector
	call	__CheckForDebuggerJustMyCode
	npad	1

; 386  :         : _Mypair(_Zero_then_variadic_args_t()) { // construct empty vector

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv69[rbp], rax
	movzx	edx, BYTE PTR $T1[rbp]
	mov	rcx, QWORD PTR tv69[rbp]
	call	??$?0$$V@?$_Compressed_pair@V?$allocator@USDL_Point@@@std@@V?$_Vector_val@U?$_Simple_types@USDL_Point@@@std@@@2@$00@std@@QEAA@U_Zero_then_variadic_args_t@1@@Z ; std::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1>::_Compressed_pair<std::allocator<SDL_Point>,std::_Vector_val<std::_Simple_types<SDL_Point> >,1><>
	npad	1

; 387  :         _Mypair._Myval2._Alloc_proxy(_GET_PROXY_ALLOCATOR(_Alty, _Getal()));

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR tv83[rbp], rax
	mov	rcx, QWORD PTR this$[rbp]
	call	?_Getal@?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@AEAAAEAV?$allocator@USDL_Point@@@2@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::_Getal
	npad	1
	mov	rdx, rax
	lea	rcx, QWORD PTR $T2[rbp]
	call	??$?0USDL_Point@@@?$allocator@U_Container_proxy@std@@@std@@QEAA@AEBV?$allocator@USDL_Point@@@1@@Z ; std::allocator<std::_Container_proxy>::allocator<std::_Container_proxy><SDL_Point>
	npad	1
	mov	rdx, rax
	mov	rcx, QWORD PTR tv83[rbp]
	call	??$_Alloc_proxy@V?$allocator@U_Container_proxy@std@@@std@@@_Container_base12@std@@QEAAX$$QEAV?$allocator@U_Container_proxy@std@@@1@@Z ; std::_Container_base12::_Alloc_proxy<std::allocator<std::_Container_proxy> >
	npad	1

; 388  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ ENDP ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z
_TEXT	SEGMENT
__$ReturnUdt$ = 224
_Al$ = 232
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z PROC ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::select_on_container_copy_construction, COMDAT

; 770  :     _NODISCARD static _Alloc select_on_container_copy_construction(const _Alloc& _Al) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 771  :         return _Al;

	mov	rax, QWORD PTR __$ReturnUdt$[rbp]

; 772  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?select_on_container_copy_construction@?$_Default_allocator_traits@V?$allocator@USDL_Point@@@std@@@std@@SA?AV?$allocator@USDL_Point@@@2@AEBV32@@Z ENDP ; std::_Default_allocator_traits<std::allocator<SDL_Point> >::select_on_container_copy_construction
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Count$ = 232
?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z PROC ; std::allocator<SDL_Point>::allocate, COMDAT

; 870  :     _NODISCARD _DECLSPEC_ALLOCATOR _Ty* allocate(_CRT_GUARDOVERFLOW const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 871  :         return static_cast<_Ty*>(_Allocate<_New_alignof<_Ty>>(_Get_size_of_n<sizeof(_Ty)>(_Count)));

	mov	rcx, QWORD PTR _Count$[rbp]
	call	??$_Get_size_of_n@$07@std@@YA_K_K@Z	; std::_Get_size_of_n<8>
	mov	rcx, rax
	call	??$_Allocate@$0BA@U_Default_allocate_traits@std@@$0A@@std@@YAPEAX_K@Z ; std::_Allocate<16,std::_Default_allocate_traits,0>

; 872  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?allocate@?$allocator@USDL_Point@@@std@@QEAAPEAUSDL_Point@@_K@Z ENDP ; std::allocator<SDL_Point>::allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z
_TEXT	SEGMENT
this$ = 224
_Ptr$ = 232
_Count$ = 240
?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z PROC ; std::allocator<SDL_Point>::deallocate, COMDAT

; 865  :     void deallocate(_Ty* const _Ptr, const size_t _Count) {

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 866  :         // no overflow check on the following multiply; we assume _Allocate did that check
; 867  :         _Deallocate<_New_alignof<_Ty>>(_Ptr, sizeof(_Ty) * _Count);

	mov	rax, QWORD PTR _Count$[rbp]
	shl	rax, 3
	mov	rdx, rax
	mov	rcx, QWORD PTR _Ptr$[rbp]
	call	??$_Deallocate@$0BA@$0A@@std@@YAXPEAX_K@Z ; std::_Deallocate<16,0>

; 868  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?deallocate@?$allocator@USDL_Point@@@std@@QEAAXQEAUSDL_Point@@_K@Z ENDP ; std::allocator<SDL_Point>::deallocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0?$allocator@USDL_Point@@@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0?$allocator@USDL_Point@@@std@@QEAA@XZ PROC		; std::allocator<SDL_Point>::allocator<SDL_Point>, COMDAT

; 859  :     constexpr allocator() noexcept {}

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0?$allocator@USDL_Point@@@std@@QEAA@XZ ENDP		; std::allocator<SDL_Point>::allocator<SDL_Point>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\snake\Snake.hpp
;	COMDAT ??0Snake@@QEAA@HH@Z
_TEXT	SEGMENT
this$ = 224
grid_width$ = 232
grid_height$ = 240
??0Snake@@QEAA@HH@Z PROC				; Snake::Snake, COMDAT

; 24   :         head_y(grid_height / 2) {}

$LN4:
	mov	DWORD PTR [rsp+24], r8d
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__BB5134BF_Snake@hpp
	call	__CheckForDebuggerJustMyCode

; 21   :       : grid_width(grid_width),

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR grid_width$[rbp]
	mov	DWORD PTR [rax], ecx

; 22   :         grid_height(grid_height),

	mov	rax, QWORD PTR this$[rbp]
	mov	ecx, DWORD PTR grid_height$[rbp]
	mov	DWORD PTR [rax+4], ecx

; 25   : 
; 26   :   void Update();
; 27   : 
; 28   :   void GrowBody();
; 29   :   bool SnakeCell(int x, int y);
; 30   : 
; 31   :   Direction direction = Direction::kUp;

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+8], 0

; 32   : 
; 33   :   float speed{0.1f};

	mov	rax, QWORD PTR this$[rbp]
	movss	xmm0, DWORD PTR __real@3dcccccd
	movss	DWORD PTR [rax+12], xmm0

; 34   :   int size{1};

	mov	rax, QWORD PTR this$[rbp]
	mov	DWORD PTR [rax+16], 1

; 35   :   bool alive{true};

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+20], 1

; 23   :         head_x(grid_width / 2),

	mov	eax, DWORD PTR grid_width$[rbp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+24], xmm0

; 24   :         head_y(grid_height / 2) {}

	mov	eax, DWORD PTR grid_height$[rbp]
	cdq
	sub	eax, edx
	sar	eax, 1
	cvtsi2ss xmm0, eax
	mov	rax, QWORD PTR this$[rbp]
	movss	DWORD PTR [rax+28], xmm0
	mov	rax, QWORD PTR this$[rbp]
	add	rax, 32					; 00000020H
	mov	rcx, rax
	call	??0?$vector@USDL_Point@@V?$allocator@USDL_Point@@@std@@@std@@QEAA@XZ ; std::vector<SDL_Point,std::allocator<SDL_Point> >::vector<SDL_Point,std::allocator<SDL_Point> >

; 36   :   float head_x;
; 37   :   float head_y;
; 38   :   std::vector<SDL_Point> body;
; 39   : 
; 40   :  private:
; 41   :   void UpdateHead();
; 42   :   void UpdateBody(SDL_Point &current_cell, SDL_Point &prev_cell);
; 43   : 
; 44   :   bool growing{false};

	mov	rax, QWORD PTR this$[rbp]
	mov	BYTE PTR [rax+64], 0

; 24   :         head_y(grid_height / 2) {}

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0Snake@@QEAA@HH@Z ENDP				; Snake::Snake
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??Rrandom_device@std@@QEAAIXZ
_TEXT	SEGMENT
this$ = 224
??Rrandom_device@std@@QEAAIXZ PROC			; std::random_device::operator(), COMDAT

; 5126 :     _NODISCARD result_type operator()() { // return next value

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 5127 :         return _Random_device();

	call	?_Random_device@std@@YAIXZ		; std::_Random_device

; 5128 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??Rrandom_device@std@@QEAAIXZ ENDP			; std::random_device::operator()
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\random
;	COMDAT ??0random_device@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0random_device@std@@QEAA@XZ PROC			; std::random_device::random_device, COMDAT

; 5108 :     explicit random_device() { // construct

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__C4C3ED4F_random
	call	__CheckForDebuggerJustMyCode

; 5109 :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0random_device@std@@QEAA@XZ ENDP			; std::random_device::random_device
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xstddef
;	COMDAT ??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z
_TEXT	SEGMENT
_Val$ = 224
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z PROC ; std::addressof<std::_Container_base12>, COMDAT

; 279  : _NODISCARD constexpr _Ty* addressof(_Ty& _Val) noexcept { // return address of _Val

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__46C44D95_xstddef
	call	__CheckForDebuggerJustMyCode
	npad	1

; 280  :     return __builtin_addressof(_Val);

	mov	rax, QWORD PTR _Val$[rbp]

; 281  : }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??$addressof@U_Container_base12@std@@@std@@YAPEAU_Container_base12@0@AEAU10@@Z ENDP ; std::addressof<std::_Container_base12>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ
_TEXT	SEGMENT
this$ = 224
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ PROC ; std::_Basic_container_proxy_ptr12::_Release, COMDAT

; 1348 :     void _Release() noexcept { // disengage this _Basic_container_proxy_ptr12

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1349 :         _Ptr = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0

; 1350 :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Release@_Basic_container_proxy_ptr12@std@@QEAAXXZ ENDP ; std::_Basic_container_proxy_ptr12::_Release
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z
_TEXT	SEGMENT
$T1 = 200
tv78 = 216
_Obj$ = 256
<_Args_0>$ = 264
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z PROC ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>, COMDAT

; 198  : void _Construct_in_place(_Ty& _Obj, _Types&&... _Args) _NOEXCEPT_COND(is_nothrow_constructible_v<_Ty, _Types...>) {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 264				; 00000108H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+296]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rcx, QWORD PTR _Obj$[rbp]
	call	??$addressof@U_Container_proxy@std@@@std@@YAPEAU_Container_proxy@0@AEAU10@@Z ; std::addressof<std::_Container_proxy>
	npad	1
	mov	rdx, rax
	mov	ecx, 16
	call	??2@YAPEAX_KPEAX@Z			; operator new
	npad	1
	mov	QWORD PTR $T1[rbp], rax
	mov	rcx, QWORD PTR <_Args_0>$[rbp]
	call	??$forward@PEAU_Container_base12@std@@@std@@YA$$QEAPEAU_Container_base12@0@AEAPEAU10@@Z ; std::forward<std::_Container_base12 *>
	npad	1
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR tv78[rbp], rax
	mov	rdx, QWORD PTR tv78[rbp]
	mov	rcx, QWORD PTR $T1[rbp]
	call	??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ; std::_Container_proxy::_Container_proxy
	npad	1

; 199  :     ::new (const_cast<void*>(static_cast<const volatile void*>(_STD addressof(_Obj))))
; 200  :         _Ty(_STD forward<_Types>(_Args)...);
; 201  : }

	lea	rsp, QWORD PTR [rbp+232]
	pop	rdi
	pop	rbp
	ret	0
??$_Construct_in_place@U_Container_proxy@std@@PEAU_Container_base12@2@@std@@YAXAEAU_Container_proxy@0@$$QEAPEAU_Container_base12@0@@Z ENDP ; std::_Construct_in_place<std::_Container_proxy,std::_Container_base12 *>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Orphan_all@_Container_base12@std@@QEAAXXZ
_TEXT	SEGMENT
_Lock$4 = 4
_Pnext$5 = 40
__$ArrayPad$ = 248
this$ = 288
?_Orphan_all@_Container_base12@std@@QEAAXXZ PROC	; std::_Container_base12::_Orphan_all, COMDAT

; 1288 : inline void _Container_base12::_Orphan_all() noexcept {

$LN7:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 296				; 00000128H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 74					; 0000004aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+328]
	mov	rax, QWORD PTR __security_cookie
	xor	rax, rbp
	mov	QWORD PTR __$ArrayPad$[rbp], rax
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1

; 1289 : #if _ITERATOR_DEBUG_LEVEL == 2
; 1290 :     if (_Myproxy) { // proxy allocated, drain it

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN5@Orphan_all

; 1291 :         _Lockit _Lock(_LOCK_DEBUG);

	mov	edx, 3
	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??0_Lockit@std@@QEAA@H@Z
	npad	1

; 1292 : 
; 1293 :         for (auto _Pnext = &_Myproxy->_Myfirstiter; *_Pnext; *_Pnext = (*_Pnext)->_Mynextiter) {

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 8
	mov	QWORD PTR _Pnext$5[rbp], rax
	jmp	SHORT $LN4@Orphan_all
$LN2@Orphan_all:
	mov	rax, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	rcx, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR [rcx], rax
$LN4@Orphan_all:
	mov	rax, QWORD PTR _Pnext$5[rbp]
	cmp	QWORD PTR [rax], 0
	je	SHORT $LN3@Orphan_all

; 1294 :             (*_Pnext)->_Myproxy = nullptr;

	mov	rax, QWORD PTR _Pnext$5[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax], 0

; 1295 :         }

	jmp	SHORT $LN2@Orphan_all
$LN3@Orphan_all:

; 1296 : 
; 1297 :         _Myproxy->_Myfirstiter = nullptr;

	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR [rax+8], 0

; 1298 :     }

	lea	rcx, QWORD PTR _Lock$4[rbp]
	call	QWORD PTR __imp_??1_Lockit@std@@QEAA@XZ
	npad	1
$LN5@Orphan_all:

; 1299 : #endif // _ITERATOR_DEBUG_LEVEL == 2
; 1300 : }

	lea	rcx, QWORD PTR [rbp-32]
	lea	rdx, OFFSET FLAT:?_Orphan_all@_Container_base12@std@@QEAAXXZ$rtcFrameData
	call	_RTC_CheckStackVars
	npad	1
	mov	rcx, QWORD PTR __$ArrayPad$[rbp]
	xor	rcx, rbp
	call	__security_check_cookie
	npad	1
	lea	rsp, QWORD PTR [rbp+264]
	pop	rdi
	pop	rbp
	ret	0
?_Orphan_all@_Container_base12@std@@QEAAXXZ ENDP	; std::_Container_base12::_Orphan_all
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_base12@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0_Container_base12@std@@QEAA@XZ PROC			; std::_Container_base12::_Container_base12, COMDAT

; 1175 :     _Container_base12() : _Myproxy(nullptr) {} // construct childless container

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_base12@std@@QEAA@XZ ENDP			; std::_Container_base12::_Container_base12
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z
_TEXT	SEGMENT
this$ = 224
_Mycont_$ = 232
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z PROC ; std::_Container_proxy::_Container_proxy, COMDAT

; 1167 :     _Container_proxy(_Container_base12* _Mycont_) noexcept : _Mycont(_Mycont_), _Myfirstiter(nullptr) {}

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Mycont_$[rbp]
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	mov	QWORD PTR [rax+8], 0
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0_Container_proxy@std@@QEAA@PEAU_Container_base12@1@@Z ENDP ; std::_Container_proxy::_Container_proxy
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z
_TEXT	SEGMENT
_Ptr_user$ = 8
_Ptr_container$ = 40
_Min_back_shift$ = 72
_Back_shift$ = 104
_Ptr$ = 352
_Bytes$ = 360
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z PROC ; std::_Adjust_manually_vector_aligned, COMDAT

; 102  : inline void _Adjust_manually_vector_aligned(void*& _Ptr, size_t& _Bytes) {

$LN21:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 376				; 00000178H
	lea	rbp, QWORD PTR [rsp+48]
	mov	rdi, rsp
	mov	ecx, 94					; 0000005eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+408]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 103  :     // adjust parameters from _Allocate_manually_vector_aligned to pass to operator delete
; 104  :     _Bytes += _Non_user_size;

	mov	rax, QWORD PTR _Bytes$[rbp]
	mov	rax, QWORD PTR [rax]
	add	rax, 47					; 0000002fH
	mov	rcx, QWORD PTR _Bytes$[rbp]
	mov	QWORD PTR [rcx], rax

; 105  : 
; 106  :     const uintptr_t* const _Ptr_user = reinterpret_cast<uintptr_t*>(_Ptr);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rax, QWORD PTR [rax]
	mov	QWORD PTR _Ptr_user$[rbp], rax

; 107  :     const uintptr_t _Ptr_container   = _Ptr_user[-1];

	mov	eax, 8
	imul	rax, rax, -1
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rax, QWORD PTR [rcx+rax]
	mov	QWORD PTR _Ptr_container$[rbp], rax
$LN4@Adjust_man:

; 108  : 
; 109  :     // If the following asserts, it likely means that we are performing
; 110  :     // an aligned delete on memory coming from an unaligned allocation.
; 111  :     _STL_ASSERT(_Ptr_user[-2] == _Big_allocation_sentinel, "invalid argument");

	mov	eax, 8
	imul	rax, rax, -2
	mov	rcx, QWORD PTR _Ptr_user$[rbp]
	mov	rdx, -361700864190383366		; fafafafafafafafaH
	cmp	QWORD PTR [rcx+rax], rdx
	jne	SHORT $LN14@Adjust_man
	jmp	SHORT $LN15@Adjust_man
$LN14@Adjust_man:
$LN7@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN19@Adjust_man
	int	3
	xor	eax, eax
$LN19@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 9
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN7@Adjust_man
$LN15@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN4@Adjust_man

; 112  : 
; 113  :     // Extra paranoia on aligned allocation/deallocation; ensure _Ptr_container is
; 114  :     // in range [_Min_back_shift, _Non_user_size]
; 115  : #ifdef _DEBUG
; 116  :     constexpr uintptr_t _Min_back_shift = 2 * sizeof(void*);

	mov	QWORD PTR _Min_back_shift$[rbp], 16

; 117  : #else // ^^^ _DEBUG ^^^ // vvv !_DEBUG vvv
; 118  :     constexpr uintptr_t _Min_back_shift = sizeof(void*);
; 119  : #endif // _DEBUG
; 120  :     const uintptr_t _Back_shift = reinterpret_cast<uintptr_t>(_Ptr) - _Ptr_container;

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	rax, QWORD PTR [rax]
	sub	rax, rcx
	mov	QWORD PTR _Back_shift$[rbp], rax
$LN10@Adjust_man:

; 121  :     _STL_VERIFY(_Back_shift >= _Min_back_shift && _Back_shift <= _Non_user_size, "invalid argument");

	cmp	QWORD PTR _Back_shift$[rbp], 16
	jb	SHORT $LN16@Adjust_man
	cmp	QWORD PTR _Back_shift$[rbp], 47		; 0000002fH
	ja	SHORT $LN16@Adjust_man
	jmp	SHORT $LN17@Adjust_man
$LN16@Adjust_man:
$LN13@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	lea	rcx, OFFSET FLAT:??_C@_0BB@FCMFBGOM@invalid?5argument@
	mov	QWORD PTR [rsp+40], rcx
	lea	rcx, OFFSET FLAT:??_C@_02DKCKIIND@?$CFs@
	mov	QWORD PTR [rsp+32], rcx
	xor	r9d, r9d
	mov	r8d, eax
	lea	rdx, OFFSET FLAT:??_C@_0GI@FJIKDGOA@C?3?2Program?5Files?5?$CIx86?$CJ?2Microsof@
	mov	ecx, 2
	call	QWORD PTR __imp__CrtDbgReport
	cmp	eax, 1
	jne	SHORT $LN20@Adjust_man
	int	3
	xor	eax, eax
$LN20@Adjust_man:
	mov	eax, DWORD PTR ?__LINE__Var@?0??_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z@4JA
	add	eax, 19
	mov	QWORD PTR [rsp+32], 0
	mov	r9d, eax
	lea	r8, OFFSET FLAT:??_C@_1NA@CDBIFGMM@?$AAC?$AA?3?$AA?2?$AAP?$AAr?$AAo?$AAg?$AAr?$AAa?$AAm?$AA?5?$AAF?$AAi?$AAl?$AAe@
	lea	rdx, OFFSET FLAT:??_C@_1EK@NIFDJFDG@?$AAs?$AAt?$AAd?$AA?3?$AA?3?$AA_?$AAA?$AAd?$AAj?$AAu?$AAs?$AAt?$AA_?$AAm?$AAa@
	lea	rcx, OFFSET FLAT:??_C@_1CG@JNLFBNGN@?$AA?$CC?$AAi?$AAn?$AAv?$AAa?$AAl?$AAi?$AAd?$AA?5?$AAa?$AAr?$AAg?$AAu?$AAm?$AAe@
	call	QWORD PTR __imp__invalid_parameter
	xor	eax, eax
	test	eax, eax
	jne	SHORT $LN13@Adjust_man
$LN17@Adjust_man:
	xor	eax, eax
	test	eax, eax
	jne	$LN10@Adjust_man

; 122  :     _Ptr = reinterpret_cast<void*>(_Ptr_container);

	mov	rax, QWORD PTR _Ptr$[rbp]
	mov	rcx, QWORD PTR _Ptr_container$[rbp]
	mov	QWORD PTR [rax], rcx

; 123  : }

	lea	rsp, QWORD PTR [rbp+328]
	pop	rdi
	pop	rbp
	ret	0
?_Adjust_manually_vector_aligned@std@@YAXAEAPEAXAEA_K@Z ENDP ; std::_Adjust_manually_vector_aligned
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\xmemory
;	COMDAT ?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z
_TEXT	SEGMENT
_Bytes$ = 224
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z PROC ; std::_Default_allocate_traits::_Allocate, COMDAT

; 46   :     _DECLSPEC_ALLOCATOR static void* _Allocate(const size_t _Bytes) {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__DB4EB944_xmemory
	call	__CheckForDebuggerJustMyCode

; 47   :         return ::operator new(_Bytes);

	mov	rcx, QWORD PTR _Bytes$[rbp]
	call	??2@YAPEAX_K@Z				; operator new

; 48   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?_Allocate@_Default_allocate_traits@std@@SAPEAX_K@Z ENDP ; std::_Default_allocate_traits::_Allocate
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\exception
;	COMDAT ?_Throw_bad_array_new_length@std@@YAXXZ
_TEXT	SEGMENT
$T1 = 200
?_Throw_bad_array_new_length@std@@YAXXZ PROC		; std::_Throw_bad_array_new_length, COMDAT

; 323  : [[noreturn]] inline void _Throw_bad_array_new_length() {

$LN3:
	push	rbp
	push	rdi
	sub	rsp, 280				; 00000118H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 70					; 00000046H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	lea	rcx, OFFSET FLAT:__536DB091_exception
	call	__CheckForDebuggerJustMyCode

; 324  :     _THROW(bad_array_new_length{});

	lea	rcx, QWORD PTR $T1[rbp]
	call	??0bad_array_new_length@std@@QEAA@XZ	; std::bad_array_new_length::bad_array_new_length
	lea	rdx, OFFSET FLAT:_TI3?AVbad_array_new_length@std@@
	lea	rcx, QWORD PTR $T1[rbp]
	call	_CxxThrowException
$LN2@Throw_bad_:

; 325  : }

	lea	rsp, QWORD PTR [rbp+248]
	pop	rdi
	pop	rbp
	ret	0
?_Throw_bad_array_new_length@std@@YAXXZ ENDP		; std::_Throw_bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_array_new_length@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_array_new_length@std@@UEAAPEAXI@Z PROC		; std::bad_array_new_length::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_array_new_length@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_array_new_length@std@@UEAAPEAXI@Z ENDP		; std::bad_array_new_length::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_array_new_length@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_array_new_length@std@@QEAA@AEBV01@@Z PROC	; std::bad_array_new_length::bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@QEAA@AEBV01@@Z
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@AEBV01@@Z ENDP	; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_array_new_length@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_array_new_length@std@@UEAA@XZ PROC		; std::bad_array_new_length::~bad_array_new_length, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_array_new_length@std@@UEAA@XZ ENDP		; std::bad_array_new_length::~bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_array_new_length@std@@QEAA@XZ
_TEXT	SEGMENT
this$ = 224
??0bad_array_new_length@std@@QEAA@XZ PROC		; std::bad_array_new_length::bad_array_new_length, COMDAT

; 138  :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 137  :         : bad_alloc("bad array new length")

	lea	rdx, OFFSET FLAT:??_C@_0BF@KINCDENJ@bad?5array?5new?5length@
	mov	rcx, QWORD PTR this$[rbp]
	call	??0bad_alloc@std@@AEAA@QEBD@Z		; std::bad_alloc::bad_alloc
	npad	1

; 138  :     {

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_array_new_length@std@@6B@
	mov	QWORD PTR [rax], rcx

; 139  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_array_new_length@std@@QEAA@XZ ENDP		; std::bad_array_new_length::bad_array_new_length
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gbad_alloc@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gbad_alloc@std@@UEAAPEAXI@Z PROC			; std::bad_alloc::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1bad_alloc@std@@UEAA@XZ
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gbad_alloc@std@@UEAAPEAXI@Z ENDP			; std::bad_alloc::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0bad_alloc@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
__that$ = 232
??0bad_alloc@std@@QEAA@AEBV01@@Z PROC			; std::bad_alloc::bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rdx, QWORD PTR __that$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@AEBV01@@Z	; std::exception::exception
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@QEAA@AEBV01@@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1bad_alloc@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1bad_alloc@std@@UEAA@XZ PROC				; std::bad_alloc::~bad_alloc, COMDAT
$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1bad_alloc@std@@UEAA@XZ ENDP				; std::bad_alloc::~bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0bad_alloc@std@@AEAA@QEBD@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
??0bad_alloc@std@@AEAA@QEBD@Z PROC			; std::bad_alloc::bad_alloc, COMDAT

; 127  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 126  :         : exception(_Message, 1)

	mov	r8d, 1
	mov	rdx, QWORD PTR _Message$[rbp]
	mov	rcx, QWORD PTR this$[rbp]
	call	??0exception@std@@QEAA@QEBDH@Z		; std::exception::exception
	npad	1

; 127  :     {

	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7bad_alloc@std@@6B@
	mov	QWORD PTR [rax], rcx

; 128  :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0bad_alloc@std@@AEAA@QEBD@Z ENDP			; std::bad_alloc::bad_alloc
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_Gexception@std@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 224
__flags$ = 232
??_Gexception@std@@UEAAPEAXI@Z PROC			; std::exception::`scalar deleting destructor', COMDAT
$LN4:
	mov	DWORD PTR [rsp+16], edx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	mov	rcx, QWORD PTR this$[rbp]
	call	??1exception@std@@UEAA@XZ		; std::exception::~exception
	mov	eax, DWORD PTR __flags$[rbp]
	and	eax, 1
	test	eax, eax
	je	SHORT $LN2@scalar
	mov	edx, 24
	mov	rcx, QWORD PTR this$[rbp]
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??_Gexception@std@@UEAAPEAXI@Z ENDP			; std::exception::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ?what@exception@std@@UEBAPEBDXZ
_TEXT	SEGMENT
tv69 = 192
this$ = 240
?what@exception@std@@UEBAPEBDXZ PROC			; std::exception::what, COMDAT

; 91   :     {

$LN5:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 248				; 000000f8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 62					; 0000003eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+280]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode

; 92   :         return _Data._What ? _Data._What : "Unknown exception";

	mov	rax, QWORD PTR this$[rbp]
	cmp	QWORD PTR [rax+8], 0
	je	SHORT $LN3@what
	mov	rax, QWORD PTR this$[rbp]
	mov	rax, QWORD PTR [rax+8]
	mov	QWORD PTR tv69[rbp], rax
	jmp	SHORT $LN4@what
$LN3@what:
	lea	rax, OFFSET FLAT:??_C@_0BC@EOODALEL@Unknown?5exception@
	mov	QWORD PTR tv69[rbp], rax
$LN4@what:
	mov	rax, QWORD PTR tv69[rbp]

; 93   :     }

	lea	rsp, QWORD PTR [rbp+216]
	pop	rdi
	pop	rbp
	ret	0
?what@exception@std@@UEBAPEBDXZ ENDP			; std::exception::what
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??1exception@std@@UEAA@XZ
_TEXT	SEGMENT
this$ = 224
??1exception@std@@UEAA@XZ PROC				; std::exception::~exception, COMDAT

; 86   :     {

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 87   :         __std_exception_destroy(&_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, rax
	call	__std_exception_destroy
	npad	1

; 88   :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??1exception@std@@UEAA@XZ ENDP				; std::exception::~exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@AEBV01@@Z
_TEXT	SEGMENT
this$ = 224
_Other$ = 232
??0exception@std@@QEAA@AEBV01@@Z PROC			; std::exception::exception, COMDAT

; 69   :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 68   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 70   :         __std_exception_copy(&_Other._Data, &_Data);

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rcx, QWORD PTR _Other$[rbp]
	add	rcx, 8
	mov	rdx, rax
	call	__std_exception_copy
	npad	1

; 71   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@AEBV01@@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_exception.h
;	COMDAT ??0exception@std@@QEAA@QEBDH@Z
_TEXT	SEGMENT
this$ = 224
_Message$ = 232
__formal$ = 240
??0exception@std@@QEAA@QEBDH@Z PROC			; std::exception::exception, COMDAT

; 63   :     {

$LN3:
	mov	DWORD PTR [rsp+24], r8d
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__69245D52_vcruntime_exception@h
	call	__CheckForDebuggerJustMyCode
	npad	1
	mov	rax, QWORD PTR this$[rbp]
	lea	rcx, OFFSET FLAT:??_7exception@std@@6B@
	mov	QWORD PTR [rax], rcx

; 62   :         : _Data()

	mov	rax, QWORD PTR this$[rbp]
	add	rax, 8
	mov	rdi, rax
	xor	eax, eax
	mov	ecx, 16
	rep stosb

; 64   :         _Data._What = _Message;

	mov	rax, QWORD PTR this$[rbp]
	mov	rcx, QWORD PTR _Message$[rbp]
	mov	QWORD PTR [rax+8], rcx

; 65   :     }

	mov	rax, QWORD PTR this$[rbp]
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??0exception@std@@QEAA@QEBDH@Z ENDP			; std::exception::exception
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.23.28105\include\vcruntime_new.h
;	COMDAT ??2@YAPEAX_KPEAX@Z
_TEXT	SEGMENT
_Size$ = 224
_Where$ = 232
??2@YAPEAX_KPEAX@Z PROC					; operator new, COMDAT

; 168  :     {

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__0A074437_vcruntime_new@h
	call	__CheckForDebuggerJustMyCode
	npad	1

; 169  :         (void)_Size;
; 170  :         return _Where;

	mov	rax, QWORD PTR _Where$[rbp]

; 171  :     }

	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
??2@YAPEAX_KPEAX@Z ENDP					; operator new
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
__formal$ = 240
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+24], r8
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_KW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z PROC ; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAXW4align_val_t@std@@@Z ENDP ; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX_K@Z
_TEXT	SEGMENT
__formal$ = 224
__formal$ = 232
?__empty_global_delete@@YAXPEAX_K@Z PROC		; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+16], rdx
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX_K@Z ENDP		; __empty_global_delete
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\CSUFTitan\Downloads\snakeGame-master (1)\snakeGame-master\SourceCode\domain_layer\game\Game.cpp
;	COMDAT ?__empty_global_delete@@YAXPEAX@Z
_TEXT	SEGMENT
__formal$ = 224
?__empty_global_delete@@YAXPEAX@Z PROC			; __empty_global_delete, COMDAT

$LN3:
	mov	QWORD PTR [rsp+8], rcx
	push	rbp
	push	rdi
	sub	rsp, 232				; 000000e8H
	lea	rbp, QWORD PTR [rsp+32]
	mov	rdi, rsp
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	rcx, QWORD PTR [rsp+264]
	lea	rcx, OFFSET FLAT:__14222817_Game@cpp
	call	__CheckForDebuggerJustMyCode
	npad	1
	lea	rsp, QWORD PTR [rbp+200]
	pop	rdi
	pop	rbp
	ret	0
?__empty_global_delete@@YAXPEAX@Z ENDP			; __empty_global_delete
_TEXT	ENDS
END
